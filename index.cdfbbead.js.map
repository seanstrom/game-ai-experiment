{"mappings":"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","sources":["node_modules/hyperapp/index.js","node_modules/@hyperapp/html/index.js","node_modules/@hyperapp/svg/index.js","node_modules/@thi.ng/fuzzy/index.js","node_modules/@thi.ng/fuzzy/defuzz.js","node_modules/@thi.ng/fuzzy/shapes.js","node_modules/@thi.ng/math/api.js","node_modules/@thi.ng/math/eqdelta.js","node_modules/@thi.ng/math/fit.js","node_modules/@thi.ng/math/interval.js","node_modules/@thi.ng/math/mix.js","node_modules/@thi.ng/fuzzy/strategies/centroid.js","node_modules/@thi.ng/fuzzy/strategies/opts.js","node_modules/@thi.ng/fuzzy/tnorms.js","node_modules/@thi.ng/fuzzy/rules.js","node_modules/@thi.ng/fuzzy/var.js","node_modules/@thi.ng/fuzzy/strategies/bisector.js","node_modules/@thi.ng/fuzzy/strategies/maxima.js","node_modules/@thi.ng/fuzzy-viz/index.js","node_modules/@thi.ng/fuzzy-viz/strategy.js","node_modules/@thi.ng/hiccup-svg/convert.js","node_modules/@thi.ng/checks/implements-function.js","node_modules/@thi.ng/checks/is-array.js","node_modules/@thi.ng/hiccup-svg/circle.js","node_modules/@thi.ng/hiccup-svg/format.js","node_modules/@thi.ng/checks/is-arraylike.js","node_modules/@thi.ng/checks/is-string.js","node_modules/@thi.ng/color/css/css.js","node_modules/@thi.ng/checks/is-number.js","node_modules/@thi.ng/color/convert.js","node_modules/@thi.ng/errors/assert.js","node_modules/@thi.ng/errors/deferror.js","node_modules/@thi.ng/errors/unsupported.js","node_modules/@thi.ng/color/hsl/hsl-css.js","node_modules/@thi.ng/math/prec.js","node_modules/@thi.ng/color/api/constants.js","node_modules/@thi.ng/strings/float.js","node_modules/@thi.ng/memoize/memoizej.js","node_modules/@thi.ng/strings/pad-left.js","node_modules/@thi.ng/strings/repeat.js","node_modules/@thi.ng/strings/percent.js","node_modules/@thi.ng/color/internal/ensure.js","node_modules/@thi.ng/color/hsv/hsv-css.js","node_modules/@thi.ng/color/hsv/hsv-hsl.js","node_modules/@thi.ng/color/clamp.js","node_modules/@thi.ng/vectors/setc.js","node_modules/@thi.ng/color/int/int-css.js","node_modules/@thi.ng/strings/radix.js","node_modules/@thi.ng/hex/index.js","node_modules/@thi.ng/color/int/int-int.js","node_modules/@thi.ng/binary/swizzle.js","node_modules/@thi.ng/color/lab/lab-lch.js","node_modules/@thi.ng/math/angle.js","node_modules/@thi.ng/color/lab/lab-rgb.js","node_modules/@thi.ng/color/lab/lab-xyz.js","node_modules/@thi.ng/color/xyz/xyz-rgb.js","node_modules/@thi.ng/color/internal/matrix-ops.js","node_modules/@thi.ng/vectors/dots.js","node_modules/@thi.ng/vectors/compile/emit.js","node_modules/@thi.ng/transducers/comp.js","node_modules/@thi.ng/compose/comp.js","node_modules/@thi.ng/errors/illegal-arity.js","node_modules/@thi.ng/transducers/ensure.js","node_modules/@thi.ng/transducers/map.js","node_modules/@thi.ng/checks/is-iterable.js","node_modules/@thi.ng/transducers/compr.js","node_modules/@thi.ng/transducers/iterator.js","node_modules/@thi.ng/api/api.js","node_modules/@thi.ng/transducers/push.js","node_modules/@thi.ng/transducers/reduce.js","node_modules/@thi.ng/transducers/reduced.js","node_modules/@thi.ng/transducers/map-indexed.js","node_modules/@thi.ng/transducers/range.js","node_modules/@thi.ng/transducers/str.js","node_modules/@thi.ng/transducers/take.js","node_modules/@thi.ng/transducers/transduce.js","node_modules/@thi.ng/transducers/zip.js","node_modules/@thi.ng/vectors/vop.js","node_modules/@thi.ng/vectors/compile/templates.js","node_modules/@thi.ng/color/rgb/rgb-css.js","node_modules/@thi.ng/color/rgb/rgb-srgb.js","node_modules/@thi.ng/color/linear.js","node_modules/@thi.ng/color/srgb/srgb-css.js","node_modules/@thi.ng/color/internal/scale.js","node_modules/@thi.ng/hiccup-svg/ellipse.js","node_modules/@thi.ng/hiccup-svg/gradients.js","node_modules/@thi.ng/hiccup-svg/image.js","node_modules/@thi.ng/hiccup-svg/line.js","node_modules/@thi.ng/hiccup-svg/path.js","node_modules/@thi.ng/hiccup-svg/points.js","node_modules/@thi.ng/hiccup-svg/polygon.js","node_modules/@thi.ng/hiccup-svg/polyline.js","node_modules/@thi.ng/hiccup-svg/rect.js","node_modules/@thi.ng/hiccup-svg/text.js","node_modules/@thi.ng/hiccup/serialize.js","node_modules/@thi.ng/api/deref.js","node_modules/@thi.ng/checks/is-function.js","node_modules/@thi.ng/checks/is-not-string-iterable.js","node_modules/@thi.ng/checks/is-plain-object.js","node_modules/@thi.ng/errors/illegal-arguments.js","node_modules/@thi.ng/strings/entities.js","node_modules/@thi.ng/hiccup/api.js","node_modules/@thi.ng/hiccup/css.js","node_modules/@thi.ng/hiccup/normalize.js","node_modules/@thi.ng/hiccup/attribs.js","node_modules/@thi.ng/hiccup/prefix.js","node_modules/@thi.ng/text-canvas/bars.js","node_modules/@thi.ng/strings/pad-right.js","node_modules/@thi.ng/text-canvas/api.js","node_modules/@thi.ng/fuzzy-viz/var.js","node_modules/@thi.ng/hiccup-svg/svg.js","node_modules/@thi.ng/prefixes/xml.js","node_modules/global/window.js","node_modules/global/console.js","node_modules/global/document.js",".build/org.transcrypt.__runtime__.py",".build/ffi.js.py",".build/math.py",".build/main.py"],"sourcesContent":["var SSR_NODE = 1\nvar TEXT_NODE = 3\nvar EMPTY_OBJ = {}\nvar EMPTY_ARR = []\nvar SVG_NS = \"http://www.w3.org/2000/svg\"\n\nvar id = (a) => a\nvar map = EMPTY_ARR.map\nvar isArray = Array.isArray\nvar enqueue =\n  typeof requestAnimationFrame !== \"undefined\"\n    ? requestAnimationFrame\n    : setTimeout\n\nvar createClass = (obj) => {\n  var out = \"\"\n\n  if (typeof obj === \"string\") return obj\n\n  if (isArray(obj)) {\n    for (var k = 0, tmp; k < obj.length; k++) {\n      if ((tmp = createClass(obj[k]))) {\n        out += (out && \" \") + tmp\n      }\n    }\n  } else {\n    for (var k in obj) {\n      if (obj[k]) out += (out && \" \") + k\n    }\n  }\n\n  return out\n}\n\nvar shouldRestart = (a, b) => {\n  for (var k in { ...a, ...b }) {\n    if (typeof (isArray(a[k]) ? a[k][0] : a[k]) === \"function\") {\n      b[k] = a[k]\n    } else if (a[k] !== b[k]) return true\n  }\n}\n\nvar patchSubs = (oldSubs, newSubs = EMPTY_ARR, dispatch) => {\n  for (\n    var subs = [], i = 0, oldSub, newSub;\n    i < oldSubs.length || i < newSubs.length;\n    i++\n  ) {\n    oldSub = oldSubs[i]\n    newSub = newSubs[i]\n\n    subs.push(\n      newSub && newSub !== true\n        ? !oldSub ||\n          newSub[0] !== oldSub[0] ||\n          shouldRestart(newSub[1], oldSub[1])\n          ? [\n              newSub[0],\n              newSub[1],\n              (oldSub && oldSub[2](), newSub[0](dispatch, newSub[1])),\n            ]\n          : oldSub\n        : oldSub && oldSub[2]()\n    )\n  }\n  return subs\n}\n\nvar getKey = (vdom) => (vdom == null ? vdom : vdom.key)\n\nvar patchProperty = (node, key, oldValue, newValue, listener, isSvg) => {\n  if (key === \"style\") {\n    for (var k in { ...oldValue, ...newValue }) {\n      oldValue = newValue == null || newValue[k] == null ? \"\" : newValue[k]\n      if (k[0] === \"-\") {\n        node[key].setProperty(k, oldValue)\n      } else {\n        node[key][k] = oldValue\n      }\n    }\n  } else if (key[0] === \"o\" && key[1] === \"n\") {\n    if (\n      !((node.events || (node.events = {}))[(key = key.slice(2))] = newValue)\n    ) {\n      node.removeEventListener(key, listener)\n    } else if (!oldValue) {\n      node.addEventListener(key, listener)\n    }\n  } else if (!isSvg && key !== \"list\" && key !== \"form\" && key in node) {\n    node[key] = newValue == null ? \"\" : newValue\n  } else if (newValue == null || newValue === false) {\n    node.removeAttribute(key)\n  } else {\n    node.setAttribute(key, newValue)\n  }\n}\n\nvar createNode = (vdom, listener, isSvg) => {\n  var props = vdom.props\n  var node =\n    vdom.type === TEXT_NODE\n      ? document.createTextNode(vdom.tag)\n      : (isSvg = isSvg || vdom.tag === \"svg\")\n      ? document.createElementNS(SVG_NS, vdom.tag, props.is && props)\n      : document.createElement(vdom.tag, props.is && props)\n\n  for (var k in props) {\n    patchProperty(node, k, null, props[k], listener, isSvg)\n  }\n\n  for (var i = 0; i < vdom.children.length; i++) {\n    node.appendChild(\n      createNode(\n        (vdom.children[i] = maybeVNode(vdom.children[i])),\n        listener,\n        isSvg\n      )\n    )\n  }\n\n  return (vdom.node = node)\n}\n\nvar patch = (parent, node, oldVNode, newVNode, listener, isSvg) => {\n  if (oldVNode === newVNode) {\n  } else if (\n    oldVNode != null &&\n    oldVNode.type === TEXT_NODE &&\n    newVNode.type === TEXT_NODE\n  ) {\n    if (oldVNode.tag !== newVNode.tag) node.nodeValue = newVNode.tag\n  } else if (oldVNode == null || oldVNode.tag !== newVNode.tag) {\n    node = parent.insertBefore(\n      createNode((newVNode = maybeVNode(newVNode)), listener, isSvg),\n      node\n    )\n    if (oldVNode != null) {\n      parent.removeChild(oldVNode.node)\n    }\n  } else {\n    var tmpVKid\n    var oldVKid\n\n    var oldKey\n    var newKey\n\n    var oldProps = oldVNode.props\n    var newProps = newVNode.props\n\n    var oldVKids = oldVNode.children\n    var newVKids = newVNode.children\n\n    var oldHead = 0\n    var newHead = 0\n    var oldTail = oldVKids.length - 1\n    var newTail = newVKids.length - 1\n\n    isSvg = isSvg || newVNode.tag === \"svg\"\n\n    for (var i in { ...oldProps, ...newProps }) {\n      if (\n        (i === \"value\" || i === \"selected\" || i === \"checked\"\n          ? node[i]\n          : oldProps[i]) !== newProps[i]\n      ) {\n        patchProperty(node, i, oldProps[i], newProps[i], listener, isSvg)\n      }\n    }\n\n    while (newHead <= newTail && oldHead <= oldTail) {\n      if (\n        (oldKey = getKey(oldVKids[oldHead])) == null ||\n        oldKey !== getKey(newVKids[newHead])\n      ) {\n        break\n      }\n\n      patch(\n        node,\n        oldVKids[oldHead].node,\n        oldVKids[oldHead],\n        (newVKids[newHead] = maybeVNode(\n          newVKids[newHead++],\n          oldVKids[oldHead++]\n        )),\n        listener,\n        isSvg\n      )\n    }\n\n    while (newHead <= newTail && oldHead <= oldTail) {\n      if (\n        (oldKey = getKey(oldVKids[oldTail])) == null ||\n        oldKey !== getKey(newVKids[newTail])\n      ) {\n        break\n      }\n\n      patch(\n        node,\n        oldVKids[oldTail].node,\n        oldVKids[oldTail],\n        (newVKids[newTail] = maybeVNode(\n          newVKids[newTail--],\n          oldVKids[oldTail--]\n        )),\n        listener,\n        isSvg\n      )\n    }\n\n    if (oldHead > oldTail) {\n      while (newHead <= newTail) {\n        node.insertBefore(\n          createNode(\n            (newVKids[newHead] = maybeVNode(newVKids[newHead++])),\n            listener,\n            isSvg\n          ),\n          (oldVKid = oldVKids[oldHead]) && oldVKid.node\n        )\n      }\n    } else if (newHead > newTail) {\n      while (oldHead <= oldTail) {\n        node.removeChild(oldVKids[oldHead++].node)\n      }\n    } else {\n      for (var keyed = {}, newKeyed = {}, i = oldHead; i <= oldTail; i++) {\n        if ((oldKey = oldVKids[i].key) != null) {\n          keyed[oldKey] = oldVKids[i]\n        }\n      }\n\n      while (newHead <= newTail) {\n        oldKey = getKey((oldVKid = oldVKids[oldHead]))\n        newKey = getKey(\n          (newVKids[newHead] = maybeVNode(newVKids[newHead], oldVKid))\n        )\n\n        if (\n          newKeyed[oldKey] ||\n          (newKey != null && newKey === getKey(oldVKids[oldHead + 1]))\n        ) {\n          if (oldKey == null) {\n            node.removeChild(oldVKid.node)\n          }\n          oldHead++\n          continue\n        }\n\n        if (newKey == null || oldVNode.type === SSR_NODE) {\n          if (oldKey == null) {\n            patch(\n              node,\n              oldVKid && oldVKid.node,\n              oldVKid,\n              newVKids[newHead],\n              listener,\n              isSvg\n            )\n            newHead++\n          }\n          oldHead++\n        } else {\n          if (oldKey === newKey) {\n            patch(\n              node,\n              oldVKid.node,\n              oldVKid,\n              newVKids[newHead],\n              listener,\n              isSvg\n            )\n            newKeyed[newKey] = true\n            oldHead++\n          } else {\n            if ((tmpVKid = keyed[newKey]) != null) {\n              patch(\n                node,\n                node.insertBefore(tmpVKid.node, oldVKid && oldVKid.node),\n                tmpVKid,\n                newVKids[newHead],\n                listener,\n                isSvg\n              )\n              newKeyed[newKey] = true\n            } else {\n              patch(\n                node,\n                oldVKid && oldVKid.node,\n                null,\n                newVKids[newHead],\n                listener,\n                isSvg\n              )\n            }\n          }\n          newHead++\n        }\n      }\n\n      while (oldHead <= oldTail) {\n        if (getKey((oldVKid = oldVKids[oldHead++])) == null) {\n          node.removeChild(oldVKid.node)\n        }\n      }\n\n      for (var i in keyed) {\n        if (newKeyed[i] == null) {\n          node.removeChild(keyed[i].node)\n        }\n      }\n    }\n  }\n\n  return (newVNode.node = node)\n}\n\nvar propsChanged = (a, b) => {\n  for (var k in a) if (a[k] !== b[k]) return true\n  for (var k in b) if (a[k] !== b[k]) return true\n}\n\nvar maybeVNode = (newVNode, oldVNode) =>\n  newVNode !== true && newVNode !== false && newVNode\n    ? typeof newVNode.tag === \"function\"\n      ? ((!oldVNode ||\n          oldVNode.memo == null ||\n          propsChanged(oldVNode.memo, newVNode.memo)) &&\n          ((oldVNode = newVNode.tag(newVNode.memo)).memo = newVNode.memo),\n        oldVNode)\n      : newVNode\n    : text(\"\")\n\nvar recycleNode = (node) =>\n  node.nodeType === TEXT_NODE\n    ? text(node.nodeValue, node)\n    : createVNode(\n        node.nodeName.toLowerCase(),\n        EMPTY_OBJ,\n        map.call(node.childNodes, recycleNode),\n        SSR_NODE,\n        node\n      )\n\nvar createVNode = (tag, { key, ...props }, children, type, node) => ({\n  tag,\n  props,\n  key,\n  children,\n  type,\n  node,\n})\n\nexport var memo = (tag, memo) => ({ tag, memo })\n\nexport var text = (value, node) =>\n  createVNode(value, EMPTY_OBJ, EMPTY_ARR, TEXT_NODE, node)\n\nexport var h = (tag, { class: c, ...props }, children = EMPTY_ARR) =>\n  createVNode(\n    tag,\n    { ...props, ...(c ? { class: createClass(c) } : EMPTY_OBJ) },\n    isArray(children) ? children : [children]\n  )\n\nexport var app = ({\n  node,\n  view,\n  subscriptions,\n  dispatch = id,\n  init = EMPTY_OBJ,\n}) => {\n  var vdom = node && recycleNode(node)\n  var subs = []\n  var state\n  var busy\n\n  var update = (newState) => {\n    if (state !== newState) {\n      if ((state = newState) == null) dispatch = subscriptions = render = id\n      if (subscriptions) subs = patchSubs(subs, subscriptions(state), dispatch)\n      if (view && !busy) enqueue(render, (busy = true))\n    }\n  }\n\n  var render = () =>\n    (node = patch(\n      node.parentNode,\n      node,\n      vdom,\n      (vdom = view(state)),\n      listener,\n      (busy = false)\n    ))\n\n  var listener = function (event) {\n    dispatch(this.events[event.type], event)\n  }\n\n  return (\n    (dispatch = dispatch((action, props) =>\n      typeof action === \"function\"\n        ? dispatch(action(state, props))\n        : isArray(action)\n        ? typeof action[0] === \"function\"\n          ? dispatch(action[0], action[1])\n          : action\n              .slice(1)\n              .map(\n                (fx) => fx && fx !== true && (fx[0] || fx)(dispatch, fx[1]),\n                update(action[0])\n              )\n        : update(action)\n    ))(init),\n    dispatch\n  )\n}\n","import { h } from \"hyperapp\"\n\nconst EMPTY_ARR = []\nconst EMPTY_OBJ = {}\n\nconst tag = (tag) => (\n  props = EMPTY_OBJ,\n  children = props.tag != null || Array.isArray(props) ? props : EMPTY_ARR\n) => h(tag, props === children ? EMPTY_OBJ : props, children)\n\nexport const a = tag(\"a\")\nexport const b = tag(\"b\")\nexport const i = tag(\"i\")\nexport const p = tag(\"p\")\nexport const q = tag(\"q\")\nexport const s = tag(\"s\")\nexport const br = tag(\"br\")\nexport const dd = tag(\"dd\")\nexport const dl = tag(\"dl\")\nexport const dt = tag(\"dt\")\nexport const em = tag(\"em\")\nexport const h1 = tag(\"h1\")\nexport const h2 = tag(\"h2\")\nexport const h3 = tag(\"h3\")\nexport const h4 = tag(\"h4\")\nexport const h5 = tag(\"h5\")\nexport const h6 = tag(\"h6\")\nexport const hr = tag(\"hr\")\nexport const li = tag(\"li\")\nexport const ol = tag(\"ol\")\nexport const rp = tag(\"rp\")\nexport const rt = tag(\"rt\")\nexport const td = tag(\"td\")\nexport const th = tag(\"th\")\nexport const tr = tag(\"tr\")\nexport const ul = tag(\"ul\")\nexport const bdi = tag(\"bdi\")\nexport const bdo = tag(\"bdo\")\nexport const col = tag(\"col\")\nexport const del = tag(\"del\")\nexport const dfn = tag(\"dfn\")\nexport const div = tag(\"div\")\nexport const img = tag(\"img\")\nexport const ins = tag(\"ins\")\nexport const kbd = tag(\"kbd\")\nexport const map = tag(\"map\")\nexport const nav = tag(\"nav\")\nexport const pre = tag(\"pre\")\nexport const rtc = tag(\"rtc\")\nexport const sub = tag(\"sub\")\nexport const sup = tag(\"sup\")\nexport const wbr = tag(\"wbr\")\nexport const abbr = tag(\"abbr\")\nexport const area = tag(\"area\")\nexport const cite = tag(\"cite\")\nexport const code = tag(\"code\")\nexport const data = tag(\"data\")\nexport const form = tag(\"form\")\nexport const main = tag(\"main\")\nexport const mark = tag(\"mark\")\nexport const ruby = tag(\"ruby\")\nexport const samp = tag(\"samp\")\nexport const span = tag(\"span\")\nexport const time = tag(\"time\")\nexport const aside = tag(\"aside\")\nexport const audio = tag(\"audio\")\nexport const input = tag(\"input\")\nexport const label = tag(\"label\")\nexport const meter = tag(\"meter\")\nexport const param = tag(\"param\")\nexport const small = tag(\"small\")\nexport const table = tag(\"table\")\nexport const tbody = tag(\"tbody\")\nexport const tfoot = tag(\"tfoot\")\nexport const thead = tag(\"thead\")\nexport const track = tag(\"track\")\nexport const video = tag(\"video\")\nexport const button = tag(\"button\")\nexport const canvas = tag(\"canvas\")\nexport const dialog = tag(\"dialog\")\nexport const figure = tag(\"figure\")\nexport const footer = tag(\"footer\")\nexport const header = tag(\"header\")\nexport const iframe = tag(\"iframe\")\nexport const legend = tag(\"legend\")\nexport const object = tag(\"object\")\nexport const option = tag(\"option\")\nexport const output = tag(\"output\")\nexport const select = tag(\"select\")\nexport const source = tag(\"source\")\nexport const strong = tag(\"strong\")\nexport const address = tag(\"address\")\nexport const article = tag(\"article\")\nexport const caption = tag(\"caption\")\nexport const details = tag(\"details\")\nexport const section = tag(\"section\")\nexport const summary = tag(\"summary\")\nexport const picture = tag(\"picture\")\nexport const colgroup = tag(\"colgroup\")\nexport const datalist = tag(\"datalist\")\nexport const fieldset = tag(\"fieldset\")\nexport const menuitem = tag(\"menuitem\")\nexport const optgroup = tag(\"optgroup\")\nexport const progress = tag(\"progress\")\nexport const textarea = tag(\"textarea\")\nexport const blockquote = tag(\"blockquote\")\nexport const figcaption = tag(\"figcaption\")\n\nexport { text } from \"hyperapp\"","import { h } from \"hyperapp\"\n\nconst EMPTY_ARR = []\nconst EMPTY_OBJ = {}\n\nconst tag = (tag) => (\n  props,\n  children = props.tag != null || Array.isArray(props) ? props : EMPTY_ARR\n) => h(tag, props === children ? EMPTY_OBJ : props, children)\n\nexport const a = tag(\"a\")\nexport const g = tag(\"g\")\nexport const svg = tag(\"svg\")\nexport const use = tag(\"use\")\nexport const set = tag(\"set\")\nexport const line = tag(\"line\")\nexport const path = tag(\"path\")\nexport const rect = tag(\"rect\")\nexport const desc = tag(\"desc\")\nexport const defs = tag(\"defs\")\nexport const mask = tag(\"mask\")\nexport const tref = tag(\"tref\")\nexport const font = tag(\"font\")\nexport const stop = tag(\"stop\")\nexport const view = tag(\"view\")\nexport const text_ = tag(\"text\")\nexport const image = tag(\"image\")\nexport const mpath = tag(\"mpath\")\nexport const title = tag(\"title\")\nexport const glyph = tag(\"glyph\")\nexport const tspan = tag(\"tspan\")\nexport const style = tag(\"style\")\nexport const circle = tag(\"circle\")\nexport const marker = tag(\"marker\")\nexport const symbol = tag(\"symbol\")\nexport const feTile = tag(\"feTile\")\nexport const cursor = tag(\"cursor\")\nexport const filter = tag(\"filter\")\nexport const switch_ = tag(\"switch\")\nexport const ellipse = tag(\"ellipse\")\nexport const polygon = tag(\"polygon\")\nexport const animate = tag(\"animate\")\nexport const pattern = tag(\"pattern\")\nexport const feBlend = tag(\"feBlend\")\nexport const feFlood = tag(\"feFlood\")\nexport const feFuncA = tag(\"feFuncA\")\nexport const feFuncB = tag(\"feFuncB\")\nexport const feFuncG = tag(\"feFuncG\")\nexport const feFuncR = tag(\"feFuncR\")\nexport const feImage = tag(\"feImage\")\nexport const feMerge = tag(\"feMerge\")\nexport const polyline = tag(\"polyline\")\nexport const metadata = tag(\"metadata\")\nexport const altGlyph = tag(\"altGlyph\")\nexport const glyphRef = tag(\"glyphRef\")\nexport const textPath = tag(\"textPath\")\nexport const feOffset = tag(\"feOffset\")\nexport const clipPath = tag(\"clipPath\")\nexport const altGlyphDef = tag(\"altGlyphDef\")\nexport const feComposite = tag(\"feComposite\")\nexport const feMergeNode = tag(\"feMergeNode\")\nexport const feSpotLight = tag(\"feSpotLight\")\nexport const animateColor = tag(\"animateColor\")\nexport const altGlyphItem = tag(\"altGlyphItem\")\nexport const feMorphology = tag(\"feMorphology\")\nexport const feTurbulence = tag(\"feTurbulence\")\nexport const fePointLight = tag(\"fePointLight\")\nexport const colorProfile = tag(\"colorProfile\")\nexport const foreignObject = tag(\"foreignObject\")\nexport const animateMotion = tag(\"animateMotion\")\nexport const feColorMatrix = tag(\"feColorMatrix\")\nexport const linearGradient = tag(\"linearGradient\")\nexport const radialGradient = tag(\"radialGradient\")\nexport const feGaussianBlur = tag(\"feGaussianBlur\")\nexport const feDistantLight = tag(\"feDistantLight\")\nexport const animateTransform = tag(\"animateTransform\")\nexport const feConvolveMatrix = tag(\"feConvolveMatrix\")\nexport const feDiffuseLighting = tag(\"feDiffuseLighting\")\nexport const feDisplacementMap = tag(\"feDisplacementMap\")\nexport const feSpecularLighting = tag(\"feSpecularLighting\")\nexport const feComponentTransfer = tag(\"feComponentTransfer\")\n","export * from \"./api.js\";\nexport * from \"./defuzz.js\";\nexport * from \"./rules.js\";\nexport * from \"./shapes.js\";\nexport * from \"./tnorms.js\";\nexport * from \"./var.js\";\nexport * from \"./strategies/bisector.js\";\nexport * from \"./strategies/centroid.js\";\nexport * from \"./strategies/maxima.js\";\n","import { constant, intersect, union, weighted } from \"./shapes.js\";\nimport { centroidStrategy } from \"./strategies/centroid.js\";\nimport { snormMax, tnormMin } from \"./tnorms.js\";\n/**\n * Takes an object of input {@link variable}s, an object of output variable,\n * rule array and an object of input values. Evaluates relevant terms of input\n * variables in all matching rules, then combines and defuzzes them using given\n * optional strategy (by default {@link centroidStrategy} w/ its own default\n * options). Returns object of computed output variable values.\n *\n * @remarks\n * The `imply` T-norm (default: {@link tnormMin} is used to transform each\n * rule's output set(s) using each rule's computed/aggregated truth value, as\n * well as each rule's weight. Different T-norms might produce different fuzzy\n * set shapes and different results, even if the defuzz strategy remains\n * constant.\n *\n * The `combine` S-norm (default: {@link snormMax}) is used to combine the\n * relevant output sets of all rules for integration/analysis by the given\n * defuzz `strategy` actually producing the crisp result.\n *\n * @param ins -\n * @param outs -\n * @param rules -\n * @param vals -\n * @param strategy -\n * @param imply -\n * @param combine -\n */\nexport const defuzz = (ins, outs, rules, vals, strategy = centroidStrategy(), imply = tnormMin, combine = snormMax) => {\n    const ruleTerms = rules.map((r) => {\n        let alpha = null;\n        for (let id in vals) {\n            if (r.if[id]) {\n                const v = ins[id].terms[r.if[id]](vals[id]);\n                alpha = alpha !== null ? r.op(alpha, v) : v;\n            }\n        }\n        const terms = {};\n        if (alpha) {\n            const aterm = constant(alpha);\n            for (let id in r.then) {\n                if (outs[id]) {\n                    const oterm = outs[id].terms[r.then[id]];\n                    terms[id] = intersect(imply, r.weight == 1 ? oterm : weighted(oterm, r.weight), aterm);\n                }\n            }\n        }\n        return terms;\n    });\n    const res = {};\n    for (let id in outs) {\n        res[id] = strategy(union(combine, ...ruleTerms.map((r) => r[id]).filter((f) => !!f)), outs[id].domain);\n    }\n    return res;\n};\n","import { EPS } from \"@thi.ng/math/api\";\nimport { eqDelta } from \"@thi.ng/math/eqdelta\";\nimport { fit, fitClamped } from \"@thi.ng/math/fit\";\nimport { gaussian as $gaussian, sigmoid as $sigmoid } from \"@thi.ng/math/mix\";\n/**\n * HOF {@link FuzzyFn} always yielding given `x` (should be in [0,1]\n * interval).\n *\n * @param x -\n */\nexport const constant = (x) => () => x;\n/**\n * HOF {@link FuzzyFn} which takes a value `p` and tolerance `eps`, then yields\n * a discrete window function: `|p - x| <= eps ? 1 : 0`\n *\n * @param p -\n * @param eps -\n */\nexport const point = (p, eps = EPS) => (x) => eqDelta(x, p, eps) ? 1 : 0;\n/**\n * HOF {@link FuzzyFn} yielding a rising ramp in [a,b] interval, clamped to\n * [0,1] outputs. Returns 0.0 for inputs <= `a` and 1.0 for inputs >= `b`.\n *\n * @param a -\n * @param b -\n */\nexport const ramp = (a, b) => (x) => fitClamped(x, a, b, 0, 1);\n/**\n * HOF {@link FuzzyFn} yielding a triangle in the input range `[a..b..c]` with\n * `b` defining the position of the peak value (1.0). Returns 0.0 for inputs <\n * `a` or > `c`.\n *\n * @param a -\n * @param b -\n * @param c -\n */\nexport const triangle = (a, b, c) => (x) => x < a || x > c ? 0 : x <= b ? fit(x, a, b, 0, 1) : fit(x, b, c, 1, 0);\n/**\n * Similar to {@link triangle}, but yielding a trapezoid for the input range\n * `[a..b..c..d]` with `b` and `c` defining the peak value range (with 1.0\n * outputs). Returns 0.0 for inputs < `a` or > `d`.\n *\n * @param a -\n * @param b -\n * @param c -\n * @param d -\n */\nexport const trapezoid = (a, b, c, d) => (x) => x < a || x > d\n    ? 0\n    : x > b && x < c\n        ? 1\n        : x <= b\n            ? fit(x, a, b, 0, 1)\n            : fit(x, c, d, 1, 0);\n/**\n * HOF {@link FuzzyFn}, yielding sigmoid curve with configurable `steep` and\n * positioned such that `f(bias) = 0.5`.\n *\n * @param bias -\n * @param steep -\n */\nexport const sigmoid = (bias, steep) => (x) => $sigmoid(bias, steep, x);\n/**\n * HOF {@link FuzzyFn}, yielding gaussian bell curve with its peak at `bias` and\n * width defined by `sigma`.\n *\n * @param bias -\n * @param sigma -\n */\nexport const gaussian = (bias, sigma) => (x) => $gaussian(bias, sigma, x);\n/**\n * Higher-order function: Takes an existing {@link FuzzyFn} `fn` and returns\n * a new one producing its negated outcome aka `1 - fn(x)`.\n *\n * @param fn -\n */\nexport const negate = (fn) => (x) => 1 - fn(x);\n/**\n * Inverse of {@link ramp}, i.e. a falling slope from `a` -> `b`.\n *\n * @param a -\n * @param b -\n */\nexport const invRamp = (a, b) => negate(ramp(a, b));\n/**\n * Inverse of {@link sigmoid}.\n *\n * @param bias -\n * @param steep -\n */\nexport const invSigmoid = (bias, steep) => negate(sigmoid(bias, steep));\n/**\n * Higher-order function: Takes an existing {@link FuzzyFn} `fn` and `weight`\n * factor. Returns new function which computes: `weight * fn(x)`.\n *\n * @param fn -\n * @param weight -\n */\nexport const weighted = (fn, weight) => (x) => weight * fn(x);\n/**\n * Higher order function. Returns new function which selects subset of given\n * fuzzy set where `fn(x) > alpha`, or else returns 0.\n *\n * @param fn -\n * @param alpha -\n */\nexport const alphaCut = (fn, alpha = 0.5) => (x) => {\n    const y = fn(x);\n    return y > alpha ? y : 0;\n};\n/**\n * Higher order function. Returns new function which selects subset of given\n * fuzzy set where `fn(x) < alpha`, or else returns 0.\n *\n * @param fn -\n * @param alpha -\n */\nexport const invAlphaCut = (fn, alpha = 0.5) => (x) => {\n    const y = fn(x);\n    return y < alpha ? y : 0;\n};\n/**\n * Higher order function, complex shape generator. Takes a T-norm (or S-norm) as\n * reduction function `op` and any number of {@link FuzzyFn}s. Returns new\n * `FuzzyFn` which evaluates all given `fns` and combines/reduces their results\n * with `op`.\n *\n * @remarks\n * Depending on the use case and choice of `op`, the `initial` value should\n * either be set to:\n *\n * - T-norm like function: 1.0\n * - S-norm like function: 0.0\n *\n * References:\n * - https://www.desmos.com/calculator/pnq6kqzfb5 (interactive graph)\n * - https://en.wikipedia.org/wiki/T-norm\n * - https://github.com/thi-ng/umbrella/blob/develop/packages/fuzzy/src/tnorms.ts\n *\n * @example\n * ```ts\n * const f = compose(tnormMin, 1, triangle(0,2,4), triangle(1,3,5));\n * f(1); // 0\n * f(2); // 0.5\n * f(3); // 0.5\n * f(4); // 0\n * ```\n *\n * @example\n * ```ts\n * // M-like shape w/ peaks at 3 & 5\n * const M = compose(\n *   Math.max,\n *   0,\n *   triangle(1,3,5),\n *   triangle(3,5,7)\n * )\n *\n * M(3) // 1\n * M(4) // 0.5\n * M(5) // 1\n * ```\n *\n * @param op -\n * @param initial -\n * @param fns -\n */\nexport const compose = (op, initial, ...fns) => {\n    const [a, b] = fns;\n    switch (fns.length) {\n        case 0:\n            throw new Error(\"no fuzzy sets given\");\n        case 1:\n            return a;\n        case 2:\n            return (x) => op(a(x), b(x));\n        default:\n            return (x) => fns.reduce((acc, f) => op(acc, f(x)), initial);\n    }\n};\n/**\n * Syntax sugar for {@link compose} with an initial value of 1.0. The `op` is\n * supposed to be a T-norm.\n *\n * @param op -\n * @param fns -\n */\nexport const intersect = (op, ...fns) => compose(op, 1, ...fns);\n/**\n * Syntax sugar for {@link compose} with an initial value of 0.0. The `op` is\n * supposed to be a S-norm.\n *\n * @param op -\n * @param fns -\n */\nexport const union = (op, ...fns) => compose(op, 0, ...fns);\n","export const PI = Math.PI;\nexport const TAU = PI * 2;\nexport const HALF_PI = PI / 2;\nexport const THIRD_PI = PI / 3;\nexport const QUARTER_PI = PI / 4;\nexport const SIXTH_PI = PI / 6;\nexport const INV_PI = 1 / PI;\nexport const INV_TAU = 1 / TAU;\nexport const INV_HALF_PI = 1 / HALF_PI;\nexport const DEG2RAD = PI / 180;\nexport const RAD2DEG = 180 / PI;\nexport const PHI = (1 + Math.sqrt(5)) / 2;\nexport const SQRT2 = Math.SQRT2;\nexport const SQRT3 = Math.sqrt(3);\nexport const SQRT2_2 = SQRT2 / 2;\nexport const SQRT3_2 = SQRT3 / 2;\nexport const THIRD = 1 / 3;\nexport const TWO_THIRD = 2 / 3;\nexport const SIXTH = 1 / 6;\nexport let EPS = 1e-6;\n","import { EPS } from \"./api.js\";\nconst abs = Math.abs;\nconst max = Math.max;\n/**\n * Similar to {@link eqDeltaScaled}, but uses given `eps` as is.\n *\n * @param a - left value\n * @param b - right value\n * @param eps - epsilon / tolerance, default `1e-6`\n */\nexport const eqDelta = (a, b, eps = EPS) => abs(a - b) <= eps;\n/**\n * Checks if `|a - b| <= ε` and adapts given epsilon value to the given\n * arguments:\n *\n * ε is factored with the largest absolute value of `a` or `b` (but\n * never lesser than the given `eps` value):\n *\n * `ε = ε * max(1, |a|, |b|)`\n *\n * @param a - left value\n * @param b - right value\n * @param eps - epsilon / tolerance, default `1e-6`\n */\nexport const eqDeltaScaled = (a, b, eps = EPS) => abs(a - b) <= eps * max(1, abs(a), abs(b));\n","import { clamp01, clamp11 } from \"./interval.js\";\n/**\n * Returns normalized value of `x` WRT to interval `a .. b`. If `a`\n * equals `b`, returns 0.\n *\n * @param x -\n * @param a -\n * @param b -\n */\nexport const norm = (x, a, b) => (b !== a ? (x - a) / (b - a) : 0);\nexport const fit = (x, a, b, c, d) => c + (d - c) * norm(x, a, b);\nexport const fitClamped = (x, a, b, c, d) => c + (d - c) * clamp01(norm(x, a, b));\nexport const fit01 = (x, a, b) => a + (b - a) * clamp01(x);\nexport const fit10 = (x, a, b) => b + (a - b) * clamp01(x);\nexport const fit11 = (x, a, b) => a + (b - a) * (0.5 + 0.5 * clamp11(x));\n","/**\n * Clamps value `x` to given closed interval.\n *\n * @param x - value to clamp\n * @param min - lower bound\n * @param max - upper bound\n */\nexport const clamp = (x, min, max) => (x < min ? min : x > max ? max : x);\n/**\n * Clamps value `x` to closed [0 .. ∞] interval.\n *\n * @param x -\n */\nexport const clamp0 = (x) => (x > 0 ? x : 0);\n/**\n * Clamps value `x` to closed [0 .. 1] interval.\n *\n * @param x -\n */\nexport const clamp01 = (x) => (x < 0 ? 0 : x > 1 ? 1 : x);\n/**\n * Clamps value `x` to closed [-1 .. 1] interval.\n *\n * @param x -\n */\nexport const clamp11 = (x) => (x < -1 ? -1 : x > 1 ? 1 : x);\n/**\n * Clamps value `x` to closed [0 .. 0.5] interval.\n *\n * @param x -\n */\nexport const clamp05 = (x) => (x < 0 ? 0 : x > 0.5 ? 0.5 : x);\n/**\n * Folds `x` back inside closed [min..max] interval. Also see\n * {@link wrapOnce}.\n *\n * @param x -\n * @param min -\n * @param max -\n */\nexport const wrap = (x, min, max) => {\n    if (min === max)\n        return min;\n    if (x > max) {\n        const d = max - min;\n        x -= d;\n        if (x > max)\n            x -= d * (((x - min) / d) | 0);\n    }\n    else if (x < min) {\n        const d = max - min;\n        x += d;\n        if (x < min)\n            x += d * (((min - x) / d + 1) | 0);\n    }\n    return x;\n};\n/**\n * Like {@link wrap}, but optimized for cases where `x` is guaranteed to\n * be in `[min - d, max + d]` interval, where `d = max - min`. Result\n * will be in closed `[min..max]` interval.\n *\n * @param x -\n * @param min -\n * @param max -\n */\nexport const wrapOnce = (x, min, max) => x < min ? x - min + max : x > max ? x - max + min : x;\n/**\n * Similar to {@link wrapOnce} for [0..1] interval.\n *\n * @param x -\n */\nexport const wrap01 = (x) => (x < 0 ? x + 1 : x > 1 ? x - 1 : x);\n/**\n * Similar to {@link wrapOnce} for [-1..1] interval.\n *\n * @param x -\n */\nexport const wrap11 = (x) => (x < -1 ? x + 2 : x > 1 ? x - 2 : x);\nexport const min2id = (a, b) => (a <= b ? 0 : 1);\nexport const min3id = (a, b, c) => a <= b ? (a <= c ? 0 : 2) : b <= c ? 1 : 2;\nexport const min4id = (a, b, c, d) => a <= b\n    ? a <= c\n        ? a <= d\n            ? 0\n            : 3\n        : c <= d\n            ? 2\n            : 3\n    : b <= c\n        ? b <= d\n            ? 1\n            : 3\n        : c <= d\n            ? 2\n            : 3;\nexport const max2id = (a, b) => (a >= b ? 0 : 1);\nexport const max3id = (a, b, c) => a >= b ? (a >= c ? 0 : 2) : b >= c ? 1 : 2;\nexport const max4id = (a, b, c, d) => a >= b\n    ? a >= c\n        ? a >= d\n            ? 0\n            : 3\n        : c >= d\n            ? 2\n            : 3\n    : b >= c\n        ? b >= d\n            ? 1\n            : 3\n        : c >= d\n            ? 2\n            : 3;\n/**\n * Returns the non-zero minimum value of the given `a`, `b` args.\n *\n * @param a -\n * @param b -\n */\nexport const minNonZero2 = (a, b) => a !== 0 ? (b !== 0 ? Math.min(a, b) : a) : b;\n/**\n * Returns the non-zero minimum value of the given `a`, `b`, `c` args.\n *\n * @param a -\n * @param b -\n * @param c -\n */\nexport const minNonZero3 = (a, b, c) => minNonZero2(minNonZero2(a, b), c);\n/**\n * See `smax()`.\n *\n * @param a -\n * @param b -\n * @param k - smooth exponent (MUST be > 0)\n */\nexport const smin = (a, b, k) => smax(a, b, -k);\n/**\n * Smooth maximum. Note: Result values will be slightly larger than max\n * value near max(a,b) + eps due to exponential decay. Higher `k` values\n * reduce the error, but also reduce the smoothing. Recommended k=16.\n *\n * {@link https://en.wikipedia.org/wiki/Smooth_maximum}\n *\n * @param a -\n * @param b -\n * @param k - smooth exponent (MUST be > 0)\n */\nexport const smax = (a, b, k) => {\n    const ea = Math.exp(a * k);\n    const eb = Math.exp(b * k);\n    return (a * ea + b * eb) / (ea + eb);\n};\n/**\n * Same as `smin(smax(x, min, k), max, k)`.\n *\n * @param x -\n * @param min -\n * @param max -\n * @param k -\n */\nexport const sclamp = (x, min, max, k) => smin(smax(x, min, k), max, k);\nexport const absMin = (a, b) => (Math.abs(a) < Math.abs(b) ? a : b);\nexport const absMax = (a, b) => (Math.abs(a) > Math.abs(b) ? a : b);\n/**\n * If `abs(x) > abs(e)`, recursively mirrors `x` back into `[-e .. +e]`\n * interval at respective positive/negative boundary.\n *\n * @remarks\n * References:\n * - https://www.desmos.com/calculator/lkyf2ag3ta\n * - https://www.musicdsp.org/en/latest/Effects/203-fold-back-distortion.html\n *\n * @param e - threshold (> 0)\n * @param x - input value\n */\nexport const foldback = (e, x) => x < -e || x > e ? Math.abs(Math.abs((x - e) % (4 * e)) - 2 * e) - e : x;\n/**\n * Returns true iff `x` is in closed interval `[min .. max]`\n *\n * @param x -\n * @param min -\n * @param max -\n */\nexport const inRange = (x, min, max) => x >= min && x <= max;\n/**\n * Returns true iff `x` is in open interval `(min .. max)`\n *\n * @param x -\n * @param min -\n * @param max -\n */\nexport const inOpenRange = (x, min, max) => x > min && x < max;\n","import { EPS, HALF_PI, PI } from \"./api.js\";\n/**\n * Linear interpolation without clamping. Computes `a + (b - a) * t`\n *\n * @param a - start value\n * @param b - end value\n * @param t - interpolation factor [0..1]\n */\nexport const mix = (a, b, t) => a + (b - a) * t;\n/**\n * Bilinear interpolation of given values (`a`,`b`,`c`,`d`).\n *\n * @example\n * ```ts\n * c    d\n * +----+\n * |    |\n * +----+\n * a    b\n * ```\n *\n * @param a - BL value\n * @param b - BR value\n * @param c - TL value\n * @param d - TR value\n * @param u - 1st interpolation factor\n * @param v - 2nd interpolation factor\n */\nexport const mixBilinear = (a, b, c, d, u, v) => {\n    const iu = 1 - u;\n    const iv = 1 - v;\n    return a * iu * iv + b * u * iv + c * iu * v + d * u * v;\n};\nexport const mixQuadratic = (a, b, c, t) => {\n    const s = 1 - t;\n    return a * s * s + b * 2 * s * t + c * t * t;\n};\nexport const mixCubic = (a, b, c, d, t) => {\n    const t2 = t * t;\n    const s = 1 - t;\n    const s2 = s * s;\n    return a * s2 * s + b * 3 * s2 * t + c * 3 * t2 * s + d * t2 * t;\n};\n/**\n * Returns hermite interpolation of `a, b, c, d` at normalized position\n * `t`, where `a` and `d` are used as predecessor/successor of `b` / `c`\n * and only inform the tangent of the interpolation curve. The\n * interpolated result is that of `b` and `c`.\n *\n * Assumes all inputs are uniformly spaced. If that's not the case, use\n * {@link mixCubicHermite} with one of the tangent generators supporting\n * non-uniform spacing of points.\n *\n * See: {@link https://www.desmos.com/calculator/j4gf8g9vkr}\n *\n * Source:\n * {@link https://www.musicdsp.org/en/latest/Other/93-hermite-interpollation.html}\n *\n * - {@link mixCubicHermite}\n * - {@link tangentCardinal}\n * - {@link tangentDiff3}\n *\n * @param a -\n * @param b -\n * @param c -\n * @param d -\n * @param t -\n */\nexport const mixHermite = (a, b, c, d, t) => {\n    const y1 = 0.5 * (c - a);\n    const y2 = 1.5 * (b - c) + 0.5 * (d - a);\n    return ((y2 * t + a - b + y1 - y2) * t + y1) * t + b;\n};\n/**\n * Computes cubic-hermite interpolation between `a` / `b` at normalized\n * time `t` and using respective tangents `ta` / `tb`.\n *\n * {@link https://en.wikipedia.org/wiki/Cubic_Hermite_spline}\n *\n * - {@link mixHermite}\n * - {@link tangentCardinal}\n * - {@link tangentDiff3}\n *\n * @param a -\n * @param ta -\n * @param b -\n * @param tb -\n * @param t -\n */\nexport const mixCubicHermite = (a, ta, b, tb, t) => {\n    const s = t - 1;\n    const t2 = t * t;\n    const s2 = s * s;\n    const h00 = (1 + 2 * t) * s2;\n    const h10 = t * s2;\n    const h01 = t2 * (3 - 2 * t);\n    const h11 = t2 * s;\n    return h00 * a + h10 * ta + h01 * b + h11 * tb;\n};\n/**\n * Similar to {@link mixCubicHermite}, but takes 4 control values (uniformly\n * spaced) and computes tangents automatically. Returns `b` iff `t=0` and `c`\n * iff `t=1.0`.\n *\n * @param a -\n * @param b -\n * @param c -\n * @param d -\n * @param t -\n */\nexport const mixCubicHermiteFromPoints = (a, b, c, d, t) => {\n    d *= 0.5;\n    const aa = -0.5 * a + 1.5 * b - 1.5 * c + d;\n    const bb = a - 2.5 * b + 2 * c - d;\n    const cc = -0.5 * a + 0.5 * c;\n    const dd = b;\n    const t2 = t * t;\n    return t * t2 * aa + t2 * bb + t * cc + dd;\n};\n/**\n * Bicubic interpolation of given 4x4 sample values (in row major order, i.e.\n * `s00..s03` = 1st row).\n *\n * @remarks\n * Result will not be clamped and might fall outside the total range of the\n * input samples.\n *\n * @param s00 -\n * @param s01 -\n * @param s02 -\n * @param s03 -\n * @param s10 -\n * @param s11 -\n * @param s12 -\n * @param s13 -\n * @param s20 -\n * @param s21 -\n * @param s22 -\n * @param s23 -\n * @param s30 -\n * @param s31 -\n * @param s32 -\n * @param s33 -\n * @param u -\n * @param v -\n */\nexport const mixBicubic = (s00, s01, s02, s03, s10, s11, s12, s13, s20, s21, s22, s23, s30, s31, s32, s33, u, v) => mixCubicHermiteFromPoints(mixCubicHermiteFromPoints(s00, s01, s02, s03, u), mixCubicHermiteFromPoints(s10, s11, s12, s13, u), mixCubicHermiteFromPoints(s20, s21, s22, s23, u), mixCubicHermiteFromPoints(s30, s31, s32, s33, u), v);\n/**\n * Helper function for {@link mixCubicHermite}. Computes cardinal tangents\n * based on point neighbors of a point B (not given), i.e. `a`\n * (predecessor) and `c` (successor) and their times (defaults to\n * uniformly spaced). The optional `tension` parameter can be used to\n * scale the tangent where 0.0 produces a Cardinal spline tangent and\n * 1.0 a Catmull-Rom (opposite to the Wikipedia ref).\n *\n * {@link https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Cardinal_spline}\n *\n * @param prev -\n * @param next -\n * @param scale -\n * @param ta -\n * @param tc -\n */\nexport const tangentCardinal = (prev, next, scale = 0.5, ta = 0, tc = 2) => scale * ((next - prev) / (tc - ta));\n/**\n * Helper function for {@link mixCubicHermite}. Computes tangent for `curr`,\n * based on 3-point finite difference, where `prev` & `next` are\n * `curr`'s neighbors and the `tX` the three points' respective time\n * values. The latter are equally spaced by default (each 1.0 apart).\n *\n * Using this function with equal spacing of 1.0 and together with\n * {@link mixCubicHermite} will produce same results as the somewhat\n * optimized variant {@link mixHermite}.\n *\n * {@link https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Finite_difference}\n *\n * @param prev -\n * @param curr -\n * @param next -\n * @param ta -\n * @param tb -\n * @param tc -\n */\nexport const tangentDiff3 = (prev, curr, next, ta = 0, tb = 1, tc = 2) => 0.5 * ((next - curr) / (tc - tb) + (curr - prev) / (tb - ta));\n/**\n * HOF interpolator. Takes a timing function `f` and interval `[from,to]`.\n * Returns function which takes normalized time (in [0,1] range) as single arg\n * and returns interpolated value.\n *\n * @param f -\n * @param from -\n * @param to -\n */\nexport const tween = (f, from, to) => (t) => mix(from, to, f(t));\n/**\n * Circular interpolation (ease out): `sqrt(1 - (1 - t)^2)`\n *\n * @remarks\n * Reference: https://www.desmos.com/calculator/tisoiazdrw\n *\n * @param t - interpolation factor [0..1]\n */\nexport const circular = (t) => {\n    t = 1 - t;\n    return Math.sqrt(1 - t * t);\n};\n/**\n * Inverse/flipped version of {@link circular} (ease in).\n *\n * @remarks\n * Reference: https://www.desmos.com/calculator/tisoiazdrw\n *\n * @param t - interpolation factor [0..1]\n */\nexport const invCircular = (t) => 1 - circular(1 - t);\n/**\n * Zoomlens interpolation with customizable lens position, behavior and\n * strength.\n *\n * @remarks\n * Lens position must be given in (0..1) interval. Lens strength must be in\n * [-1,1] range. If negative, the lens will be bundling values near `pos`, if\n * positive the lens has dilating characteristics and will spread values near\n * `pos` towards the edges.\n *\n * Also see {@link schlick} for an alternative approach.\n *\n * @example\n * ```ts\n * // interpolated position in [100..400] interval for given `t`\n * y = mix(100, 400, lens(0.5, 1, t));\n *\n * // or build tween function via `tween()`\n * f = tween(partial(lens, 0.5, 1), 100, 400);\n *\n * f(t)\n * ```\n *\n * @param pos - lens pos\n * @param strength - lens strength\n * @param t - interpolation factor [0..1]\n */\nexport const lens = (pos, strength, t) => {\n    const impl = strength > 0 ? invCircular : circular;\n    const tp = 1 - pos;\n    const tl = t <= pos ? impl(t / pos) * pos : 1 - impl((1 - t) / tp) * tp;\n    return mix(t, tl, Math.abs(strength));\n};\nexport const cosine = (t) => 1 - (Math.cos(t * PI) * 0.5 + 0.5);\nexport const decimated = (n, t) => Math.floor(t * n) / n;\nexport const bounce = (k, amp, t) => {\n    const tk = t * k;\n    return 1 - ((amp * Math.sin(tk)) / tk) * Math.cos(t * HALF_PI);\n};\n/**\n * Exponential easing.\n *\n * - `ease = 1` -> linear\n * - `ease > 1` -> ease in\n * - `ease < 1` -> ease out\n *\n * @param ease - easing behavior [0.0 .. ∞]\n * @param t -\n */\nexport const ease = (ease, t) => Math.pow(t, ease);\n/**\n * Impulse generator. Peaks at `t = 1/k`\n *\n * @param k - impulse width (higher values => shorter impulse)\n */\nexport const impulse = (k, t) => {\n    const h = k * t;\n    return h * Math.exp(1 - h);\n};\nexport const gain = (k, t) => t < 0.5 ? 0.5 * Math.pow(2 * t, k) : 1 - 0.5 * Math.pow(2 - 2 * t, k);\nexport const parabola = (k, t) => Math.pow(4.0 * t * (1.0 - t), k);\nexport const cubicPulse = (w, c, t) => {\n    t = Math.abs(t - c);\n    return t > w ? 0 : ((t /= w), 1 - t * t * (3 - 2 * t));\n};\n/**\n * Unnormalized Sinc function: sin(x)/x. Returns 1 for t=0.\n *\n * @remarks\n * https://en.wikipedia.org/wiki/Sinc_function\n *\n * @param k -\n * @param t -\n */\nexport const sinc = (t) => (t !== 0 ? Math.sin(t) / t : 1);\n/**\n * Normalized Sinc function, returns sinc(π*k*t).\n *\n * @remarks\n * https://en.wikipedia.org/wiki/Sinc_function\n *\n * @see {@link sinc}\n *\n * @param k -\n * @param t -\n */\nexport const sincNormalized = (k, t) => sinc(PI * k * t);\n/**\n * Lanczos filter. Returns `sinc(πt)sinc(πt/a)` iff `t` in (-a,a) interval, else\n * returns 0.\n *\n * @remarks\n * Interactive graph: https://www.desmos.com/calculator/pmypqgefle\n *\n * @param a -\n * @param t -\n */\nexport const lanczos = (a, t) => t !== 0 ? (-a < t && t < a ? sinc(PI * t) * sinc((PI * t) / a) : 0) : 1;\n/**\n * Sigmoid function for inputs arounds center bias.\n *\n * @remarks\n * Updated in v3.0.0 to add bias value to satisfy more use cases. Use\n * {@link sigmoid01} for old behavior.\n *\n * @param bias - center value (for which result = 0.5)\n * @param k - steepness\n * @param t - input value\n */\nexport const sigmoid = (bias, k, t) => t != bias ? 1 / (1 + Math.exp(-k * (t - bias))) : 0.5;\n/**\n * Sigmoid function for inputs in [0..1] interval. Center bias = 0.5.\n *\n * @param k - steepness\n * @param t - input value\n */\nexport const sigmoid01 = (k, t) => sigmoid(0.5, k, t);\n/**\n * Sigmoid function for inputs in [-1..+1] interval. Center bias = 0\n *\n * @param k -\n * @param t -\n */\nexport const sigmoid11 = (k, t) => sigmoid(0, k, t);\n/**\n * Generalized Schlick bias gain curve, based on:\n * https://arxiv.org/abs/2010.09714\n *\n * @remarks\n * Interactive graph:\n * https://www.desmos.com/calculator/u6bkm5rb7t\n *\n * @param a - curve strength. recommended (0..64]\n * @param b - pivot position [0..1]\n * @param t - input val [0..1]\n */\nexport const schlick = (a, b, t) => t <= b\n    ? (b * t) / (t + a * (b - t) + EPS)\n    : ((1 - b) * (t - 1)) / (1 - t - a * (b - t) + EPS) + 1;\n/**\n * Computes exponential factor to interpolate from `a` to `b` over\n * `num` steps. I.e. multiplying `a` with the returned factor will yield\n * `b` after `num` steps. All args must be > 0.\n *\n * @param a -\n * @param b -\n * @param num -\n */\nexport const expFactor = (a, b, num) => (b / a) ** (1 / num);\n/**\n * Computes gaussian bell curve for given center `bias` and `sigma` (spread).\n *\n * @remarks\n * Interactive graph: https://www.desmos.com/calculator/aq6hdzxprv\n *\n * @param bias -\n * @param sigma -\n * @param t -\n */\nexport const gaussian = (bias, sigma, t) => Math.exp(-((t - bias) ** 2) / (2 * sigma * sigma));\n","import { defaultOpts } from \"./opts.js\";\n/**\n * Higher-order function: Centre-of-gravity defuzzification strategy, yielding\n * the approx. center of gravity position of a given fuzzy set. The domain is\n * sampled at `opts.samples` uniformly spaced points.\n *\n * @remarks\n * This is the default strategy used by {@link defuzz}. Produces similar results\n * to {@link bisectorStrategy}, but with lower computational cost. Use `samples`\n * option to adjust precision.\n *\n * @see {@Link DefuzzStrategyOpts}\n *\n * @example\n * ```ts\n * centroidStrategy()(trapezoid(0,1,5,6), [0,6])\n * // 3.0000000000000004\n *\n * // ......▁█████████████|█████████████▁.....\n * // ......██████████████|██████████████.....\n * // .....███████████████|███████████████....\n * // ....▇███████████████|███████████████▇...\n * // ...▅████████████████|████████████████▅..\n * // ..▃█████████████████|█████████████████▃.\n * // .▁██████████████████|██████████████████▁\n * // .███████████████████|███████████████████\n * //                     ^ 3.00\n * ```\n *\n * @param opts -\n */\nexport const centroidStrategy = (opts) => {\n    let { samples } = defaultOpts(opts);\n    return (fn, [min, max]) => {\n        const delta = (max - min) / samples;\n        let num = 0;\n        let denom = 0;\n        for (let i = 0; i <= samples; i++) {\n            const x = min + i * delta;\n            const y = fn(x);\n            num += x * y;\n            denom += y;\n        }\n        return num / denom;\n    };\n};\n","export const defaultOpts = (opts) => ({\n    samples: 100,\n    eps: 1e-6,\n    ...opts,\n});\n","import { norm } from \"@thi.ng/math/fit\";\nimport { clamp0 } from \"@thi.ng/math/interval\";\n// https://en.wikipedia.org/wiki/T-norm\nexport const tnormMin = (x, y) => Math.min(x, y);\nexport const tnormProduct = (x, y) => x * y;\nexport const tnormLukasiewicz = (x, y) => clamp0(x + y - 1);\nexport const tnormDrastic = (x, y) => (x === 1 ? y : y === 1 ? x : 0);\nexport const tnormNilpotent = (x, y) => (x + y > 1 ? Math.min(x, y) : 0);\n/**\n * HOF T-norm. Parametric Hamacher with `p` controlling curvature.\n *\n * @remarks\n * Interactive graph: https://www.desmos.com/calculator/4bneccqs3p\n *\n * @param p - curve param [0..∞], default: 2\n */\nexport const tnormHamacher = (p = 2) => (x, y) => x === 0 && y === 0 ? 0 : (x * y) / (p + (1 - p) * (x + y - x * y));\n/**\n * HOF T-norm. Parametric Yager with `p` controlling curvature.\n *\n * @remarks\n * Interactive graph: https://www.desmos.com/calculator/4bneccqs3p\n *\n * @param p - curve param [0..∞], default: 2\n */\nexport const tnormYager = (p = 2) => p === 0\n    ? () => 0\n    : (x, y) => clamp0(1 - ((1 - x) ** p + (1 - y) ** p) ** (1 / p));\n/**\n * HOF T-norm. Parametric Dombi with `p` controlling curvature.\n *\n * @remarks\n * Interactive graph: https://www.desmos.com/calculator/4bneccqs3p\n *\n * @param p - curve param [0..∞], default: 2\n */\nexport const tnormDombi = (p = 2) => p === 0\n    ? () => 0\n    : (x, y) => x === 0 || y === 0\n        ? 0\n        : 1 /\n            (1 + (((1 - x) / x) ** p + ((1 - y) / y) ** p) ** (1 / p));\n/**\n * HOF T-norm. Parametric Aczél–Alsina with `p` controlling curvature.\n *\n * @remarks\n * Interactive graph: https://www.desmos.com/calculator/4bneccqs3p\n *\n * @param p - curve param [0..∞], default: 2\n */\nexport const tnormAczelAlsina = (p = 2) => (x, y) => Math.exp(-((Math.abs(Math.log(x)) ** p + Math.abs(Math.log(y)) ** p) **\n    (1 / p)));\n/**\n * S-norm (T-conorm), dual of {@link tnormMin}.\n *\n * @param x -\n * @param y -\n */\nexport const snormMax = (x, y) => Math.max(x, y);\n/**\n * S-norm (T-conorm), dual of {@link tnormProduct}, probabilistic sum:\n * `a + b - a * b`\n *\n * @param x -\n * @param y -\n */\nexport const snormProbabilistic = (x, y) => x + y - x * y;\n/**\n * S-norm (T-conorm), dual of {@link tnormLukasiewicz}.\n *\n * @param x -\n * @param y -\n */\nexport const snormBoundedSum = (x, y) => Math.min(x + y, 1);\n/**\n * S-norm (T-conorm), dual of {@link tnormDrastic}.\n */\nexport const snormDrastic = (x, y) => (x === 0 ? y : y === 0 ? x : 1);\n/**\n * S-norm (T-conorm), dual of {@link tnormNilpotent}.\n *\n * @param x -\n * @param y -\n */\nexport const snormNilpotent = (x, y) => (x + y < 1 ? Math.max(x, y) : 1);\n/**\n * S-norm (T-conorm), dual of {@link tnormHamacher}, iff that T-norm's curve\n * param is `p=2`.\n *\n * @param x -\n * @param y -\n */\nexport const snormEinstein = (x, y) => (x + y) / (1 + x * y);\n/**\n * HOF t-norm. Constructs a new t-norm based on given t-norms for disjoint\n * subintervals, completing remaining regions via {@link min}.\n *\n * @remarks\n * Reference: https://en.wikipedia.org/wiki/Construction_of_t-norms#Ordinal_sums\n *\n * @param specs -\n */\nexport const ordinalSum = (specs) => (x, y) => {\n    for (let s of specs) {\n        const [a, b] = s.domain;\n        if (x >= a && x <= b && y >= a && y <= b) {\n            return a + (b - a) * s.tnorm(norm(x, a, b), norm(y, a, b));\n        }\n    }\n    return Math.min(x, y);\n};\n","import { snormMax, tnormMin, tnormProduct } from \"./tnorms.js\";\n/**\n * Defines and returns a new rule object. Takes a T-norm (or S-norm) `op`, an\n * object of input conditions, an object of results and optional rule `weight`.\n * The `op` function is used to combine input terms.\n *\n * @remarks\n * The input and output objects are each using LVar names as keys and respective\n * var terms (their names) as values (see example).\n *\n * The optional rule weight (default: 1) is used by {@link defuzz} to adjust\n * rule importance.\n *\n * Also @see {@link and}, {@link strongAnd}, {@link or} for syntax sugar.\n *\n * @example\n * ```ts\n * // given 3 LVars from a classic fuzzy logic example:\n * // food, service, tip\n *\n * // define this rule:\n * // \"If the food was bad AND service poor, then a small tip only\"\n * // here multiply is used for strong conjunction of the food & service terms\n * rule(\n *   (a, b) => a * b,\n *   { food: \"bad\",  service: \"poor\" },\n *   { tip: \"small\" }\n * )\n * ```\n *\n * @param op -\n * @param $if\n * @param then -\n * @param weight -\n */\nexport const rule = (op, $if, then, weight = 1) => ({\n    if: $if,\n    then,\n    op,\n    weight,\n});\nexport const and = ($if, then, weight) => rule(tnormMin, $if, then, weight);\nexport const strongAnd = ($if, then, weight) => rule(tnormProduct, $if, then, weight);\nexport const or = ($if, then, weight) => rule(snormMax, $if, then, weight);\n","/**\n * Takes a `domain` interval and on object of named fuzzy sets and returns a new\n * Linguistic variable, which can then be used as input or output var for\n * {@link defuzz}.\n *\n * @example\n * ```ts\n * // temperature sets (in celsius)\n * const temp = variable([-20, 40], {\n *   freezing: invSigmoid(0, 2),\n *   cold: trapezoid(0, 4, 16, 20),\n *   warm: trapezoid(15, 20, 25, 30),\n *   hot: sigmoid(30, 2)\n * });\n * ```\n *\n * @param domain -\n * @param terms -\n */\nexport const variable = (domain, terms) => ({\n    domain,\n    terms,\n});\n/**\n * Takes an LVar and a domain value `x`. Returns the ID of the var's fuzzy set\n * term which yields the max truth value for given `x`. If `threshold` is\n * enabled (default: 0.5), any truth value MUST also be > `threshold` to be\n * considered. The function returns undefined if classification failed.\n *\n * @example\n * ```ts\n * // temperature sets (in celsius)\n * const temp = variable([-20, 40], {\n *   freezing: invSigmoid(0, 2),\n *   cold: trapezoid(0, 4, 16, 20),\n *   warm: trapezoid(15, 20, 25, 30),\n *   hot: sigmoid(30, 2)\n * });\n *\n * classify(temp, 28)\n * // \"warm\"\n * ```\n *\n * @param var -\n * @param x -\n * @param threshold -\n */\nexport const classify = ({ terms }, x, threshold = 0.5) => {\n    let max = threshold;\n    let maxID;\n    for (let id in terms) {\n        const t = terms[id](x);\n        if (t >= max) {\n            max = t;\n            maxID = id;\n        }\n    }\n    return maxID;\n};\n/**\n * Takes an LVar and a domain value `x`, evaluates all of var's terms for given\n * `x` and returns object of results.\n *\n * @example\n * ```ts\n * // temperature sets (in celsius)\n * const temp = variable([-20, 40], {\n *   freezing: invSigmoid(0, 2),\n *   cold: trapezoid(0, 4, 16, 20),\n *   warm: trapezoid(15, 20, 25, 30),\n *   hot: sigmoid(30, 2)\n * });\n *\n * evaluate(temp, 28)\n * // { freezing: 0, cold: 0, warm: 0.4, hot: 0.01798620996209156 }\n * ```\n *\n * @param var -\n * @param x -\n */\nexport const evaluate = ({ terms }, x) => {\n    const res = {};\n    for (let id in terms) {\n        res[id] = terms[id](x);\n    }\n    return res;\n};\n","import { fit } from \"@thi.ng/math/fit\";\nimport { defaultOpts } from \"./opts.js\";\n/**\n * Higher-order function: Bisector-of-Area defuzzification strategy. Returns\n * strategy which computes the integral of a given fuzzy set in the defined\n * `[min,max]` domain and returns the position of the bisector which partitions\n * the area into 2 equal halves. The domain is sampled at `opts.samples`\n * uniformly spaced points.\n *\n * @remarks\n * Use `samples` option to adjust precision.\n *\n * @see {@Link DefuzzStrategyOpts}\n *\n * @example\n * ```ts\n * bisectorStrategy()(trapezoid(0,1,5,6), [0,6])\n * // 2.97\n *\n * // ......▁█████████████|█████████████▁.....\n * // ......██████████████|██████████████.....\n * // .....███████████████|███████████████....\n * // ....▇███████████████|███████████████▇...\n * // ...▅████████████████|████████████████▅..\n * // ..▃█████████████████|█████████████████▃.\n * // .▁██████████████████|██████████████████▁\n * // .███████████████████|███████████████████\n * //                     ^ 2.97\n * ```\n *\n * @param opts -\n */\nexport const bisectorStrategy = (opts) => {\n    let { samples } = defaultOpts(opts);\n    return (fn, [min, max]) => {\n        const delta = (max - min) / samples;\n        let sum = [];\n        for (let i = 0, acc = 0; i <= samples; i++) {\n            acc += fn(min + i * delta);\n            sum.push(acc);\n        }\n        if (!sum.length)\n            return min;\n        const mean = sum[samples] * 0.5;\n        for (let i = 1; i <= samples; i++) {\n            if (sum[i] >= mean) {\n                return fit(mean, sum[i - 1], sum[i], min + (i - 1) * delta, min + i * delta);\n            }\n        }\n        return min;\n    };\n};\n","import { eqDelta } from \"@thi.ng/math/eqdelta\";\nimport { defaultOpts } from \"./opts.js\";\n/**\n * Higher-order function. Returns Mean-of-Maxima defuzzification strategy,\n * yielding the approx. mean of the maximum region of a given fuzzy set.\n *\n * @remarks\n * Use `samples` option to adjust precision.\n *\n * @see {@Link DefuzzStrategyOpts}\n *\n * @example\n * ```ts\n * meanOfMaximaStrategy()(trapezoid(0,1,5,6), [0,6])\n * // 3\n *\n * // ......▁█████████████|█████████████▁.....\n * // ......██████████████|██████████████.....\n * // .....███████████████|███████████████....\n * // ....▇███████████████|███████████████▇...\n * // ...▅████████████████|████████████████▅..\n * // ..▃█████████████████|█████████████████▃.\n * // .▁██████████████████|██████████████████▁\n * // .███████████████████|███████████████████\n * //                     ^ 3.00\n * ```\n *\n * @param opts -\n */\nexport const meanOfMaximaStrategy = (opts) => {\n    const { samples, eps } = defaultOpts(opts);\n    return (fn, [min, max]) => {\n        const delta = (max - min) / samples;\n        let peak = -Infinity;\n        let peakPos = min;\n        let n = 1;\n        for (let i = 0; i <= samples; i++) {\n            const t = min + i * delta;\n            const x = fn(t);\n            if (eqDelta(x, peak, eps)) {\n                peakPos += t;\n                n++;\n            }\n            else if (x > peak) {\n                peak = x;\n                peakPos = t;\n                n = 1;\n            }\n        }\n        return peakPos / n;\n    };\n};\n/**\n * Higher-order function. Returns First-of-Maxima defuzzification strategy,\n * yielding the approx. start position of the maximum region of a given fuzzy\n * set.\n *\n * @remarks\n * Use `samples` option to adjust precision.\n *\n * @see {@Link DefuzzStrategyOpts}\n *\n * @example\n * ```ts\n * firstOfMaximaStrategy()(trapezoid(0,1,5,6), [0,6])\n * // 1.02\n *\n * // ......▁|██████████████████████████▁.....\n * // ......█|███████████████████████████.....\n * // .....██|████████████████████████████....\n * // ....▇██|████████████████████████████▇...\n * // ...▅███|█████████████████████████████▅..\n * // ..▃████|██████████████████████████████▃.\n * // .▁█████|███████████████████████████████▁\n * // .██████|████████████████████████████████\n * //        ^ 1.02\n * ```\n *\n * @param opts -\n */\nexport const firstOfMaximaStrategy = (opts) => {\n    const { samples } = defaultOpts(opts);\n    return (fn, [min, max]) => {\n        const delta = (max - min) / samples;\n        let peak = -Infinity;\n        let peakPos = min;\n        for (let i = 0; i <= samples; i++) {\n            const t = min + i * delta;\n            const x = fn(t);\n            if (x > peak) {\n                peak = x;\n                peakPos = t;\n            }\n        }\n        return peakPos;\n    };\n};\n/**\n * Higher-order function. Returns Last-of-Maxima defuzzification strategy,\n * yielding the approx. final position of the maximum region of a given fuzzy\n * set.\n *\n * @remarks\n * Use `samples` option to adjust precision.\n *\n * @see {@Link DefuzzStrategyOpts}\n *\n * @example\n * ```ts\n * lastOfMaximaStrategy()(trapezoid(0,1,5,6), [0,6])\n * // 4.98\n *\n * // ......▁██████████████████████████|▁.....\n * // ......███████████████████████████|█.....\n * // .....████████████████████████████|██....\n * // ....▇████████████████████████████|██▇...\n * // ...▅█████████████████████████████|███▅..\n * // ..▃██████████████████████████████|████▃.\n * // .▁███████████████████████████████|█████▁\n * // .████████████████████████████████|██████\n * //                                  ^ 4.98\n * ```\n *\n * @param opts -\n */\nexport const lastOfMaximaStrategy = (opts) => {\n    const impl = firstOfMaximaStrategy(opts);\n    return (fn, [min, max]) => impl(fn, [max, min]);\n};\n","export * from \"./strategy.js\";\nexport * from \"./var.js\";\n","import { variable } from \"@thi.ng/fuzzy/var\";\nimport { convertTree } from \"@thi.ng/hiccup-svg/convert\";\nimport { serialize } from \"@thi.ng/hiccup/serialize\";\nimport { fit } from \"@thi.ng/math/fit\";\nimport { repeat } from \"@thi.ng/strings/repeat\";\nimport { barChartHLines } from \"@thi.ng/text-canvas/bars\";\nimport { varToHiccup } from \"./var.js\";\n/**\n * Higher order function. Takes an existing {@link @thi.ng/fuzzy#DefuzzStrategy}\n * and an instrumentation function. Returns new `DefuzzStrategy` which first\n * executes original `strategy`, then calls `instrument` with the same args AND\n * the computed result obtained from `strategy`. Returns result of original\n * `strategy`.\n *\n * @remarks\n * The instrumentation function is intended to perform side effects (e.g. debug\n * outputs) and/or produce secondary results (e.g. visualizations). The latter\n * can be obtained through the {@link @thi.ng/api#IDeref} mechanism implemented\n * by the returned function. Since {@link defuzz} might call the strategy\n * multiple times (i.e. if there are multiple output vars used), `.deref()` will\n * always return an array of secondary results.\n *\n * Note: The secondary results from the instrumentation function will persist &\n * accumulate. If re-using the instrumented strategy for multiple `defuzz()`\n * invocations, it's highly recommended to clear any previous results using\n * `.clear()`.\n *\n * @example\n * ```ts\n * const strategy = instrumentStrategy(\n *   cogStrategy({ samples: 1000 }),\n *   fuzzySetToAscii({ width: 40, height: 8 })\n * );\n *\n * strategy(gaussian(5, 2), [0, 10]);\n * // 4.995\n *\n * console.log(strategy.deref()[0])\n * // .................▄▆█|█▆▄.................\n * // ...............▅████|████▅...............\n * // .............▄██████|██████▄.............\n * // ...........▂▇███████|███████▇▂...........\n * // ..........▅█████████|█████████▅..........\n * // .......▁▅███████████|███████████▅▁.......\n * // .....▃▆█████████████|█████████████▆▃.....\n * // ▃▄▅▇████████████████|████████████████▇▅▄▃\n * //                     ^ 5.00\n *\n * // cleanup (optional)\n * strategy.clear();\n * ```\n *\n * @param strategy -\n * @param instrument -\n */\nexport const instrumentStrategy = (strategy, instrument) => {\n    const acc = [];\n    const impl = (fn, domain) => {\n        const res = strategy(fn, domain);\n        acc.push(instrument(fn, domain, res));\n        return res;\n    };\n    impl.clear = () => (acc.length = 0);\n    impl.deref = () => acc;\n    return impl;\n};\nexport const fuzzySetToHiccup = (opts) => (fn, domain, res) => {\n    const tree = varToHiccup(variable(domain, { main: fn }), {\n        labels: false,\n        stroke: () => \"#333\",\n        fill: () => \"#999\",\n        ...opts,\n    });\n    const { width, height } = tree[1];\n    const x = fit(res, domain[0], domain[1], 0, width);\n    tree.push([\n        \"g\",\n        { translate: [x, 0] },\n        [\"line\", { stroke: \"red\" }, [0, 0], [0, height - 12]],\n        [\n            \"text\",\n            { align: \"center\", fill: \"red\" },\n            [0, height - 2],\n            res.toFixed(2),\n        ],\n    ]);\n    return tree;\n};\nexport const fuzzySetToSvg = (opts) => (fn, domain, res) => serialize(convertTree(fuzzySetToHiccup(opts)(fn, domain, res)));\nexport const fuzzySetToAscii = (opts) => (fn, domain, res) => {\n    const { width, height, empty } = {\n        width: 100,\n        height: 16,\n        empty: \".\",\n        ...opts,\n    };\n    const [min, max] = domain;\n    const delta = (max - min) / width;\n    const vals = [];\n    for (let i = min; i <= max; i += delta) {\n        vals.push(fn(i));\n    }\n    const index = Math.round(fit(res, min, max, 0, vals.length));\n    let chart = barChartHLines(height, vals, 0, 1)\n        .map((line) => line.substring(0, index) + \"|\" + line.substring(index + 1))\n        .join(\"\\n\")\n        .replace(/ /g, empty);\n    const legend = repeat(\" \", index) + \"^ \" + res.toFixed(2);\n    return chart + \"\\n\" + legend;\n};\n","import { implementsFunction } from \"@thi.ng/checks/implements-function\";\nimport { isArray } from \"@thi.ng/checks/is-array\";\nimport { circle } from \"./circle.js\";\nimport { ellipse } from \"./ellipse.js\";\nimport { fattribs } from \"./format.js\";\nimport { linearGradient, radialGradient } from \"./gradients.js\";\nimport { image } from \"./image.js\";\nimport { hline, line, vline } from \"./line.js\";\nimport { path } from \"./path.js\";\nimport { packedPoints, points } from \"./points.js\";\nimport { polygon } from \"./polygon.js\";\nimport { polyline } from \"./polyline.js\";\nimport { roundedRect } from \"./rect.js\";\nimport { text } from \"./text.js\";\nconst ATTRIB_ALIASES = {\n    alpha: \"opacity\",\n    dash: \"stroke-dasharray\",\n    dashOffset: \"stroke-dashoffset\",\n    lineCap: \"stroke-linecap\",\n    lineJoin: \"stroke-linejoin\",\n    miterLimit: \"stroke-miterlimit\",\n    weight: \"stroke-width\",\n};\nconst TEXT_ALIGN = {\n    left: \"start\",\n    right: \"end\",\n    center: \"middle\",\n    start: \"start\",\n    end: \"end\",\n};\nconst BASE_LINE = {\n    top: \"text-top\",\n    bottom: \"text-bottom\",\n};\n/**\n * Takes a normalized hiccup tree of {@link @thi.ng/geom# | @thi.ng/geom} or\n * {@link @thi.ng/hdom-canvas# | @thi.ng/hdom-canvas} shape definitions and recursively\n * converts it into an hiccup flavor which is compatible for SVG\n * serialization. This conversion also involves translation & reorg of\n * various attributes. Returns new tree. The original remains untouched,\n * as will any unrecognized tree/shape nodes.\n *\n * @param tree - shape tree\n */\nexport const convertTree = (tree) => {\n    if (tree == null)\n        return null;\n    if (implementsFunction(tree, \"toHiccup\")) {\n        return convertTree(tree.toHiccup());\n    }\n    const type = tree[0];\n    if (isArray(type)) {\n        return tree.map(convertTree);\n    }\n    let attribs = convertAttribs(tree[1]);\n    switch (tree[0]) {\n        case \"svg\":\n        case \"defs\":\n        case \"a\":\n        case \"g\": {\n            const res = [type, fattribs(attribs)];\n            for (let i = 2, n = tree.length; i < n; i++) {\n                const c = convertTree(tree[i]);\n                c != null && res.push(c);\n            }\n            return res;\n        }\n        case \"linearGradient\":\n            return linearGradient(attribs.id, attribs.from, attribs.to, tree[2], {\n                gradientUnits: attribs.gradientUnits || \"userSpaceOnUse\",\n                gradientTransform: attribs.gradientTransform,\n            });\n        case \"radialGradient\":\n            return radialGradient(attribs.id, attribs.from, attribs.to, attribs.r1, attribs.r2, tree[2], {\n                gradientUnits: attribs.gradientUnits || \"userSpaceOnUse\",\n                gradientTransform: attribs.gradientTransform,\n            });\n        case \"circle\":\n            return circle(tree[2], tree[3], attribs, ...tree.slice(4));\n        case \"ellipse\":\n            return ellipse(tree[2], tree[3][0], tree[3][1], attribs, ...tree.slice(4));\n        case \"rect\": {\n            const r = tree[5] || 0;\n            return roundedRect(tree[2], tree[3], tree[4], r, r, attribs, ...tree.slice(6));\n        }\n        case \"line\":\n            return line(tree[2], tree[3], attribs, ...tree.slice(4));\n        case \"hline\":\n            return hline(tree[2], attribs);\n        case \"vline\":\n            return vline(tree[2], attribs);\n        case \"polyline\":\n            return polyline(tree[2], attribs, ...tree.slice(3));\n        case \"polygon\":\n            return polygon(tree[2], attribs, ...tree.slice(3));\n        case \"path\":\n            return path(tree[2], attribs, ...tree.slice(3));\n        case \"text\":\n            return text(tree[2], tree[3], attribs, ...tree.slice(4));\n        case \"img\":\n            return image(tree[3], tree[2].src, attribs, ...tree.slice(4));\n        case \"points\":\n            return points(tree[2], attribs.shape, attribs.size, attribs, ...tree.slice(3));\n        case \"packedPoints\":\n            return packedPoints(tree[2], attribs.shape, attribs.size, attribs, ...tree.slice(3));\n        default:\n            return tree;\n    }\n};\nconst convertAttribs = (attribs) => {\n    const res = {};\n    if (!attribs)\n        return res;\n    // convertTransforms(res, attribs);\n    for (let id in attribs) {\n        const v = attribs[id];\n        const aid = ATTRIB_ALIASES[id];\n        if (aid) {\n            res[aid] = v;\n        }\n        else {\n            convertAttrib(res, id, v);\n        }\n    }\n    return res;\n};\nconst convertAttrib = (res, id, v) => {\n    switch (id) {\n        case \"font\": {\n            const i = v.indexOf(\" \");\n            res[\"font-size\"] = v.substring(0, i);\n            res[\"font-family\"] = v.substring(i + 1);\n            break;\n        }\n        case \"align\":\n            res[\"text-anchor\"] = TEXT_ALIGN[v];\n            break;\n        case \"baseline\":\n            res[\"dominant-baseline\"] = BASE_LINE[v] || v;\n            break;\n        // case \"filter\":\n        // TODO needs to be translated into <filter> def first\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/filter\n        // https://developer.mozilla.org/en-US/docs/Web/SVG/Element/filter\n        // break;\n        default:\n            res[id] = v;\n    }\n};\n","export const implementsFunction = (x, fn) => x != null && typeof x[fn] === \"function\";\n","export const isArray = Array.isArray;\n","import { fattribs, ff } from \"./format.js\";\nexport const circle = (p, r, attribs, ...body) => [\n    \"circle\",\n    fattribs({\n        ...attribs,\n        cx: ff(p[0]),\n        cy: ff(p[1]),\n        r: ff(r),\n    }),\n    ...body,\n];\n","import { isArrayLike } from \"@thi.ng/checks/is-arraylike\";\nimport { isString } from \"@thi.ng/checks/is-string\";\nimport { css } from \"@thi.ng/color/css/css\";\nlet PRECISION = 2;\nexport const setPrecision = (n) => (PRECISION = n);\n/** @internal */\nexport const ff = (x) => (x === (x | 0) ? x : x.toFixed(PRECISION));\n/** @internal */\nexport const fpoint = (p) => ff(p[0]) + \",\" + ff(p[1]);\n/** @internal */\nexport const fpoints = (pts, sep = \" \") => pts ? pts.map(fpoint).join(sep) : \"\";\nconst DEFAULT_NUMERIC_IDS = [\n    \"font-size\",\n    \"opacity\",\n    \"stroke-width\",\n    \"stroke-miterlimit\",\n];\n/**\n * Takes an attributes object and a number of attrib IDs whose values should be\n * formatted using {@link ff}. Mutates and returns `attribs` object.\n *\n * @param attribs -\n * @param ids -\n *\n * @internal\n */\nconst numericAttribs = (attribs, ids) => {\n    let v;\n    for (let id of DEFAULT_NUMERIC_IDS.concat(ids)) {\n        typeof (v = attribs[id]) === \"number\" && (attribs[id] = ff(v));\n    }\n    return attribs;\n};\n/**\n * Takes an attributes object and converts any `fill`, `stroke` or\n * transformation attributes, i.e. `transform`, `rotate`, `scale`, `translate`.\n *\n * @remarks\n * If the element has a `transform` attrib, conversion of the other attribs will\n * be skipped, else the values are assumed to be either strings or:\n *\n * - `transform`: 6-element numeric array (mat23)\n * - `translate`: 2-element array\n * - `rotate`: number (angle in radians)\n * - `scale`: number (uniform scale) or 2-elem array\n *\n * If no `transform` is given, the resulting transformation order will always be\n * TRS. Any string values given will be used as-is and therefore need to be\n * complete, e.g. `{ rotate: \"rotate(60)\" }`\n *\n * For color related attribs (`fill`, `stroke`), if given value is array-like, a\n * number or an {@link @thi.ng/color#IColor} instance, it will be converted into\n * a CSS color string using {@link @thi.ng/color#asCSS}.\n *\n * String color attribs prefixed with `$` are replaced with `url(#...)` refs\n * (used for referencing gradients).\n *\n * Additional attribute names given (via rest args) will be formatted as numeric\n * values (using configured precision, see {@link setPrecision}). Formatting is\n * done via {@link numericAttribs}.\n *\n * Returns updated attribs or `undefined` if `attribs` itself is null-ish.\n *\n * @param attribs - attributes object\n * @param numericIDs - numeric attribute names\n *\n * @internal\n */\nexport const fattribs = (attribs, ...numericIDs) => {\n    if (!attribs)\n        return;\n    const res = ftransforms(attribs);\n    let v;\n    (v = attribs.fill) && (res.fill = fcolor(v));\n    (v = attribs.stroke) && (res.stroke = fcolor(v));\n    return numericAttribs(attribs, numericIDs);\n};\n/**\n * Converts any transformation related attribs.\n *\n * {@link fattribs}\n *\n * @param attribs - attributes object\n *\n * @internal\n */\nconst ftransforms = (attribs) => {\n    let v;\n    if ((v = attribs.transform) ||\n        attribs.translate ||\n        attribs.scale ||\n        attribs.rotate) {\n        if (v) {\n            attribs.transform = !isString(v)\n                ? `matrix(${[...v].map(ff).join(\" \")})`\n                : v;\n            delete attribs.translate;\n            delete attribs.rotate;\n            delete attribs.scale;\n        }\n        else {\n            attribs.transform = buildTransform(attribs);\n        }\n    }\n    return attribs;\n};\n/**\n * @internal\n */\nconst buildTransform = (attribs) => {\n    const tx = [];\n    let v;\n    if ((v = attribs.translate)) {\n        tx.push(isString(v) ? v : `translate(${ff(v[0])} ${ff(v[1])})`);\n        delete attribs.translate;\n    }\n    if ((v = attribs.rotate)) {\n        tx.push(isString(v) ? v : `rotate(${ff((v * 180) / Math.PI)})`);\n        delete attribs.rotate;\n    }\n    if ((v = attribs.scale)) {\n        tx.push(isString(v)\n            ? v\n            : isArrayLike(v)\n                ? `scale(${ff(v[0])} ${ff(v[1])})`\n                : `scale(${ff(v)})`);\n        delete attribs.scale;\n    }\n    return tx.join(\" \");\n};\n/**\n * Attempts to convert a single color attrib value. If `col` is prefixed with\n * `$`, the value will be converted into a `url(#...)` reference.\n *\n * {@link fattribs}\n *\n * @param col - color value\n *\n * @internal\n */\nexport const fcolor = (col) => isString(col)\n    ? col[0] === \"$\"\n        ? `url(#${col.substring(1)})`\n        : col\n    : css(col);\n/** @internal */\nexport const withoutKeys = (src, keys) => {\n    const dest = {};\n    for (let k in src) {\n        src.hasOwnProperty(k) && !keys.has(k) && (dest[k] = src[k]);\n    }\n    return dest;\n};\n","export const isArrayLike = (x) => x != null && typeof x !== \"function\" && x.length !== undefined;\n","export const isString = (x) => typeof x === \"string\";\n","import { isNumber } from \"@thi.ng/checks/is-number\";\nimport { isString } from \"@thi.ng/checks/is-string\";\nimport { convert } from \"../convert.js\";\nimport { hslCss } from \"../hsl/hsl-css.js\";\nimport { hsvCss } from \"../hsv/hsv-css.js\";\nimport { intArgb32Css } from \"../int/int-css.js\";\nimport { intAbgr32Argb32 } from \"../int/int-int.js\";\nimport { lchLab } from \"../lab/lab-lch.js\";\nimport { labRgb, labRgbD65 } from \"../lab/lab-rgb.js\";\nimport { rgbCss } from \"../rgb/rgb-css.js\";\nimport { rgbSrgb } from \"../rgb/rgb-srgb.js\";\nimport { srgbCss } from \"../srgb/srgb-css.js\";\n/** @internal */\nconst CSS_CONVERSIONS = {\n    abgr32: (x) => intArgb32Css(intAbgr32Argb32(x[0])),\n    argb32: (x) => intArgb32Css(x[0]),\n    hsl: hslCss,\n    hsv: hsvCss,\n    // TODO temporarily disabled until CSS L4 is officially supported in browsers\n    // currently serializing as sRGB CSS\n    // lab50: labCss,\n    // lab65: (x) => labCss(labLabD65_50([], x)),\n    // lch: lchCss,\n    lab50: (src) => srgbCss(rgbSrgb(null, labRgb([], src))),\n    lab65: (src) => srgbCss(rgbSrgb(null, labRgbD65([], src))),\n    lch: (src) => srgbCss(rgbSrgb(null, labRgb(null, lchLab([], src)))),\n    rgb: rgbCss,\n    srgb: srgbCss,\n};\n/**\n * Takes a color in one of the following formats and tries to convert it\n * to a CSS string:\n *\n * - any {@link TypedColor} instance\n * - raw sRGB(A) vector\n * - number (packed 0xaarrggbb int, MUST provide alpha channel)\n * - string (passthrough)\n *\n * @param col - source color\n */\nexport const css = (src) => {\n    let asCss;\n    return isString(src)\n        ? src\n        : isNumber(src)\n            ? intArgb32Css(src)\n            : src.mode\n                ? (asCss = CSS_CONVERSIONS[src.mode])\n                    ? asCss(src)\n                    : CSS_CONVERSIONS.rgb(convert([], src, \"rgb\", src.mode))\n                : srgbCss(src);\n};\n","export const isNumber = (x) => typeof x === \"number\";\n","import { isArray } from \"@thi.ng/checks/is-array\";\nimport { assert } from \"@thi.ng/errors/assert\";\nimport { unsupported } from \"@thi.ng/errors/unsupported\";\nexport const CONVERSIONS = {};\n/**\n * Registers conversions for given {@link ColorSpec}. Called by\n * {@link defColor}.\n *\n * @param spec -\n *\n * @internal\n */\nexport const defConversions = (mode, spec) => {\n    for (let id in spec) {\n        const val = spec[id];\n        if (isArray(val)) {\n            const [a, b, c, d] = val;\n            spec[id] =\n                val.length === 2\n                    ? (out, src) => b(out, a(out, src))\n                    : val.length === 3\n                        ? (out, src) => c(out, b(out, a(out, src)))\n                        : (out, src) => d(out, c(out, b(out, a(out, src))));\n        }\n    }\n    CONVERSIONS[mode] = { ...CONVERSIONS[mode], ...spec };\n};\nexport const convert = (res, src, destMode, srcMode) => {\n    const spec = CONVERSIONS[destMode];\n    assert(!!spec, `no conversions available for ${destMode}`);\n    let $convert = spec[srcMode];\n    return $convert\n        ? $convert(res, src)\n        : CONVERSIONS.rgb[srcMode]\n            ? spec.rgb(res, CONVERSIONS.rgb[srcMode]([], src))\n            : unsupported(`can't convert: ${srcMode} -> ${destMode}`);\n};\n","import { defError } from \"./deferror.js\";\nexport const AssertionError = defError(() => \"Assertion failed\");\n/**\n * Takes a `test` result or predicate function without args and throws\n * error with given `msg` if test failed (i.e. is falsy).\n *\n * @remarks\n * The function is only enabled if `process.env.NODE_ENV != \"production\"`\n * or if the `UMBRELLA_ASSERTS` env var is set to 1.\n */\nexport const assert = (() => typeof process !== \"undefined\" && typeof process.env !== \"undefined\"\n    ? process.env.NODE_ENV !== \"production\" ||\n        !!process.env.UMBRELLA_ASSERTS\n    : typeof __SNOWPACK_ENV__ !== \"undefined\"\n        ? __SNOWPACK_ENV__.MODE !== \"production\" ||\n            !!__SNOWPACK_ENV__.UMBRELLA_ASSERTS ||\n            !!__SNOWPACK_ENV__.SNOWPACK_PUBLIC_UMBRELLA_ASSERTS\n        : true)()\n    ? (test, msg) => {\n        if ((typeof test === \"function\" && !test()) || !test) {\n            throw new AssertionError(typeof msg === \"function\" ? msg() : msg);\n        }\n    }\n    : () => { };\n","export const defError = (prefix, suffix = (msg) => (msg !== undefined ? \": \" + msg : \"\")) => class extends Error {\n    constructor(msg) {\n        super(prefix(msg) + suffix(msg));\n    }\n};\n","import { defError } from \"./deferror.js\";\nexport const UnsupportedOperationError = defError(() => \"unsupported operation\");\nexport const unsupported = (msg) => {\n    throw new UnsupportedOperationError(msg);\n};\n","import { clamp01 } from \"@thi.ng/math/interval\";\nimport { fract } from \"@thi.ng/math/prec\";\nimport { FF, PC } from \"../api/constants.js\";\nimport { __ensureAlpha } from \"../internal/ensure.js\";\nexport const hslCss = (src) => {\n    const h = FF(fract(src[0]) * 360);\n    const s = PC(clamp01(src[1]));\n    const l = PC(clamp01(src[2]));\n    const a = __ensureAlpha(src[3]);\n    // TODO update to new syntax once CSS Color L4 is more widely supported\n    // https://www.w3.org/TR/css-color-4/#serializing-lab-lch\n    // https://test.csswg.org/harness/results/css-color-4_dev/grouped/ (test reports)\n    // return `hsl(${h} ${s} ${l}` + (a < 1 ? `/${FF(a)})` : \")\");\n    return a < 1 ? `hsla(${h},${s},${l},${FF(a)})` : `hsl(${h},${s},${l})`;\n};\n","import { EPS } from \"./api.js\";\n/**\n * Similar to {@link fmod}, {@link remainder}. Returns `a - b * floor(a / b)`\n * (same as GLSL `mod(a, b)`)\n *\n * @remarks\n * **Caution:** Due to the introduction of libc math functions in v4.0.0 and the\n * resulting name/behavior clashes between the modulo logic in JS, C & GLSL,\n * this function previously _was_ called `fmod`, but going forward has been\n * renamed to align w/ its GLSL version and exhibits a different behavior to the\n * current {@link fmod} function.\n *\n * https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/mod.xhtml\n *\n * @param a -\n * @param b -\n */\nexport const mod = (a, b) => a - b * Math.floor(a / b);\nexport const fract = (x) => x - Math.floor(x);\nexport const trunc = (x) => (x < 0 ? Math.ceil(x) : Math.floor(x));\nexport const roundTo = (x, prec = 1) => Math.round(x / prec) * prec;\nexport const floorTo = (x, prec = 1) => Math.floor(x / prec) * prec;\nexport const ceilTo = (x, prec = 1) => Math.ceil(x / prec) * prec;\n/**\n * Only rounds `x` to nearest int if `fract(x)` <= `eps` or >= `1-eps`.\n *\n * @param x -\n * @param eps -\n */\nexport const roundEps = (x, eps = EPS) => {\n    const f = fract(x);\n    return f <= eps || f >= 1 - eps ? Math.round(x) : x;\n};\n","import { float } from \"@thi.ng/strings/float\";\nimport { percent } from \"@thi.ng/strings/percent\";\n/**\n * RGB black\n */\nexport const BLACK = Object.freeze([0, 0, 0, 1]);\n/**\n * RGB white\n */\nexport const WHITE = Object.freeze([1, 1, 1, 1]);\n/**\n * RGB red\n */\nexport const RED = Object.freeze([1, 0, 0, 1]);\n/**\n * RGB green\n */\nexport const GREEN = Object.freeze([0, 1, 0, 1]);\n/**\n * RGB blue\n */\nexport const BLUE = Object.freeze([0, 0, 1, 1]);\n/**\n * RGB cyan\n */\nexport const CYAN = Object.freeze([0, 1, 1, 1]);\n/**\n * RGB magenta\n */\nexport const MAGENTA = Object.freeze([1, 0, 1, 1]);\n/**\n * RGB yellow\n */\nexport const YELLOW = Object.freeze([1, 1, 0, 1]);\n/**\n * ITU-R BT.601 RGB luminance coeffs\n *\n * @remarks\n * Reference:\n * https://en.wikipedia.org/wiki/YCbCr#ITU-R_BT.601_conversion\n */\nexport const RGB_LUMINANCE_REC601 = [0.299, 0.587, 0.114];\n/**\n * ITU-R BT.709 RGB luminance coeffs\n *\n * @remarks\n * Reference:\n * https://en.wikipedia.org/wiki/YCbCr#ITU-R_BT.709_conversion\n */\nexport const RGB_LUMINANCE_REC709 = [0.2126, 0.7152, 0.0722];\n/**\n * ITU-R BT.2020 RGB luminance coeffs\n *\n * @remarks\n * Reference:\n * https://en.wikipedia.org/wiki/YCbCr#ITU-R_BT.2020_conversion\n */\nexport const RGB_LUMINANCE_REC2020 = [0.2627, 0.678, 0.0593];\n/**\n * sRGB to XYZ D65 conversion matrix\n *\n * @remarks\n * Reference:\n * http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n */\nexport const RGB_XYZ_D50 = [\n    0.4360747, 0.2225045, 0.0139322, 0.3850649, 0.7168786, 0.0971045, 0.1430804,\n    0.0606169, 0.7141733,\n];\n/**\n * XYZ D50 to sRGB conversion matrix\n *\n * @remarks\n * Reference:\n * http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n */\nexport const XYZ_RGB_D50 = [\n    3.1338561, -0.9787684, 0.0719453, -1.6168667, 1.9161415, -0.2289914,\n    -0.4906146, 0.033454, 1.4052427,\n];\n/**\n * sRGB to XYZ D65 conversion matrix\n *\n * @remarks\n * Reference:\n * http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n */\nexport const RGB_XYZ_D65 = [\n    0.4124564, 0.2126729, 0.0193339, 0.3575761, 0.7151522, 0.119192, 0.1804375,\n    0.072175, 0.9503041,\n];\n/**\n * XYZ D65 to sRGB conversion matrix\n *\n * @remarks\n * Reference:\n * http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n */\nexport const XYZ_RGB_D65 = [\n    3.2404542, -0.969266, 0.0556434, -1.5371385, 1.8760108, -0.2040259,\n    -0.4985314, 0.041556, 1.0572252,\n];\n/**\n * D50 -> D65 chromatic adaptation matrix. Inverse of {@link BRADFORD_D65_D50}.\n *\n * @remarks\n * Reference:\n * http://www.brucelindbloom.com/index.html?Eqn_ChromAdapt.html\n */\nexport const BRADFORD_D50_D65 = [\n    0.9555766, -0.0282895, 0.0122982, -0.0230393, 1.0099416, -0.020483,\n    0.0631636, 0.0210077, 1.3299098,\n];\n/**\n * D65 -> D50 chromatic adaptation matrix. Inverse of {@link BRADFORD_D50_D65}.\n *\n * @remarks\n * Reference:\n * http://www.brucelindbloom.com/index.html?Eqn_ChromAdapt.html\n */\nexport const BRADFORD_D65_D50 = [\n    1.0478112, 0.0295424, -0.0092345, 0.0228866, 0.9904844, 0.0150436,\n    -0.050127, -0.0170491, 0.7521316,\n];\n/**\n * CIE Standard Illuminant D50\n */\nexport const D50 = [0.96422, 1, 0.82521];\n/**\n * CIE Standard Illuminant D65\n *\n * Reference:\n * https://en.wikipedia.org/wiki/Illuminant_D65\n */\nexport const D65 = [0.95047, 1, 1.08883];\nexport const OKLAB_M1 = [\n    0.8189330101, 0.0329845436, 0.0482003018, 0.3618667424, 0.9293118715,\n    0.2643662691, -0.1288597137, 0.0361456387, 0.633851707,\n];\nexport const OKLAB_M2 = [\n    0.2104542553, 1.9779984951, 0.0259040371, 0.793617785, -2.428592205,\n    0.7827717662, -0.0040720468, 0.4505937099, -0.808675766,\n];\n/**\n * Float value formatter\n *\n * @internal\n */\nexport let FF = float(3);\n/**\n * Percentage value formatter\n *\n * @internal\n */\nexport let PC = percent(3);\n/**\n * Sets precision for CSS formatted values to `x` significant digits (default:\n * 3).\n *\n * @param x -\n */\nexport const setPrecision = (x) => {\n    FF = float(x);\n    PC = percent(x);\n};\nexport const INV8BIT = 1 / 0xff;\nexport const EPS = 1 / 256;\n","import { memoizeJ } from \"@thi.ng/memoize/memoizej\";\nimport { padLeft } from \"./pad-left.js\";\n/**\n * Returns {@link Stringer} which formats numbers to given precision. If\n * `special` is true, then exceptional handling for:\n *\n * - NaN => \"NaN\"\n * - Infinity => \"+/-∞\"\n *\n * @param len - number of fractional digits\n * @param special - true, if special handling for NaN/Infinity values\n */\nexport const float = memoizeJ((prec, special = false) => special\n    ? (x) => nanOrInf(x) || x.toFixed(prec)\n    : (x) => x.toFixed(prec));\n/**\n * Similar to `float`, returns {@link Stringer} which formats numbers to given\n * character width & precision. Uses scientific notation if needed.\n *\n * Default precision: 3 fractional digits\n */\nexport const floatFixedWidth = memoizeJ((width, prec = 3) => {\n    const l = width - prec - 1;\n    const pl = Math.pow(10, l);\n    const pln = -Math.pow(10, l - 1);\n    const pr = Math.pow(10, -(prec - 1));\n    const pad = padLeft(width);\n    return (x) => {\n        const ax = Math.abs(x);\n        return pad(nanOrInf(x) ||\n            (x === 0\n                ? \"0\"\n                : ax < pr || ax >= pl\n                    ? exp(x, width)\n                    : x.toFixed(prec - (x < pln ? 1 : 0))));\n    };\n});\nconst exp = (x, w) => x.toExponential(Math.max(w -\n    4 -\n    (Math.log(Math.abs(x)) / Math.LN10 >= 10 ? 2 : 1) -\n    (x < 0 ? 1 : 0), 0));\nconst nanOrInf = (x) => isNaN(x)\n    ? \"NaN\"\n    : x === Infinity\n        ? \"+∞\"\n        : x === -Infinity\n            ? \"-∞\"\n            : undefined;\n","export function memoizeJ(fn, cache) {\n    !cache && (cache = {});\n    return (...args) => {\n        const key = JSON.stringify(args);\n        if (key !== undefined) {\n            return key in cache\n                ? cache[key]\n                : (cache[key] = fn.apply(null, args));\n        }\n        return fn.apply(null, args);\n    };\n}\n","import { memoizeJ } from \"@thi.ng/memoize/memoizej\";\nimport { repeat } from \"./repeat.js\";\n/**\n * @param n - target length\n * @param ch - pad character(s)\n */\nexport const padLeft = memoizeJ((n, ch = \" \") => {\n    const buf = repeat(String(ch), n);\n    return (x, len) => {\n        if (x == null)\n            return buf;\n        x = x.toString();\n        len = len !== undefined ? len : x.length;\n        return len < n ? buf.substring(len) + x : x;\n    };\n});\n/**\n * Zero-padded 2 digit formatter.\n */\nexport const Z2 = padLeft(2, \"0\");\n/**\n * Zero-padded 3 digit formatter.\n */\nexport const Z3 = padLeft(3, \"0\");\n/**\n * Zero-padded 4 digit formatter.\n */\nexport const Z4 = padLeft(4, \"0\");\n","import { memoizeJ } from \"@thi.ng/memoize/memoizej\";\n/**\n * @param ch - character\n * @param n - repeat count\n */\nexport const repeat = memoizeJ((ch, n) => ch.repeat(n));\n","/**\n * Returns {@link Stringer} which formats given fractions as percentage (e.g.\n * `0.1234 => 12.34%`).\n *\n * @param prec - number of fractional digits (default: 0)\n */\nexport const percent = (prec = 0) => (x) => (x * 100).toFixed(prec) + \"%\";\n","import { clamp01 } from \"@thi.ng/math/interval\";\n/** @internal */\nexport const __ensureAlpha = (x, def = 1) => x != undefined ? clamp01(x) : def;\n/** @internal */\nexport const __ensureArgs = (args) => {\n    if (typeof args[0] === \"number\") {\n        switch (args.length) {\n            case 1:\n                return args.push(0, 0, 1), [args];\n            case 2:\n                return args.push(0, 1), [args];\n            case 3:\n                return args.push(1), [args];\n            default:\n                return [args];\n        }\n    }\n    return args;\n};\n","import { hslCss } from \"../hsl/hsl-css.js\";\nimport { hsvHsl } from \"./hsv-hsl.js\";\nexport const hsvCss = (src) => hslCss(hsvHsl([], src));\n","import { clampH } from \"../clamp.js\";\nexport const hsvHsl = (out, src) => {\n    out = clampH(out || src, src);\n    const s = out[1];\n    const v = out[2];\n    const l = ((2 - s) * v) / 2;\n    out[2] = l;\n    out[1] = l && l < 1 ? (s * v) / (l < 0.5 ? l * 2 : 2 - l * 2) : s;\n    return out;\n};\n","import { clamp01 } from \"@thi.ng/math/interval\";\nimport { fract } from \"@thi.ng/math/prec\";\nimport { setC4 } from \"@thi.ng/vectors/setc\";\nimport { __ensureAlpha } from \"./internal/ensure.js\";\n/**\n * Clamps all color channels to [0,1] interval and calls `ensureAlpha`\n * to ensure alpha channel is defined (if missing sets it to `alpha`,\n * default: 1).\n *\n * @param out - result\n * @param src - source color\n * @param alpha - alpha value\n */\nexport const clamp = (out, src, alpha = 1) => setC4(out || src, clamp01(src[0]), clamp01(src[1]), clamp01(src[2]), __ensureAlpha(src[3], alpha));\n/**\n * Similar to {@link clamp}, but calls `ensureHue` to fold (instead of\n * clamping) the hue into [0,1] interval.\n *\n * @param out - result\n * @param src - source color\n * @param alpha - alpha value\n */\nexport const clampH = (out, src, alpha = 1) => setC4(out || src, fract(src[0]), clamp01(src[1]), clamp01(src[2]), __ensureAlpha(src[3], alpha));\n","export const setC2 = (out, x, y) => (!out && (out = []), (out[0] = x), (out[1] = y), out);\nexport const setC3 = (out, x, y, z) => (!out && (out = []), (out[0] = x), (out[1] = y), (out[2] = z), out);\nexport const setC4 = (out, x, y, z, w) => (!out && (out = []),\n    (out[0] = x),\n    (out[1] = y),\n    (out[2] = z),\n    (out[3] = w),\n    out);\nexport const setC6 = (out, a, b, c, d, e, f) => (!out && (out = []),\n    (out[0] = a),\n    (out[1] = b),\n    (out[2] = c),\n    (out[3] = d),\n    (out[4] = e),\n    (out[5] = f),\n    out);\nexport const setC = (out, ...xs) => {\n    !out && (out = []);\n    for (let i = 0, n = xs.length; i < n; i++) {\n        out[i] = xs[i];\n    }\n    return out;\n};\n","import { U24 } from \"@thi.ng/strings/radix\";\nimport { FF, INV8BIT } from \"../api/constants.js\";\nexport const intArgb32Css = (src) => {\n    const a = src >>> 24;\n    return a < 255\n        ? `rgba(${(src >> 16) & 0xff},${(src >> 8) & 0xff},${src & 0xff},${FF(a * INV8BIT)})`\n        : `#${U24(src & 0xffffff)}`;\n};\nexport const intRgb24Css = (src) => `#${U24(src & 0xffffff)}`;\n","import { U16 as $16, U24 as $24, U32 as $32, U64HL, U8 as $8, } from \"@thi.ng/hex\";\nimport { memoizeJ } from \"@thi.ng/memoize/memoizej\";\nimport { repeat } from \"./repeat.js\";\n/**\n * Returns a {@link Stringer} which formats given numbers to `radix`, `len` and\n * with optional prefix (not included in `len`).\n *\n * @remarks\n * Only bases 2 - 36 are supported, due to native `Number.toString()`\n * limitations.\n *\n * @param radix -\n * @param len -\n * @param prefix -\n */\nexport const radix = memoizeJ((radix, n, prefix = \"\") => {\n    const buf = repeat(\"0\", n);\n    return (x) => {\n        x = (x >>> 0).toString(radix);\n        return prefix + (x.length < n ? buf.substring(x.length) + x : x);\n    };\n});\n/**\n * 8bit binary conversion preset.\n */\nexport const B8 = radix(2, 8);\n/**\n * 16bit binary conversion preset.\n */\nexport const B16 = radix(2, 16);\n/**\n * 32bit binary conversion preset.\n */\nexport const B32 = radix(2, 32);\n/**\n * 8bit hex conversion preset.\n * Assumes unsigned inputs.\n */\nexport const U8 = $8;\n/**\n * 16bit hex conversion preset.\n * Assumes unsigned inputs.\n */\nexport const U16 = $16;\n/**\n * 24bit hex conversion preset.\n * Assumes unsigned inputs.\n */\nexport const U24 = $24;\n/**\n * 32bit hex conversion preset.\n * Assumes unsigned inputs.\n */\nexport const U32 = $32;\n/**\n * 64bit hex conversion preset (2x 32bit ints)\n * Assumes unsigned inputs.\n */\nexport const U64 = U64HL;\n","const P32 = 0x100000000;\n/**\n * Hex digits\n */\nexport const HEX = \"0123456789abcdef\";\n/**\n * Returns 4bit uint as hex string\n *\n * @param x -\n */\nexport const U4 = (x) => HEX[x & 0xf];\n/**\n * Returns 8bit uint as hex string\n *\n * @param x -\n */\nexport const U8 = (x) => HEX[(x >>> 4) & 0xf] + HEX[x & 0xf];\n/**\n * Returns hex string of 8bit uint, read from given byte array at index `i`.\n *\n * @param x -\n * @param i -\n */\nexport const U8A = (x, i) => U8(x[i]);\n/**\n * Returns 16bit uint as hex string\n *\n * @param x -\n */\nexport const U16 = (x) => U8(x >>> 8) + U8(x & 0xff);\n/**\n * Returns hex string of 16bit uint, read in big-endian order from given byte\n * array at index `i`.\n *\n * @param x -\n * @param i -\n */\nexport const U16BE = (x, i) => U8(x[i]) + U8(x[i + 1]);\n/**\n * Returns hex string of 16bit uint, read in litte-endian order from given byte\n * array at index `i`.\n *\n * @param x -\n * @param i -\n */\nexport const U16LE = (x, i) => U8(x[i + 1]) + U8(x[i]);\n/**\n * Returns 24bit uint as hex string\n *\n * @param x -\n */\nexport const U24 = (x) => U8(x >>> 16) + U16(x);\n/**\n * Returns hex string of 24bit uint, read in big-endian order from given byte\n * array at index `i`.\n *\n * @param x -\n * @param i -\n */\nexport const U24BE = (x, i) => U8(x[i]) + U16BE(x, i + 1);\n/**\n * Returns hex string of 24bit uint, read in litte-endian order from given byte\n * array at index `i`.\n *\n * @param x -\n * @param i -\n */\nexport const U24LE = (x, i) => U8(x[i + 2]) + U16LE(x, i);\n/**\n * Returns 32bit uint as hex string\n *\n * @param x -\n */\nexport const U32 = (x) => U16(x >>> 16) + U16(x);\n/**\n * Returns hex string of 32bit uint, read in big-endian order from given byte\n * array at index `i`.\n *\n * @param x -\n * @param i -\n */\nexport const U32BE = (x, i) => U16BE(x, i) + U16BE(x, i + 2);\n/**\n * Returns hex string of 32bit uint, read in litte-endian order from given byte\n * array at index `i`.\n *\n * @param x -\n * @param i -\n */\nexport const U32LE = (x, i) => U16LE(x, i + 2) + U16LE(x, i);\n/**\n * Returns 48bit uint as hex string\n *\n * @param x -\n */\nexport const U48 = (x) => U48HL(x / P32, x % P32);\n/**\n * Similar to {@link U48}, but takes the 64bit arg as 2x 32bit values.\n *\n * @param hi -\n * @param lo -\n */\nexport const U48HL = (hi, lo) => U16(hi) + U32(lo);\n/**\n * Returns hex string of 48bit uint, read in big-endian order from given byte\n * array at index `i`.\n *\n * @param x -\n * @param i -\n */\nexport const U48BE = (x, i) => U16BE(x, i) + U32BE(x, i + 2);\n/**\n * Returns hex string of 48bit uint, read in litte-endian order from given byte\n * array at index `i`.\n *\n * @param x -\n * @param i -\n */\nexport const U48LE = (x, i) => U16LE(x, i + 4) + U32LE(x, i);\n/**\n * Returns 64bit uint as hex string.\n *\n * @remarks\n * Note: JS numbers are only integer precise up to `2**53 - 1`. Use\n * {@link U64BE} or {@link U64LE} for byte array based values (full 64bit range\n * supported). Alternatively, use `BigInt(x).toString(16)`.\n *\n * @param x -\n */\nexport const U64 = (x) => U64HL(x / P32, x % P32);\n/**\n * Similar to {@link U64}, but takes the 64bit arg as 2x 32bit values.\n *\n * @param hi -\n * @param lo -\n */\nexport const U64HL = (hi, lo) => U32(hi) + U32(lo);\n/**\n * Returns hex string of 64bit uint, read in big-endian order from given byte\n * array at index `i`.\n *\n * @param x -\n * @param i -\n */\nexport const U64BE = (x, i) => U32BE(x, i) + U32BE(x, i + 4);\n/**\n * Returns hex string of 64bit uint, read in litte-endian order from given byte\n * array at index `i`.\n *\n * @param x -\n * @param i -\n */\nexport const U64LE = (x, i) => U32LE(x, i + 4) + U32LE(x, i);\n/**\n * Returns UUID formatted string of given byte array from optional start index\n * `i` (default: 0). Array must have min. length 16 (starting from `i`).\n *\n * @param id -\n * @param i -\n */\nexport const uuid = (id, i = 0) => \n// prettier-ignore\n`${U32BE(id, i)}-${U16BE(id, i + 4)}-${U16BE(id, i + 6)}-${U16BE(id, i + 8)}-${U48BE(id, i + 10)}`;\n","import { swapLane13 } from \"@thi.ng/binary/swizzle\";\n/**\n * Convert ARGB int to ABGR and vice versa.\n *\n * @param x -\n */\nexport const intArgb32Abgr32 = swapLane13;\n/**\n * Alias for {@link intArgbAbgr}.\n */\nexport const intAbgr32Argb32 = swapLane13;\n","/**\n * Extracts 16-bit lane from given 32bit uint and returns as unsigned\n * half word [0x0000 .. 0xffff].\n *\n * - Lane #0: bits 16-31\n * - Lane #1: bits 0-15\n *\n * @param x -\n * @param lane - lane ID enum\n */\nexport const lane16 = (x, lane) => (x >>> ((1 - lane) << 4)) & 0xffff;\n/**\n * Extracts 8-bit lane from given 32bit uint and returns as unsigned\n * byte [0x00 .. 0xff].\n *\n * - Lane #0: bits 24-31\n * - Lane #1: bits 16-23\n * - Lane #2: bits 8-15\n * - Lane #3: bits 0-7\n *\n * @param x -\n * @param lane - lane ID enum\n */\nexport const lane8 = (x, lane) => (x >>> ((3 - lane) << 3)) & 0xff;\n/**\n * Extracts 4-bit lane from given 32bit uint and returns as unsigned\n * nibble [0x00 .. 0x0f].\n *\n * - Lane #0: bits 28-31\n * - Lane #1: bits 24-27\n * - Lane #2: bits 20-23\n * - Lane #3: bits 16-19\n * - Lane #4: bits 12-15\n * - Lane #5: bits 8-11\n * - Lane #6: bits 4-7\n * - Lane #7: bits 0-3\n *\n * @param x -\n * @param lane - lane ID enum\n */\nexport const lane4 = (x, lane) => (x >>> ((7 - lane) << 2)) & 0xf;\nexport const lane2 = (x, lane) => (x >>> ((15 - lane) << 1)) & 0x3;\nexport const setLane16 = (x, y, lane) => lane ? mux(x, y, 0xffff) : mux(x, y << 16, 0xffff0000);\n/**\n * Sets 8-bit `lane` with value`y` in `x`.\n *\n * {@link lane8}\n *\n * @param x -\n * @param y -\n * @param lane - lane ID enum\n */\nexport const setLane8 = (x, y, lane) => {\n    const l = (3 - lane) << 3;\n    return ((~(0xff << l) & x) | ((y & 0xff) << l)) >>> 0;\n};\n/**\n * Sets 4-bit `lane` with value `y` in `x`.\n *\n * {@link lane4}\n *\n * @param x -\n * @param y -\n * @param lane - lane ID enum\n */\nexport const setLane4 = (x, y, lane) => {\n    const l = (7 - lane) << 2;\n    return ((~(0xf << l) & x) | ((y & 0xf) << l)) >>> 0;\n};\n/**\n * Sets 2-bit `lane` with value `y` in `x`.\n *\n * {@link lane2}\n *\n * @param x -\n * @param y -\n * @param lane - lane ID enum\n */\nexport const setLane2 = (x, y, lane) => {\n    const l = (15 - lane) << 1;\n    return ((~(0x3 << l) & x) | ((y & 0x3) << l)) >>> 0;\n};\n/**\n * Re-orders byte lanes in given order (MSB).\n *\n * @example\n * ```ts\n * swizzle(0x12345678, 3, 2, 1, 0) // 0x78563412\n * swizzle(0x12345678, 1, 0, 3, 2) // 0x34127856\n * swizzle(0x12345678, 2, 2, 0, 0) // 0x56561212\n * ```\n *\n * @param x - value\n * @param a - lane ID enum\n * @param b - lane ID enum\n * @param c - lane ID enum\n * @param d - lane ID enum\n */\nexport const swizzle8 = (x, a, b, c, d) => ((lane8(x, a) << 24) |\n    (lane8(x, b) << 16) |\n    (lane8(x, c) << 8) |\n    lane8(x, d)) >>>\n    0;\n/**\n *\n * @param x - value\n * @param a - lane ID enum\n * @param b - lane ID enum\n * @param c - lane ID enum\n * @param d - lane ID enum\n * @param e - lane ID enum\n * @param f - lane ID enum\n * @param g - lane ID enum\n * @param h - lane ID enum\n */\nexport const swizzle4 = (x, a, b, c, d, e, f, g, h) => ((lane4(x, a) << 28) |\n    (lane4(x, b) << 24) |\n    (lane4(x, c) << 20) |\n    (lane4(x, d) << 16) |\n    (lane4(x, e) << 12) |\n    (lane4(x, f) << 8) |\n    (lane4(x, g) << 4) |\n    lane4(x, h)) >>>\n    0;\n/**\n * Merges bits of `a` and `b`, selecting bits from `b` where `mask` bits\n * are set.\n *\n * @example\n * ```ts\n * mux(0x12345678, 0xaaaa5555, 0xffff0000)\n * // 0xaaaa5678\n *\n * mux(0x12345678, 0xaaaa5555, 0x0000ffff)\n * // 0x12345555\n * ```\n *\n * @param a -\n * @param b -\n * @param mask -\n */\nexport const mux = (a, b, mask) => (~mask & a) | (mask & b);\n/**\n * Same as `swizzle8(x, 3, 2, 1, 0)`, but faster.\n *\n * @param x -\n */\nexport const flip8 = (x) => ((x >>> 24) | ((x >> 8) & 0xff00) | ((x & 0xff00) << 8) | (x << 24)) >>> 0;\n/**\n * Swaps the highest & lowest 16 bits in `x`.\n *\n * @example\n * ```ts\n * flip16(0x12345678)\n * // 0x56781234\n * ```\n *\n * @param x -\n */\nexport const flip16 = (x) => mux(x << 16, x >>> 16, 0xffff);\n/**\n * @deprecated renamed to {@link flip8}\n */\nexport const flipBytes = flip8;\n/**\n * Swaps bytes lanes 0 & 2 (i.e. bits 24-31 with bits 8-15)\n *\n * @param x -\n */\nexport const swapLane02 = (x) => ((x & 0xff00) << 16) | ((x >>> 16) & 0xff00) | (x & 0x00ff00ff);\n/**\n * Swaps bytes lanes 1 & 3 (i.e. bits 16-23 with bits 0-7)\n *\n * @param x -\n */\nexport const swapLane13 = (x) => ((x & 0xff) << 16) | ((x >> 16) & 0xff) | (x & 0xff00ff00);\n","import { atan2Abs } from \"@thi.ng/math/angle\";\nimport { INV_TAU, TAU } from \"@thi.ng/math/api\";\nimport { setC4 } from \"@thi.ng/vectors/setc\";\nimport { __ensureAlpha } from \"../internal/ensure.js\";\nexport const labLch = (out, src) => {\n    const { 1: a, 2: b } = src;\n    return setC4(out || src, src[0], Math.hypot(a, b), a === 0 && b === 0 ? 0 : atan2Abs(b, a) * INV_TAU, __ensureAlpha(src[3]));\n};\nexport const lchLab = (out, src) => {\n    let { 1: c, 2: h } = src;\n    h *= TAU;\n    const a = __ensureAlpha(src[3]);\n    return c > 0\n        ? setC4(out || src, src[0], Math.cos(h) * c, Math.sin(h) * c, a)\n        : setC4(out || src, src[0], 0, 0, a);\n};\n","import { DEG2RAD, HALF_PI, INV_HALF_PI, PI, RAD2DEG, TAU } from \"./api.js\";\n/**\n * Returns vector of `[sin(theta)*n, cos(theta)*n]`.\n *\n * @param theta -\n * @param n -\n */\nexport const sincos = (theta, n = 1) => [\n    Math.sin(theta) * n,\n    Math.cos(theta) * n,\n];\n/**\n * Returns vector of `[cos(theta)*n, sin(theta)*n]`.\n *\n * @param theta -\n * @param n -\n */\nexport const cossin = (theta, n = 1) => [\n    Math.cos(theta) * n,\n    Math.sin(theta) * n,\n];\n/**\n * Projects `theta` into [0 .. 2π] interval.\n *\n * @param theta -\n */\nexport const absTheta = (theta) => ((theta %= TAU), theta < 0 ? TAU + theta : theta);\nexport const absInnerAngle = (theta) => ((theta = Math.abs(theta)), theta > PI ? TAU - theta : theta);\n/**\n * Returns smallest absolute angle difference between `a` and `b`.\n * Result will be in [0 .. π] interval.\n *\n * @param a -\n * @param b -\n */\nexport const angleDist = (a, b) => absInnerAngle(absTheta((b % TAU) - (a % TAU)));\n/**\n * Like `Math.atan2`, but always returns angle in [0 .. TAU) interval.\n *\n * @param y -\n * @param x -\n */\nexport const atan2Abs = (y, x) => absTheta(Math.atan2(y, x));\n/**\n * Returns quadrant ID (0-3) of given angle (in radians).\n *\n * @param theta -\n */\nexport const quadrant = (theta) => (absTheta(theta) * INV_HALF_PI) | 0;\n/**\n * Converts angle to degrees.\n *\n * @param theta - angle in radians\n */\nexport const deg = (theta) => theta * RAD2DEG;\n/**\n * Converts angle to radians.\n *\n * @param theta - angle in degrees\n */\nexport const rad = (theta) => theta * DEG2RAD;\n/**\n * Cosecant. Approaches `±Infinity` for `theta` near multiples of π.\n *\n * @param theta - angle in radians\n */\nexport const csc = (theta) => 1 / Math.sin(theta);\n/**\n * Secant. Approaches `±Infinity` for `theta` near π/2 ± nπ\n *\n * @param theta - angle in radians\n */\nexport const sec = (theta) => 1 / Math.cos(theta);\n/**\n * Cotangent. Approaches `±Infinity` for `theta` near multiples of π.\n *\n * @param theta - angle in radians\n */\nexport const cot = (theta) => 1 / Math.tan(theta);\n/**\n * Law of Cosines. Takes length of two sides of a triangle and the inner\n * angle (in radians) between them. Returns length of third side.\n *\n * @param a -\n * @param b -\n * @param gamma -\n */\nexport const loc = (a, b, gamma) => Math.sqrt(a * a + b * b - 2 * a * b * Math.cos(gamma));\n/**\n * Approximates cos(xπ) for x in [-1,1]\n *\n * @param x -\n */\nexport const normCos = (x) => {\n    const x2 = x * x;\n    return 1.0 + x2 * (-4 + 2 * x2);\n};\nconst __fastCos = (x) => {\n    const x2 = x * x;\n    return 0.99940307 + x2 * (-0.49558072 + 0.03679168 * x2);\n};\n/**\n * Fast cosine approximation using {@link normCos} (polynomial). Max. error\n * ~0.00059693\n *\n * In [0 .. 2π] interval, approx. 18-20% faster than `Math.cos` on V8.\n *\n * @param theta - in radians\n */\nexport const fastCos = (theta) => {\n    theta %= TAU;\n    theta < 0 && (theta = -theta);\n    switch ((theta * INV_HALF_PI) | 0) {\n        case 0:\n            return __fastCos(theta);\n        case 1:\n            return -__fastCos(PI - theta);\n        case 2:\n            return -__fastCos(theta - PI);\n        default:\n            return __fastCos(TAU - theta);\n    }\n};\n/**\n * {@link fastCos}\n *\n * @param theta - in radians\n */\nexport const fastSin = (theta) => fastCos(HALF_PI - theta);\n","import { labXyz, labXyzD65 } from \"./lab-xyz.js\";\nimport { xyzRgb, xyzRgbD65 } from \"../xyz/xyz-rgb.js\";\n/**\n * Converts Lab to linear RGB (via XYZ) using {@link D50} white point.\n *\n * @param out -\n * @param src -\n */\nexport const labRgb = (out, src) => xyzRgb(null, labXyz(out, src));\n/**\n * Same as {@link labRgb}, but using {@link D65} white point.\n *\n * @param out -\n * @param src -\n */\nexport const labRgbD65 = (out, src) => xyzRgbD65(null, labXyzD65(out, src));\n","import { setC4 } from \"@thi.ng/vectors/setc\";\nimport { D50, D65 } from \"../api/constants.js\";\nimport { __ensureAlpha } from \"../internal/ensure.js\";\nconst transform = (x) => {\n    const y = x ** 3;\n    return y > 0.008856 ? y : (x - 16 / 116) / 7.787;\n};\n/**\n * Converts Lab to XYZ using provided white point (default: {@link D50}). Also\n * see {@link labXyzD65}.\n *\n * @param out -\n * @param src -\n * @param white -\n */\nexport const labXyz = (out, src, white = D50) => {\n    const y = (src[0] + 0.16) / 1.16;\n    return setC4(out || src, transform(src[1] / 5.0 + y) * white[0], transform(y) * white[1], transform(y - src[2] / 2.0) * white[2], __ensureAlpha(src[3]));\n};\n/**\n * Same as {@link labXyz}, but using hardcoded {@link D65} white point.\n *\n * @param out -\n * @param src -\n */\nexport const labXyzD65 = (out, src) => labXyz(out, src, D65);\n","import { XYZ_RGB_D50, XYZ_RGB_D65 } from \"../api/constants.js\";\nimport { __mulV33 } from \"../internal/matrix-ops.js\";\n/**\n * Converts CIE XYZ to RGB using provided transformation/whitepoint matrix\n * (default: {@link XYZ_RGB_D50}).\n *\n * {@link https://en.wikipedia.org/wiki/CIE_1931_color_space}\n *\n * @param out - result\n * @param src - source color\n */\nexport const xyzRgb = (out, src, mat = XYZ_RGB_D50) => __mulV33(out, mat, src);\n/**\n * Same as {@link xyzRgb}, but hard coded to use {@link D65} white point (via\n * {@link XYZ_RGB_D65} matrix).\n *\n * @param out -\n * @param src -\n */\nexport const xyzRgbD65 = (out, src) => xyzRgb(out, src, XYZ_RGB_D65);\n","import { clamp01 } from \"@thi.ng/math/interval\";\nimport { dotS3, dotS4 } from \"@thi.ng/vectors/dots\";\nimport { setC4 } from \"@thi.ng/vectors/setc\";\nimport { __ensureAlpha } from \"./ensure.js\";\n/** @internal */\nexport const __mulV33 = (out, mat, src, clampOut = false) => {\n    const x = dotS3(mat, src, 0, 0, 3);\n    const y = dotS3(mat, src, 1, 0, 3);\n    const z = dotS3(mat, src, 2, 0, 3);\n    const a = __ensureAlpha(src[3]);\n    return clampOut\n        ? setC4(out || src, clamp01(x), clamp01(y), clamp01(z), a)\n        : setC4(out || src, x, y, z, a);\n};\n/** @internal */\nexport const __mulV45 = (out, mat, src, clampOut = true) => {\n    out = setC4(out || src, src[0], src[1], src[2], __ensureAlpha(src[3]));\n    const x = dotS4(out, mat, 0, 0) + mat[4];\n    const y = dotS4(out, mat, 0, 5) + mat[9];\n    const z = dotS4(out, mat, 0, 10) + mat[14];\n    const w = dotS4(out, mat, 0, 15) + mat[19];\n    return clampOut\n        ? setC4(out, clamp01(x), clamp01(y), clamp01(z), clamp01(w))\n        : setC4(out, x, y, z, w);\n};\n/** @internal */\nexport const __mulM45 = (a, b) => [\n    dotS4(b, a, 0, 0, 1, 5),\n    dotS4(b, a, 0, 1, 1, 5),\n    dotS4(b, a, 0, 2, 1, 5),\n    dotS4(b, a, 0, 3, 1, 5),\n    dotS4(b, a, 0, 4, 1, 5) + b[4],\n    dotS4(b, a, 5, 0, 1, 5),\n    dotS4(b, a, 5, 1, 1, 5),\n    dotS4(b, a, 5, 2, 1, 5),\n    dotS4(b, a, 5, 3, 1, 5),\n    dotS4(b, a, 5, 4, 1, 5) + b[9],\n    dotS4(b, a, 10, 0, 1, 5),\n    dotS4(b, a, 10, 1, 1, 5),\n    dotS4(b, a, 10, 2, 1, 5),\n    dotS4(b, a, 10, 3, 1, 5),\n    dotS4(b, a, 10, 4, 1, 5) + b[14],\n    dotS4(b, a, 15, 0, 1, 5),\n    dotS4(b, a, 15, 1, 1, 5),\n    dotS4(b, a, 15, 2, 1, 5),\n    dotS4(b, a, 15, 3, 1, 5),\n    dotS4(b, a, 15, 4, 1, 5) + b[19],\n];\n","import { compile } from \"./compile/emit.js\";\nimport { DOT, SARGS_V } from \"./compile/templates.js\";\nexport const dotS = (a, b, n, ia = 0, ib = 0, sa = 1, sb = 1) => {\n    let sum = 0;\n    for (; n-- > 0; ia += sa, ib += sb)\n        sum += a[ia] * b[ib];\n    return sum;\n};\nconst $ = (dim) => compile(dim, DOT, `o,a,${SARGS_V}`, \"o,a\", \"\", \"+\", \"return \", \";\", true);\nexport const dotS2 = $(2);\nexport const dotS3 = $(3);\nexport const dotS4 = $(4);\n","import { comp } from \"@thi.ng/transducers/comp\";\nimport { map } from \"@thi.ng/transducers/map\";\nimport { mapIndexed } from \"@thi.ng/transducers/map-indexed\";\nimport { range } from \"@thi.ng/transducers/range\";\nimport { str } from \"@thi.ng/transducers/str\";\nimport { take } from \"@thi.ng/transducers/take\";\nimport { transduce } from \"@thi.ng/transducers/transduce\";\nimport { zip } from \"@thi.ng/transducers/zip\";\nimport { vop } from \"../vop.js\";\nimport { ARGS_V, ARGS_VN, ARGS_VV, DEFAULT_OUT, FN, MATH, MATH_N, SARGS_VV, SIGNED, SIGNED_N, UNSIGNED, UNSIGNED_N, } from \"./templates.js\";\n/**\n * HOF array index lookup gen to provide optimized versions of:\n *\n * @example\n * ```ts\n * lookup(\"a\")(0) // a[ia]\n * lookup(\"a\")(1) // a[ia * sa]\n * lookup(\"a\")(2) // a[ia + 2 * sa]\n * ```\n *\n * @param sym -\n */\nconst lookup = (sym) => (i) => i > 1\n    ? `${sym}[i${sym}+${i}*s${sym}]`\n    : i == 1\n        ? `${sym}[i${sym}+s${sym}]`\n        : `${sym}[i${sym}]`;\n/**\n * Infinite iterator of strided index lookups for `sym`.\n *\n * @param sym -\n */\nconst indicesStrided = (sym) => map(lookup(sym), range());\n/**\n * Infinite iterator of simple (non-strided) index lookups for `sym`.\n *\n * @param sym -\n */\nconst indices = (sym) => map((i) => `${sym}[${i}]`, range());\n/**\n * Code generator for loop-unrolled vector operations. Takes a vector\n * size `dim`, a code template function `tpl` and an array of symbol\n * names participating in the template. For each symbol, creates\n * iterator of index lookups (e.g. `a[0]` or `a[ia+k*sa]`), forms them\n * into tuples and passes them to template to generate code and joins\n * generated result with `opJoin` separator (default:\n * `\"\"`).\n *\n * If the optional `ret` arg is not `null` (default `\"a\"`), appends a\n * `return` statement to the result array, using `ret` as return value.\n * Returns array of source code lines.\n *\n * The optional `pre` and `post` strings can be used to wrap the\n * generated code. `post` will be injected **before** the generated\n * return statement (if not suppressed).\n *\n * @param dim -\n * @param tpl -\n * @param syms -\n * @param ret -\n * @param opJoin -\n * @param pre -\n * @param post -\n * @param strided -\n */\nconst assemble = (dim, tpl, syms, ret = \"a\", opJoin = \"\", pre = \"\", post = \"\", strided = false) => [\n    pre,\n    transduce(comp(take(dim), mapIndexed((i, x) => tpl(x, i))), str(opJoin), (zip.apply(null, syms.split(\",\").map(strided ? indicesStrided : indices)))),\n    post,\n    ret !== \"\" ? `return ${ret};` : \"\",\n];\nconst assembleG = (tpl, syms, ret = \"a\", pre, post, strided = false) => [\n    pre,\n    \"for(let i=a.length;--i>=0;) {\",\n    tpl(syms\n        .split(\",\")\n        .map(strided ? (x) => `${x}[i${x}+i*s${x}]` : (x) => `${x}[i]`)),\n    \"}\",\n    post,\n    ret !== null ? `return ${ret};` : \"\",\n];\nconst assembleS = (tpl, syms = ARGS_VV, ret = \"o\", pre = DEFAULT_OUT, post) => [\n    pre,\n    \"while(k-->0) {\",\n    tpl(syms.split(\",\").map((x) => `${x}[i${x}+k*s${x}]`)),\n    \"}\",\n    post,\n    ret !== null ? `return ${ret};` : \"\",\n];\n/** @internal */\nexport const defaultOut = (o, args) => `!${o} && (${o}=${args.split(\",\")[1]});`;\n/** @internal */\nexport const compile = (dim, tpl, args, syms = args, ret = \"a\", opJoin, pre, post, strided = false) => (new Function(args, assemble(dim, tpl, syms, ret, opJoin, pre, post, strided).join(\"\")));\n/** @internal */\nexport const compileHOF = (dim, fns, tpl, hofArgs, args, syms = args, ret = \"a\", opJoin = \"\", pre, post, strided = false) => {\n    return new Function(hofArgs, `return (${args})=>{${assemble(dim, tpl, syms, ret, opJoin, pre, post, strided).join(\"\")}}`)(...fns);\n};\n/** @internal */\nexport const compileG = (tpl, args, syms = args, ret = \"a\", pre, post, strided = false) => (new Function(args, assembleG(tpl, syms, ret, pre, post, strided).join(\"\")));\n/** @internal */\nexport const compileS = (tpl, args, syms = args, ret, pre, post) => new Function(args, assembleS(tpl, syms, ret, pre, post).join(\"\"));\n/** @internal */\nexport const compileGHOF = (fns, tpl, hofArgs, args, syms = args, ret = \"a\", pre, post, strided = false) => (new Function(hofArgs, `return (${args})=>{${assembleG(tpl, syms, ret, pre, post, strided).join(\"\")}}`)(...fns));\nexport const defOp = (tpl, args = ARGS_VV, syms, ret = \"o\", dispatch = 1, pre) => {\n    syms = syms || args;\n    pre = pre != null ? pre : defaultOut(ret, args);\n    const fn = vop(dispatch);\n    const $ = (dim) => fn.add(dim, compile(dim, tpl, args, syms, ret, \"\", pre));\n    fn.default(compileG(tpl, args, syms, ret, pre));\n    return [fn, $(2), $(3), $(4)];\n};\nexport const defFnOp = (op) => defOp(FN(op), ARGS_V);\nexport const defHofOp = (op, tpl, args = ARGS_V, syms, ret = \"o\", dispatch = 1, pre) => {\n    const _tpl = tpl || FN(\"op\");\n    syms = syms || args;\n    pre = pre != null ? pre : defaultOut(ret, args);\n    const fn = vop(dispatch);\n    const $ = (dim) => fn.add(dim, compileHOF(dim, [op], _tpl, \"op\", args, syms, ret, \"\", pre));\n    fn.default(compileGHOF([op], _tpl, \"op\", args, syms, ret, pre));\n    return [fn, $(2), $(3), $(4)];\n};\nexport const defOpS = (tpl, args = ARGS_VV, idxArgs = SARGS_VV, syms = ARGS_VV, ret = \"o\", pre, sizes = [2, 3, 4]) => [\n    compileS(tpl, `${args},k,${idxArgs}`, syms, ret, pre),\n    ...sizes.map((dim) => compile(dim, tpl, `${args},${idxArgs}`, syms, ret, \"\", pre != null ? pre : defaultOut(ret, args), \"\", true)),\n];\nexport const defHofOpS = (op, tpl, args = ARGS_VV, idxArgs = SARGS_VV, syms = ARGS_VV, ret = \"o\", pre, sizes = [2, 3, 4]) => [\n    new Function(\"op\", `return (${args},k,${idxArgs})=>{${assembleS(tpl, syms, ret, pre).join(\"\")}}`)(op),\n    ...sizes.map((dim) => compileHOF(dim, [op], tpl, \"op\", `${args},${idxArgs}`, syms, ret, \"\", pre != null ? pre : defaultOut(ret, args), \"\", true)),\n];\nexport const defMathOp = (op) => defOp(MATH(op));\nexport const defMathOpN = (op) => defOp(MATH_N(op), ARGS_VN);\nexport const defBitOp = (op, signed = false) => defOp((signed ? SIGNED : UNSIGNED)(op));\nexport const defBitOpN = (op, signed = false) => defOp((signed ? SIGNED_N : UNSIGNED_N)(op), ARGS_VN);\n","import { comp as _comp } from \"@thi.ng/compose/comp\";\nimport { ensureTransducer } from \"./ensure.js\";\nexport function comp(...fns) {\n    fns = fns.map(ensureTransducer);\n    return _comp.apply(null, fns);\n}\n","import { illegalArity } from \"@thi.ng/errors/illegal-arity\";\nexport function comp(...fns) {\n    let [a, b, c, d, e, f, g, h, i, j] = fns;\n    switch (fns.length) {\n        case 0:\n            illegalArity(0);\n        case 1:\n            return a;\n        case 2:\n            return (...xs) => a(b(...xs));\n        case 3:\n            return (...xs) => a(b(c(...xs)));\n        case 4:\n            return (...xs) => a(b(c(d(...xs))));\n        case 5:\n            return (...xs) => a(b(c(d(e(...xs)))));\n        case 6:\n            return (...xs) => a(b(c(d(e(f(...xs))))));\n        case 7:\n            return (...xs) => a(b(c(d(e(f(g(...xs)))))));\n        case 8:\n            return (...xs) => a(b(c(d(e(f(g(h(...xs))))))));\n        case 9:\n            return (...xs) => a(b(c(d(e(f(g(h(i(...xs)))))))));\n        case 10:\n        default:\n            const fn = (...xs) => a(b(c(d(e(f(g(h(i(j(...xs))))))))));\n            return fns.length === 10 ? fn : comp(fn, ...fns.slice(10));\n    }\n}\nexport function compL(...fns) {\n    return comp.apply(null, fns.reverse());\n}\n/**\n * @deprecated renamed to {@link (compL:1)}\n */\nexport const compI = compL;\n","import { defError } from \"./deferror.js\";\nexport const IllegalArityError = defError(() => \"illegal arity\");\nexport const illegalArity = (n) => {\n    throw new IllegalArityError(n);\n};\n","import { implementsFunction } from \"@thi.ng/checks/implements-function\";\nexport const ensureTransducer = (x) => implementsFunction(x, \"xform\") ? x.xform() : x;\n","import { isIterable } from \"@thi.ng/checks/is-iterable\";\nimport { compR } from \"./compr.js\";\nimport { iterator1 } from \"./iterator.js\";\nexport function map(fn, src) {\n    return isIterable(src)\n        ? iterator1(map(fn), src)\n        : (rfn) => {\n            const r = rfn[2];\n            return compR(rfn, (acc, x) => r(acc, fn(x)));\n        };\n}\n/**\n * Convenience wrapper for {@link map} to transform an iterable with given `fn`\n * and immediatedly collect results into an array.\n */\nexport const mapA = (fn, src) => [\n    ...map(fn, src),\n];\n","export const isIterable = (x) => x != null && typeof x[Symbol.iterator] === \"function\";\n","/**\n * Reducer composition helper, internally used by various transducers\n * during initialization. Takes existing reducer `rfn` (a 3-tuple) and a\n * reducing function `fn`. Returns a new reducer tuple.\n *\n * @remarks\n * `rfn[2]` reduces values of type `B` into an accumulator of type `A`.\n * `fn` accepts values of type `C` and produces interim results of type\n * `B`, which are then (possibly) passed to the \"inner\" `rfn[2]`\n * function. Therefore the resulting reducer takes inputs of `C` and an\n * accumulator of type `A`.\n *\n * It is assumed that `fn` internally calls `rfn[2]` to pass its own\n * results for further processing by the nested reducer `rfn`.\n *\n * @example\n * ```ts\n * compR(rfn, fn)\n * // [rfn[0], rfn[1], fn]\n * ```\n *\n * @param rfn -\n * @param fn -\n */\nexport const compR = (rfn, fn) => [rfn[0], rfn[1], fn];\n","import { NO_OP, SEMAPHORE } from \"@thi.ng/api/api\";\nimport { isIterable } from \"@thi.ng/checks/is-iterable\";\nimport { ensureTransducer } from \"./ensure.js\";\nimport { push } from \"./push.js\";\nimport { isReduced, unreduced } from \"./reduced.js\";\n/**\n * Takes a transducer and input iterable. Returns iterator of\n * transformed results.\n *\n * @param xform -\n * @param xs -\n */\nexport function* iterator(xform, xs) {\n    const rfn = ensureTransducer(xform)(push());\n    const complete = rfn[1];\n    const reduce = rfn[2];\n    for (let x of xs) {\n        const y = reduce([], x);\n        if (isReduced(y)) {\n            yield* unreduced(complete(y.deref()));\n            return;\n        }\n        if (y.length) {\n            yield* y;\n        }\n    }\n    yield* unreduced(complete([]));\n}\n/**\n * Optimized version of {@link iterator} for transducers which are\n * guaranteed to:\n *\n * 1) Only produce none or a single result per input\n * 2) Do not require a `completion` reduction step\n *\n * @param xform -\n * @param xs -\n */\nexport function* iterator1(xform, xs) {\n    const reduce = (ensureTransducer(xform)([NO_OP, NO_OP, (_, x) => x]))[2];\n    for (let x of xs) {\n        let y = reduce(SEMAPHORE, x);\n        if (isReduced(y)) {\n            y = unreduced(y.deref());\n            if (y !== SEMAPHORE) {\n                yield y;\n            }\n            return;\n        }\n        if (y !== SEMAPHORE) {\n            yield y;\n        }\n    }\n}\n/**\n * Helper function used by various transducers to wrap themselves as\n * transforming iterators. Delegates to {@link iterator1} by default.\n *\n * @param xform -\n * @param args -\n * @param impl -\n *\n * @internal\n */\nexport const __iter = (xform, args, impl = iterator1) => {\n    const n = args.length - 1;\n    return isIterable(args[n])\n        ? args.length > 1\n            ? impl(xform.apply(null, args.slice(0, n)), args[n])\n            : impl(xform(), args[0])\n        : undefined;\n};\n","export const DEFAULT_EPS = 1e-6;\n/**\n * Internal use only. **Do NOT use in user land code!**\n *\n * @internal\n */\nexport const SEMAPHORE = Symbol();\n/**\n * No-effect placeholder function.\n */\nexport const NO_OP = () => { };\n/**\n * Catch-all event ID\n */\nexport const EVENT_ALL = \"*\";\nexport const EVENT_ENABLE = \"enable\";\nexport const EVENT_DISABLE = \"disable\";\n","import { reducer } from \"./reduce.js\";\nexport function push(xs) {\n    return xs\n        ? [...xs]\n        : reducer(() => [], (acc, x) => (acc.push(x), acc));\n}\n","import { implementsFunction } from \"@thi.ng/checks/implements-function\";\nimport { isArrayLike } from \"@thi.ng/checks/is-arraylike\";\nimport { isIterable } from \"@thi.ng/checks/is-iterable\";\nimport { illegalArity } from \"@thi.ng/errors/illegal-arity\";\nimport { isReduced, unreduced } from \"./reduced.js\";\nconst parseArgs = (args) => args.length === 2\n    ? [undefined, args[1]]\n    : args.length === 3\n        ? [args[1], args[2]]\n        : illegalArity(args.length);\nexport function reduce(...args) {\n    const rfn = args[0];\n    const init = rfn[0];\n    const complete = rfn[1];\n    const reduce = rfn[2];\n    args = parseArgs(args);\n    const acc = args[0] == null ? init() : args[0];\n    const xs = args[1];\n    return unreduced(complete(implementsFunction(xs, \"$reduce\")\n        ? xs.$reduce(reduce, acc)\n        : isArrayLike(xs)\n            ? reduceArray(reduce, acc, xs)\n            : reduceIterable(reduce, acc, xs)));\n}\nexport function reduceRight(...args) {\n    const rfn = args[0];\n    const init = rfn[0];\n    const complete = rfn[1];\n    const reduce = rfn[2];\n    args = parseArgs(args);\n    let acc = args[0] == null ? init() : args[0];\n    const xs = args[1];\n    for (let i = xs.length; i-- > 0;) {\n        acc = reduce(acc, xs[i]);\n        if (isReduced(acc)) {\n            acc = acc.deref();\n            break;\n        }\n    }\n    return unreduced(complete(acc));\n}\nconst reduceArray = (rfn, acc, xs) => {\n    for (let i = 0, n = xs.length; i < n; i++) {\n        acc = rfn(acc, xs[i]);\n        if (isReduced(acc)) {\n            acc = acc.deref();\n            break;\n        }\n    }\n    return acc;\n};\nconst reduceIterable = (rfn, acc, xs) => {\n    for (let x of xs) {\n        acc = rfn(acc, x);\n        if (isReduced(acc)) {\n            acc = acc.deref();\n            break;\n        }\n    }\n    return acc;\n};\n/**\n * Convenience helper for building a full {@link Reducer} using the identity\n * function (i.e. `(x) => x`) as completion step (true for 90% of all\n * bundled transducers).\n *\n * @param init - init step of reducer\n * @param rfn - reduction step of reducer\n */\nexport const reducer = (init, rfn) => [init, (acc) => acc, rfn];\nexport const $$reduce = (rfn, args) => {\n    const n = args.length - 1;\n    return isIterable(args[n])\n        ? args.length > 1\n            ? reduce(rfn.apply(null, args.slice(0, n)), args[n])\n            : reduce(rfn(), args[0])\n        : undefined;\n};\n","export class Reduced {\n    constructor(val) {\n        this.value = val;\n    }\n    deref() {\n        return this.value;\n    }\n}\nexport const reduced = (x) => new Reduced(x);\nexport const isReduced = (x) => x instanceof Reduced;\nexport const ensureReduced = (x) => x instanceof Reduced ? x : new Reduced(x);\nexport const unreduced = (x) => (x instanceof Reduced ? x.deref() : x);\n","import { compR } from \"./compr.js\";\nimport { __iter } from \"./iterator.js\";\nexport function mapIndexed(...args) {\n    return (__iter(mapIndexed, args) ||\n        ((rfn) => {\n            const r = rfn[2];\n            const fn = args[0];\n            let i = args[1] || 0;\n            return compR(rfn, (acc, x) => r(acc, fn(i++, x)));\n        }));\n}\n","import { isReduced } from \"./reduced.js\";\nexport function range(from, to, step) {\n    return new Range(from, to, step);\n}\n/**\n * Simple class wrapper around given range interval and implementing\n * `Iterable` and {@link IReducible} interfaces, the latter is used to\n * accelerate use with {@link (reduce:1)}.\n */\nexport class Range {\n    constructor(from, to, step) {\n        if (from === undefined) {\n            from = 0;\n            to = Infinity;\n        }\n        else if (to === undefined) {\n            to = from;\n            from = 0;\n        }\n        step = step === undefined ? (from < to ? 1 : -1) : step;\n        this.from = from;\n        this.to = to;\n        this.step = step;\n    }\n    *[Symbol.iterator]() {\n        let { from, to, step } = this;\n        if (step > 0) {\n            while (from < to) {\n                yield from;\n                from += step;\n            }\n        }\n        else if (step < 0) {\n            while (from > to) {\n                yield from;\n                from += step;\n            }\n        }\n    }\n    $reduce(rfn, acc) {\n        const step = this.step;\n        if (step > 0) {\n            for (let i = this.from, n = this.to; i < n && !isReduced(acc); i += step) {\n                acc = rfn(acc, i);\n            }\n        }\n        else {\n            for (let i = this.from, n = this.to; i > n && !isReduced(acc); i += step) {\n                acc = rfn(acc, i);\n            }\n        }\n        return acc;\n    }\n}\n","import { reducer } from \"./reduce.js\";\nexport function str(sep, xs) {\n    sep = sep || \"\";\n    let first = true;\n    return xs\n        ? [...xs].join(sep)\n        : reducer(() => \"\", (acc, x) => ((acc = first ? acc + x : acc + sep + x), (first = false), acc));\n}\n","import { isIterable } from \"@thi.ng/checks/is-iterable\";\nimport { compR } from \"./compr.js\";\nimport { iterator } from \"./iterator.js\";\nimport { ensureReduced, reduced } from \"./reduced.js\";\nexport function take(n, src) {\n    return isIterable(src)\n        ? iterator(take(n), src)\n        : (rfn) => {\n            const r = rfn[2];\n            let m = n;\n            return compR(rfn, (acc, x) => --m > 0\n                ? r(acc, x)\n                : m === 0\n                    ? ensureReduced(r(acc, x))\n                    : reduced(acc));\n        };\n}\n","import { illegalArity } from \"@thi.ng/errors/illegal-arity\";\nimport { ensureTransducer } from \"./ensure.js\";\nimport { map } from \"./map.js\";\nimport { reduce, reduceRight } from \"./reduce.js\";\nexport function transduce(...args) {\n    return $transduce(transduce, reduce, args);\n}\nexport function transduceRight(...args) {\n    return $transduce(transduceRight, reduceRight, args);\n}\nconst $transduce = (tfn, rfn, args) => {\n    let acc, xs;\n    switch (args.length) {\n        case 4:\n            xs = args[3];\n            acc = args[2];\n            break;\n        case 3:\n            xs = args[2];\n            break;\n        case 2:\n            return map((x) => tfn(args[0], args[1], x));\n        default:\n            illegalArity(args.length);\n    }\n    return rfn(ensureTransducer(args[0])(args[1]), acc, xs);\n};\n","export function* zip(...src) {\n    const iters = src.map((s) => s[Symbol.iterator]());\n    while (true) {\n        const tuple = [];\n        for (let i of iters) {\n            let v = i.next();\n            if (v.done) {\n                return;\n            }\n            tuple.push(v.value);\n        }\n        yield tuple;\n    }\n}\n","import { unsupported } from \"@thi.ng/errors/unsupported\";\n/**\n * Specialized / optimized version of {@link @thi.ng/defmulti# | @thi.ng/defmulti} for\n * vector operations. Uses simplified logic to dispatch on length\n * (vector size) of `dispatch` argument.\n *\n * @param dispatch - arg index\n */\nexport const vop = (dispatch = 0) => {\n    const impls = new Array(5);\n    let fallback;\n    const fn = (...args) => {\n        const g = impls[args[dispatch].length] || fallback;\n        return g\n            ? g(...args)\n            : unsupported(`no impl for vec size ${args[dispatch].length}`);\n    };\n    fn.add = (dim, fn) => (impls[dim] = fn);\n    fn.default = (fn) => (fallback = fn);\n    fn.impl = (dim) => impls[dim] || fallback;\n    // fn.impls = impls;\n    return fn;\n};\n","/** @internal */\nexport const ARGS_V = \"o,a\";\n/** @internal */\nexport const ARGS_VV = \"o,a,b\";\n/** @internal */\nexport const ARGS_VVV = \"o,a,b,c\";\n/** @internal */\nexport const ARGS_VN = \"o,a,n\";\n/** @internal */\nexport const ARGS_VNV = \"o,a,n,b\";\n/** @internal */\nexport const ARGS_VVN = \"o,a,b,n\";\n/** @internal */\nexport const SARGS_V = \"io=0,ia=0,so=1,sa=1\";\n/** @internal */\nexport const SARGS_VV = \"io=0,ia=0,ib=0,so=1,sa=1,sb=1\";\n/** @internal */\nexport const SARGS_VVV = \"io=0,ia=0,ib=0,ic=0,so=1,sa=1,sb=1,sc=1\";\n/** @internal */\nexport const DEFAULT_OUT = \"!o&&(o=a);\";\n/** @internal */\nexport const NEW_OUT = \"!o&&(o=[]);\";\n/** @internal */\nexport const NEW_OUT_A = \"!a&&(a=[]);\";\n/** @internal */\n// prettier-ignore\nexport const MATH = (op) => ([o, a, b]) => `${o}=${a}${op}${b};`;\n/** @internal */\n// prettier-ignore\nexport const MATH_N = (op) => ([o, a]) => `${o}=${a}${op}n;`;\n/** @internal */\n// prettier-ignore\nexport const MATH2 = (op1, op2) => ([o, a, b, c]) => `${o}=(${a}${op1}${b})${op2}${c};`;\n/** @internal */\n// prettier-ignore\nexport const MATH2_N = (op1, op2) => ([o, a, b]) => `${o}=(${a}${op1}${b})${op2}n;`;\n/** @internal */\n// prettier-ignore\nexport const MATH2A_N = (op1, op2) => ([o, a, b]) => `${o}=(${a}${op1}n)${op2}${b};`;\n/** @internal */\n// prettier-ignore\nexport const SIGNED = (op) => ([o, a, b]) => `${o}=(${a}${op}${b})|0;`;\n/** @internal */\n// prettier-ignore\nexport const UNSIGNED = (op) => ([o, a, b]) => `${o}=(${a}${op}${b})>>>0;`;\n/** @internal */\n// prettier-ignore\nexport const SIGNED_N = (op) => ([o, a]) => `${o}=(${a}${op}n)|0;`;\n/** @internal */\n// prettier-ignore\nexport const UNSIGNED_N = (op) => ([o, a]) => `${o}=(${a}${op}n)>>>0;`;\n/** @internal */\n// prettier-ignore\nexport const FN = (op = \"op\") => ([o, a]) => `${o}=${op}(${a});`;\n/** @internal */\n// prettier-ignore\nexport const FN2 = (op = \"op\") => ([o, a, b]) => `${o}=${op}(${a},${b});`;\n/** @internal */\n// prettier-ignore\nexport const FN3 = (op = \"op\") => ([o, a, b, c]) => `${o}=${op}(${a},${b},${c});`;\n/** @internal */\n// prettier-ignore\nexport const FN5 = (op = \"op\") => ([o, a, b, c, d, e]) => `${o}=${op}(${a},${b},${c},${d},${e});`;\n/** @internal */\n// prettier-ignore\nexport const FN_N = (op = \"op\") => ([o, a]) => `${o}=${op}(${a},n);`;\n/** @internal */\nexport const DOT = ([a, b]) => `${a}*${b}`;\n/** @internal */\nexport const DOT_G = ([a, b]) => `s+=${a}*${b};`;\n/** @internal */\nexport const SET = ([o, a]) => `${o}=${a};`;\n/** @internal */\nexport const SET_N = ([a]) => `${a}=n;`;\n/** @internal */\nexport const MIX = ([o, a, b, c]) => `${o}=${a}+(${b}-${a})*${c};`;\n/** @internal */\nexport const MIX_N = ([o, a, b]) => `${o}=${a}+(${b}-${a})*n;`;\n","import { rgbSrgb } from \"./rgb-srgb.js\";\nimport { srgbCss } from \"../srgb/srgb-css.js\";\nexport const rgbCss = (src) => srgbCss(rgbSrgb([], src));\n","import { setC4 } from \"@thi.ng/vectors/setc\";\nimport { __ensureAlpha } from \"../internal/ensure.js\";\nimport { linearSrgb } from \"../linear.js\";\n/**\n * Converts linear RGB to sRGB.\n *\n * @param out - result\n * @param src - source color\n */\nexport const rgbSrgb = (out, src) => setC4(out || src, linearSrgb(src[0]), linearSrgb(src[1]), linearSrgb(src[2]), __ensureAlpha(src[3]));\nconst GAMMA = 1 / 2.2;\nexport const rgbSrgbApprox = (out, src) => setC4(out || src, src[0] ** GAMMA, src[1] ** GAMMA, src[2] ** GAMMA, __ensureAlpha(src[3]));\n","/**\n * Maps a single linear RGB channel value to sRGB.\n *\n * {@link https://en.wikipedia.org/wiki/SRGB}\n *\n * @param x - channel value\n */\nexport const linearSrgb = (x) => x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055;\n/**\n * Maps a single linear sRGB channel value to linear RGB.\n *\n * {@link https://en.wikipedia.org/wiki/SRGB}\n *\n * @param x - channel value\n */\nexport const srgbLinear = (x) => x <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n","import { U24 } from \"@thi.ng/strings/radix\";\nimport { FF } from \"../api/constants.js\";\nimport { __ensureAlpha } from \"../internal/ensure.js\";\nimport { __scale8bit } from \"../internal/scale.js\";\nexport const srgbCss = (src) => {\n    const r = __scale8bit(src[0]);\n    const g = __scale8bit(src[1]);\n    const b = __scale8bit(src[2]);\n    const a = __ensureAlpha(src[3]);\n    // TODO update to `rgb(${r} ${g} ${b}/${FF(a)})` (CSS L4 syntax)\n    return a < 1\n        ? `rgba(${r},${g},${b},${FF(a)})`\n        : `#${U24((r << 16) | (g << 8) | b)}`;\n};\n","/** @internal */\nexport const __scale8bit = (x, shift = 0) => ((x < 0 ? 0 : x > 1 ? 1 : x) * 0xff + 0.5) << shift;\n","import { fattribs, ff } from \"./format.js\";\nexport const ellipse = (p, rx, ry, attribs, ...body) => [\n    \"ellipse\",\n    fattribs({\n        ...attribs,\n        cx: ff(p[0]),\n        cy: ff(p[1]),\n        rx: ff(rx),\n        ry: ff(ry),\n    }),\n    ...body,\n];\n","import { fattribs, fcolor, ff } from \"./format.js\";\nconst RE_ALPHA_COLOR = /(rgb|hsl)a\\(([a-z0-9.-]+),([0-9.%]+),([0-9.%]+),([0-9.]+)\\)/;\nconst gradient = (type, attribs, stops) => [\n    type,\n    fattribs(attribs),\n    ...stops.map(gradientStop),\n];\nconst gradientStop = ([offset, col]) => {\n    col = fcolor(col);\n    // use stop-opacity attrib for safari compatibility\n    // https://stackoverflow.com/a/26220870/294515\n    let opacity;\n    const parts = RE_ALPHA_COLOR.exec(col);\n    if (parts) {\n        col = `${parts[1]}(${parts[2]},${parts[3]},${parts[4]})`;\n        opacity = parts[5];\n    }\n    return [\"stop\", { offset, \"stop-color\": col, \"stop-opacity\": opacity }];\n};\nexport const linearGradient = (id, from, to, stops, attribs) => gradient(\"linearGradient\", {\n    ...attribs,\n    id,\n    x1: ff(from[0]),\n    y1: ff(from[1]),\n    x2: ff(to[0]),\n    y2: ff(to[1]),\n}, stops);\nexport const radialGradient = (id, from, to, fr, r, stops, attribs) => gradient(\"radialGradient\", {\n    ...attribs,\n    id,\n    fx: ff(from[0]),\n    fy: ff(from[1]),\n    cx: ff(to[0]),\n    cy: ff(to[1]),\n    fr: ff(fr),\n    r: ff(r),\n}, stops);\n","import { fattribs, ff } from \"./format.js\";\nexport const image = (pos, url, attribs, ...body) => [\n    \"image\",\n    fattribs({\n        ...attribs,\n        // TODO replace w/ SVG2 `href` once Safari supports it\n        \"xlink:href\": url,\n        x: ff(pos[0]),\n        y: ff(pos[1]),\n    }),\n    ...body,\n];\n","import { fattribs, ff } from \"./format.js\";\nexport const line = (a, b, attribs, ...body) => [\n    \"line\",\n    fattribs({\n        ...attribs,\n        x1: ff(a[0]),\n        y1: ff(a[1]),\n        x2: ff(b[0]),\n        y2: ff(b[1]),\n    }),\n    ...body,\n];\nexport const hline = (y, attribs) => line([-1e6, y], [1e6, y], attribs);\nexport const vline = (x, attribs) => line([x, -1e6], [x, 1e6], attribs);\n","import { fattribs, ff, fpoint, fpoints } from \"./format.js\";\nconst DEG = 180 / Math.PI;\nexport const path = (segments, attribs, ...body) => {\n    let res = [];\n    for (let seg of segments) {\n        res.push(seg[0]);\n        switch (seg[0].toLowerCase()) {\n            case \"a\":\n                res.push([\n                    // rx\n                    ff(seg[1]),\n                    // ry\n                    ff(seg[2]),\n                    // x-axis (theta)\n                    ff(seg[3] * DEG),\n                    // xl\n                    seg[4] ? 1 : 0,\n                    // clockwise\n                    seg[5] ? 1 : 0,\n                    // target xy\n                    ff(seg[6][0]),\n                    ff(seg[6][1]),\n                ].join(\",\"));\n                break;\n            case \"h\":\n            case \"v\":\n                res.push(ff(seg[1]));\n                break;\n            case \"m\":\n            case \"l\":\n                res.push(fpoint(seg[1]));\n                break;\n            case \"z\":\n                break;\n            default:\n                res.push(fpoints(seg.slice(1), \",\"));\n        }\n    }\n    return [\"path\", fattribs({ ...attribs, d: res.join(\"\") }), ...body];\n};\n","import { fattribs, ff, withoutKeys } from \"./format.js\";\n/**\n * Shape instancing group.\n *\n * @remarks\n * The `shape` arg can be an SVG shape `#id` defined elsewhere in the\n * document or set to `circle` or `rect` (default).\n *\n * The `size` arg is only used for the latter two shape types and\n * defines the radius or width respectively.\n *\n * @param pts - points\n * @param shape - shape type\n * @param size - point size/radius\n * @param attribs - attributes\n */\nexport const points = (pts, shape, size = 1, attribs, ...body) => {\n    const group = [\n        \"g\",\n        fattribs(withoutKeys(attribs, new Set([\"shape\", \"size\"]))),\n        ...body,\n    ];\n    const href = buildSymbol(group, shape, size);\n    for (let p of pts) {\n        // TODO replace w/ SVG2 `href` once Safari supports it\n        group.push([\"use\", { \"xlink:href\": href, x: ff(p[0]), y: ff(p[1]) }]);\n    }\n    return group;\n};\n/**\n * Similar to {@link points}, but takes points from a single large flat\n * buffer of coordinates with arbitrary striding.\n *\n * @remarks\n * In addition to `shape` and `size`, the following attribs can be used\n * to define the index range and strides:\n *\n * - `start` - start index (default: 0)\n * - `num` - number of points (default: buffer length/2)\n * - `cstride` - component stride (default: 1)\n * - `estride` - element stride (default: 2)\n *\n * @param pts - flat point buffer\n * @param shape - shape type\n * @param size - point size/radius\n * @param attribs - other attributes\n */\nexport const packedPoints = (pts, shape, size = 1, attribs, ...body) => {\n    attribs = {\n        start: 0,\n        cstride: 1,\n        estride: 2,\n        ...attribs,\n    };\n    const { start, cstride, estride } = attribs;\n    let num = attribs && attribs.num != null\n        ? attribs.num\n        : ((pts.length - start) / estride) | 0;\n    const group = [\n        \"g\",\n        fattribs(withoutKeys(attribs, new Set([\"start\", \"cstride\", \"estride\", \"shape\", \"size\", \"num\"]))),\n        ...body,\n    ];\n    const href = buildSymbol(group, shape, size);\n    for (let i = start; num-- > 0; i += estride) {\n        // TODO replace w/ SVG2 `href` once Safari supports it\n        group.push([\n            \"use\",\n            { \"xlink:href\": href, x: ff(pts[i]), y: ff(pts[i + cstride]) },\n        ]);\n    }\n    return group;\n};\nconst buildSymbol = (group, shape, size) => {\n    let href;\n    if (!shape || shape[0] !== \"#\") {\n        href = \"_\" + ((Math.random() * 1e6) | 0).toString(36);\n        group.push([\"g\", { opacity: 0 }, buildShape(shape, href, size)]);\n        href = \"#\" + href;\n    }\n    else {\n        href = shape;\n    }\n    return href;\n};\nconst buildShape = (shape, id, r) => {\n    const rf = ff(r);\n    if (shape === \"circle\") {\n        return [\"circle\", { id, cx: 0, cy: 0, r: rf }];\n    }\n    const rf2 = ff(-r / 2);\n    return [\"rect\", { id, x: rf2, y: rf2, width: rf, height: rf }];\n};\n","import { fattribs, fpoints } from \"./format.js\";\nexport const polygon = (pts, attribs, ...body) => [\n    \"polygon\",\n    fattribs({\n        ...attribs,\n        points: fpoints(pts),\n    }),\n    ...body,\n];\n","import { fattribs, fpoints } from \"./format.js\";\nexport const polyline = (pts, attribs, ...body) => [\n    \"polyline\",\n    fattribs({\n        fill: \"none\",\n        points: fpoints(pts),\n        ...attribs,\n    }),\n    ...body,\n];\n","import { fattribs, ff } from \"./format.js\";\nexport const rect = (p, width, height, attribs, ...body) => roundedRect(p, width, height, 0, 0, attribs, ...body);\nexport const roundedRect = (p, width, height, rx, ry, attribs, ...body) => {\n    attribs = fattribs({\n        ...attribs,\n        x: ff(p[0]),\n        y: ff(p[1]),\n        width: ff(width),\n        height: ff(height),\n    });\n    if (rx > 0 || ry > 0) {\n        attribs.rx = ff(rx);\n        attribs.ry = ff(ry);\n    }\n    return [\"rect\", attribs, ...body];\n};\n","import { fattribs, ff } from \"./format.js\";\nexport const text = (p, body, attribs, ...xs) => [\n    \"text\",\n    fattribs({\n        ...attribs,\n        x: ff(p[0]),\n        y: ff(p[1]),\n    }),\n    body,\n    ...xs,\n];\n","import { deref, isDeref } from \"@thi.ng/api/deref\";\nimport { implementsFunction } from \"@thi.ng/checks/implements-function\";\nimport { isArray } from \"@thi.ng/checks/is-array\";\nimport { isFunction } from \"@thi.ng/checks/is-function\";\nimport { isNotStringAndIterable } from \"@thi.ng/checks/is-not-string-iterable\";\nimport { isPlainObject } from \"@thi.ng/checks/is-plain-object\";\nimport { isString } from \"@thi.ng/checks/is-string\";\nimport { illegalArgs } from \"@thi.ng/errors/illegal-arguments\";\nimport { escapeEntities } from \"@thi.ng/strings/entities\";\nimport { ATTRIB_JOIN_DELIMS, CDATA, COMMENT, NO_CLOSE_EMPTY, NO_SPANS, PROC_TAGS, VOID_TAGS, } from \"./api.js\";\nimport { css } from \"./css.js\";\nimport { normalize } from \"./normalize.js\";\nimport { formatPrefixes } from \"./prefix.js\";\n/**\n * Recursively normalizes and serializes given tree as HTML/SVG/XML\n * string. Expands any embedded component functions with their results.\n *\n * @remarks\n * Each node of the input tree can have one of the following input\n * forms:\n *\n * ```js\n * [\"tag\", ...]\n * [\"tag#id.class1.class2\", ...]\n * [\"tag\", {other: \"attrib\"}, ...]\n * [\"tag\", {...}, \"body\", function, ...]\n * [function, arg1, arg2, ...]\n * [{render: (ctx,...) => [...]}, args...]\n * iterable\n * ```\n *\n * Tags can be defined in \"Zencoding\" convention, e.g.\n *\n * ```js\n * [\"div#foo.bar.baz\", \"hi\"] // <div id=\"foo\" class=\"bar baz\">hi</div>\n * ```\n *\n * The presence of the attributes object (2nd array index) is optional.\n * Any attribute values, incl. functions are allowed. If the latter, the\n * function is called with the full attribs object as argument and the\n * return value is used for the attribute. This allows for the dynamic\n * creation of attrib values based on other attribs. The only exception\n * to this are event attributes, i.e. attribute names starting with\n * \"on\". Function values assigned to event attributes will be omitted\n * from the output.\n *\n * ```js\n * [\"div#foo\", { bar: (attribs) => attribs.id + \"-bar\" }]\n * // <div id=\"foo\" bar=\"foo-bar\"></div>\n * ```\n *\n * The `style` attribute can ONLY be defined as string or object.\n *\n * ```js\n * [\"div\", {style: {color: \"red\", background: \"#000\"}}]\n * // <div style=\"color:red;background:#000;\"></div>\n * ```\n *\n * Boolean attribs are serialized in HTML5 syntax (present or not).\n * `null`, `undefined` or empty string attrib values are ignored.\n *\n * Any `null` or `undefined` array values (other than in head position)\n * will also be removed, unless a function is in head position.\n *\n * A function in head position of a node acts as a mechanism for\n * component composition & delayed execution. The function will only be\n * executed at serialization time. In this case the optional global\n * context object and all other elements of that node / array are passed\n * as arguments when that function is called. The return value the\n * function MUST be a valid new tree (or `undefined`).\n *\n * If the `ctx` object it'll be passed to each embedded component fns.\n * Optionally call {@link derefContext} prior to {@link serialize} to\n * auto-deref context keys with values implementing the\n * {@link @thi.ng/api#IDeref} interface.\n *\n * ```js\n * const foo = (ctx, a, b) => [\"div#\" + a, ctx.foo, b];\n *\n * serialize([foo, \"id\", \"body\"], { foo: { class: \"black\" } })\n * // <div id=\"id\" class=\"black\">body</div>\n * ```\n *\n * Functions located in other positions are called ONLY with the global\n * context arg and can return any (serializable) value (i.e. new trees,\n * strings, numbers, iterables or any type with a suitable\n * `.toString()`, `.toHiccup()` or `.deref()` implementation).\n *\n * If the optional `span` flag is true (default: false), all text\n * content will be wrapped in <span> elements (this is to ensure DOM\n * compatibility with hdom). The only elements for spans are never\n * created are listed in `NO_SPANS` in `api.ts`.\n *\n * If the optional `keys` flag is true (default: false), all elements\n * will have an autogenerated `key` attribute injected. If `span` is\n * enabled, `keys` will be enabled by default too (since in this case we\n * assume the output is meant to be compatible with\n * {@link @thi.ng/hdom# | @thi.ng/hdom}).\n *\n * hiccup & hdom control attributes (i.e. attrib names prefixed with\n * `__`) will be omitted from the output. The only control attrib\n * supported by this package is `__serialize`. If set to `false`, the\n * entire tree branch will be excluded from the output.\n *\n * Single or multiline comments can be included using the special\n * `COMMENT` tag (`__COMMENT__`) (always WITHOUT attributes!).\n *\n * ```\n * [COMMENT, \"Hello world\"]\n * // <!-- Hello world -->\n *\n * [COMMENT, \"Hello\", \"world\"]\n * <!--\n *     Hello\n *     world\n * -->\n * ```\n *\n * Currently, the only processing / DTD instructions supported are:\n *\n * - `?xml`\n * - `!DOCTYTPE`\n * - `!ELEMENT`\n * - `!ENTITY`\n * - `!ATTLIST`\n *\n * These are used as follows (attribs are only allowed for `?xml`, all\n * others only accept a body string which is taken as is):\n *\n * ```\n * [\"?xml\", { version: \"1.0\", standalone: \"yes\" }]\n * // <?xml version=\"1.0\" standalone=\"yes\"?>\n *\n * [\"!DOCTYPE\", \"html\"]\n * // <!DOCTYPE html>\n * ```\n *\n * @param tree - hiccup elements / component tree\n * @param ctx - arbitrary user context object\n * @param escape - auto-escape entities\n * @param span - use spans for text content\n * @param keys - attach key attribs\n */\nexport const serialize = (tree, ctx, escape = false, span = false, keys = span, path = [0]) => _serialize(tree, ctx, escape, span, keys, path);\nconst _serialize = (tree, ctx, esc, span, keys, path) => tree == null\n    ? \"\"\n    : Array.isArray(tree)\n        ? serializeElement(tree, ctx, esc, span, keys, path)\n        : isFunction(tree)\n            ? _serialize(tree(ctx), ctx, esc, span, keys, path)\n            : implementsFunction(tree, \"toHiccup\")\n                ? _serialize(tree.toHiccup(ctx), ctx, esc, span, keys, path)\n                : isDeref(tree)\n                    ? _serialize(tree.deref(), ctx, esc, span, keys, path)\n                    : isNotStringAndIterable(tree)\n                        ? serializeIter(tree, ctx, esc, span, keys, path)\n                        : ((tree = esc ? escapeEntities(String(tree)) : String(tree)), span)\n                            ? `<span${keys ? ` key=\"${path.join(\"-\")}\"` : \"\"}>${tree}</span>`\n                            : tree;\nconst serializeElement = (tree, ctx, esc, span, keys, path) => {\n    let tag = tree[0];\n    return !tree.length\n        ? \"\"\n        : isFunction(tag)\n            ? _serialize(tag.apply(null, [ctx, ...tree.slice(1)]), ctx, esc, span, keys, path)\n            : implementsFunction(tag, \"render\")\n                ? _serialize(tag.render.apply(null, [ctx, ...tree.slice(1)]), ctx, esc, span, keys, path)\n                : tag === COMMENT\n                    ? serializeComment(tree)\n                    : tag == CDATA\n                        ? serializeCData(tree)\n                        : isString(tag)\n                            ? serializeTag(tree, ctx, esc, span, keys, path)\n                            : isNotStringAndIterable(tree)\n                                ? serializeIter(tree, ctx, esc, span, keys, path)\n                                : illegalArgs(`invalid tree node: ${tree}`);\n};\nconst serializeTag = (tree, ctx, esc, span, keys, path) => {\n    tree = normalize(tree);\n    const attribs = tree[1];\n    if (attribs.__skip || attribs.__serialize === false)\n        return \"\";\n    keys && attribs.key === undefined && (attribs.key = path.join(\"-\"));\n    const tag = tree[0];\n    const body = tree[2]\n        ? serializeBody(tag, tree[2], ctx, esc, span, keys, path)\n        : !VOID_TAGS[tag] && !NO_CLOSE_EMPTY[tag]\n            ? `></${tag}>`\n            : PROC_TAGS[tag] || \"/>\";\n    return `<${tag}${serializeAttribs(attribs, esc)}${body}`;\n};\nconst serializeAttribs = (attribs, esc) => {\n    let res = \"\";\n    for (let a in attribs) {\n        if (a.startsWith(\"__\"))\n            continue;\n        const v = serializeAttrib(attribs, a, deref(attribs[a]), esc);\n        v != null && (res += v);\n    }\n    return res;\n};\nconst serializeAttrib = (attribs, a, v, esc) => {\n    return v == null\n        ? null\n        : isFunction(v) && (/^on\\w+/.test(a) || (v = v(attribs)) == null)\n            ? null\n            : v === true\n                ? \" \" + a\n                : v === false\n                    ? null\n                    : a === \"data\"\n                        ? serializeDataAttribs(v, esc)\n                        : attribPair(a, v, esc);\n};\nconst attribPair = (a, v, esc) => {\n    v =\n        a === \"style\" && isPlainObject(v)\n            ? css(v)\n            : a === \"prefix\" && isPlainObject(v)\n                ? formatPrefixes(v)\n                : isArray(v)\n                    ? v.join(ATTRIB_JOIN_DELIMS[a] || \" \")\n                    : v.toString();\n    return v.length ? ` ${a}=\"${esc ? escapeEntities(v) : v}\"` : null;\n};\nconst serializeDataAttribs = (data, esc) => {\n    let res = \"\";\n    for (let id in data) {\n        let v = deref(data[id]);\n        isFunction(v) && (v = v(data));\n        v != null && (res += ` data-${id}=\"${esc ? escapeEntities(v) : v}\"`);\n    }\n    return res;\n};\nconst serializeBody = (tag, body, ctx, esc, span, keys, path) => {\n    if (VOID_TAGS[tag]) {\n        illegalArgs(`No body allowed in tag: ${tag}`);\n    }\n    const proc = PROC_TAGS[tag];\n    let res = proc ? \" \" : \">\";\n    span = span && !proc && !NO_SPANS[tag];\n    for (let i = 0, n = body.length; i < n; i++) {\n        res += _serialize(body[i], ctx, esc, span, keys, [...path, i]);\n    }\n    return res + (proc || `</${tag}>`);\n};\nconst serializeComment = (tree) => tree.length > 2\n    ? `\\n<!--\\n${tree\n        .slice(1)\n        .map((x) => \"    \" + x)\n        .join(\"\\n\")}\\n-->\\n`\n    : `\\n<!-- ${tree[1]} -->\\n`;\nconst serializeCData = (tree) => `<![CDATA[\\n${tree.slice(1).join(\"\\n\")}\\n]]>`;\nconst serializeIter = (iter, ctx, esc, span, keys, path) => {\n    const res = [];\n    const p = path.slice(0, path.length - 1);\n    let k = 0;\n    for (let i of iter) {\n        res.push(_serialize(i, ctx, esc, span, keys, [...p, k++]));\n    }\n    return res.join(\"\");\n};\n","/**\n * Returns true iff `x` implements {@link IDeref}.\n *\n * @param x -\n */\nexport const isDeref = (x) => x != null && typeof x[\"deref\"] === \"function\";\n/**\n * If `x` implements {@link IDeref}, returns its wrapped value, else\n * returns `x` itself.\n *\n * @param x -\n */\nexport const deref = (x) => (isDeref(x) ? x.deref() : x);\n","export const isFunction = (x) => typeof x === \"function\";\n","export const isNotStringAndIterable = (x) => x != null &&\n    typeof x !== \"string\" &&\n    typeof x[Symbol.iterator] === \"function\";\n","const OBJP = Object.getPrototypeOf;\n/**\n * Similar to {@link isObject}, but also checks if prototype is that of\n * `Object` (or `null`).\n *\n * @param x -\n */\nexport const isPlainObject = (x) => {\n    let p;\n    return (x != null &&\n        typeof x === \"object\" &&\n        ((p = OBJP(x)) === null || OBJP(p) === null));\n};\n","import { defError } from \"./deferror.js\";\nexport const IllegalArgumentError = defError(() => \"illegal argument(s)\");\nexport const illegalArgs = (msg) => {\n    throw new IllegalArgumentError(msg);\n};\n","export const ENTITIES = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    '\"': \"&quot;\",\n    \"'\": \"&apos;\",\n    \"—\": \"&mdash;\",\n    \"–\": \"&ndash;\",\n    \"…\": \"&hellip;\",\n    \"¢\": \"&cent;\",\n    \"€\": \"&euro;\",\n    \"£\": \"&pound;\",\n    \"§\": \"&sect;\",\n    \"©\": \"&copy;\",\n    \"®\": \"&reg;\",\n    \"™\": \"&trade;\",\n    \"\\xa0\": \"&nbsp;\",\n};\nexport const RE_ENTITIES = new RegExp(`[${Object.keys(ENTITIES).join(\"\")}]`, \"g\");\nexport const ENTITIES_REV = Object.entries(ENTITIES).reduce((acc, [k, v]) => ((acc[v] = k), acc), {});\nexport const RE_ENTITIES_REV = new RegExp(`(${Object.keys(ENTITIES_REV).join(\"|\")})`, \"g\");\nconst $esc = (re, index) => (src) => src.replace(re, (x) => index[x]);\nexport const escapeEntities = $esc(RE_ENTITIES, ENTITIES);\nexport const unescapeEntities = $esc(RE_ENTITIES_REV, ENTITIES_REV);\n","/** @internal */\nexport const PROC_TAGS = {\n    \"?xml\": \"?>\\n\",\n    \"!DOCTYPE\": \">\\n\",\n    \"!ENTITY\": \">\\n\",\n    \"!ELEMENT\": \">\\n\",\n    \"!ATTLIST\": \">\\n\",\n};\n/** @internal */\nexport const RE_TAG = /^([^\\s\\.#]+)(?:#([^\\s\\.#]+))?(?:\\.([^\\s#]+))?$/;\n/** @internal */\nexport const COMMENT = \"__COMMENT__\";\n/** @internal */\nexport const CDATA = \"!CDATA\";\n/** @internal */\nexport const NO_SPANS = {\n    button: 1,\n    option: 1,\n    script: 1,\n    style: 1,\n    text: 1,\n    textarea: 1,\n    title: 1,\n};\nconst tagMap = (tags) => tags.split(\" \").reduce((acc, x) => ((acc[x] = true), acc), {});\n/** @internal */\n// tslint:disable-next-line\nexport const SVG_TAGS = tagMap(\"animate animateColor animateMotion animateTransform circle clipPath color-profile defs desc discard ellipse feBlend feColorMatrix feComponentTransfer feComposite feConvolveMatrix feDiffuseLighting feDisplacementMap feDistantLight feDropShadow feFlood feFuncA feFuncB feFuncG feFuncR feGaussianBlur feImage feMerge feMergeNode feMorphology feOffset fePointLight feSpecularLighting feSpotLight feTile feTurbulence filter font foreignObject g image line linearGradient marker mask metadata mpath path pattern polygon polyline radialGradient rect set stop style svg switch symbol text textPath title tref tspan use view\");\n/** @internal */\n// tslint:disable-next-line\nexport const VOID_TAGS = tagMap(\"area base br col command embed hr img input keygen link meta param source stop track use wbr ?xml\");\n/** @internal */\n// tslint:disable-next-line\nexport const NO_CLOSE_EMPTY = tagMap(\"animate circle ellipse line path polygon polyline rect\");\n/** @internal */\nexport const ATTRIB_JOIN_DELIMS = {\n    accept: \",\",\n    sizes: \",\",\n    srcset: \",\",\n};\n","import { deref } from \"@thi.ng/api/deref\";\nimport { isFunction } from \"@thi.ng/checks/is-function\";\nexport const css = (rules) => {\n    let css = \"\";\n    let v;\n    for (let r in rules) {\n        v = deref(rules[r]);\n        isFunction(v) && (v = v(rules));\n        v != null && (css += `${r}:${v};`);\n    }\n    return css;\n};\n","import { isPlainObject } from \"@thi.ng/checks/is-plain-object\";\nimport { isString } from \"@thi.ng/checks/is-string\";\nimport { illegalArgs } from \"@thi.ng/errors/illegal-arguments\";\nimport { RE_TAG } from \"./api.js\";\nimport { mergeEmmetAttribs } from \"./attribs.js\";\nexport const normalize = (tag) => {\n    let name = tag[0];\n    let match;\n    const hasAttribs = isPlainObject(tag[1]);\n    const attribs = hasAttribs ? { ...tag[1] } : {};\n    if (!isString(name) || !(match = RE_TAG.exec(name))) {\n        illegalArgs(`\"${name}\" is not a valid tag name`);\n    }\n    name = match[1];\n    mergeEmmetAttribs(attribs, match[2], match[3]);\n    if (tag.length > 1) {\n        tag = tag.slice(hasAttribs ? 2 : 1).filter((x) => x != null);\n        if (tag.length > 0) {\n            return [name, attribs, tag];\n        }\n    }\n    return [name, attribs];\n};\n","import { deref } from \"@thi.ng/api/deref\";\nimport { isString } from \"@thi.ng/checks/is-string\";\n/**\n * Takes a space separated string of existing CSS class names and merges\n * it with `val`, which is either another string of class names, an\n * object of booleans or an `IDeref` evaluating to either. Returns\n * updated class string.\n *\n * @remarks\n * If `val` evaluates to a string, it will be appended to `existing`.\n *\n * If `val` is an object, its keys are used as class names and their\n * values indicate if the class should be added or removed from the\n * existing set.\n *\n * @example\n * ```ts\n * mergeClasses(\"foo bar\", { foo: false, baz: true })\n * // \"bar baz\"\n *\n * mergeClasses(\"foo bar\", \"baz\");\n * // \"baz\"\n * ```\n *\n * @param existing -\n * @param val -\n */\nexport const mergeClasses = (existing, val) => {\n    val = deref(val);\n    if (val == null)\n        return existing;\n    if (isString(val))\n        return existing + \" \" + val;\n    const classes = new Set(existing.split(\" \"));\n    for (let id in val) {\n        deref(val[id]) ? classes.add(id) : classes.delete(id);\n    }\n    return [...classes].join(\" \");\n};\n/**\n * Takes an attrib object and optional element ID and CSS class names from Emmet-style\n * hiccup tag, then transforms and merges definitions, returns attribs.\n *\n * @param attribs -\n * @param id -\n * @param classes -\n */\nexport const mergeEmmetAttribs = (attribs, id, classes) => {\n    id && (attribs.id = id);\n    let aclass = deref(attribs.class);\n    if (classes) {\n        classes = classes.replace(/\\./g, \" \");\n        attribs.class = aclass ? mergeClasses(classes, aclass) : classes;\n    }\n    else if (aclass) {\n        attribs.class = isString(aclass) ? aclass : mergeClasses(\"\", aclass);\n    }\n    return attribs;\n};\n","/**\n * Takes an object of RDF/XML prefixes and returns formatted string for\n * the RDFa `prefix` attribute.\n *\n * @example\n * ```ts\n * import { foaf, xsd } from \"@thi.ng/prefixes\";\n *\n * formatPrefixes({ foaf, xsd })\n * // \"foaf: http://xmlns.com/foaf/0.1/ rdf: http://www.w3.org/2001/XMLSchema#\"\n * ```\n *\n * @param prefixes -\n */\nexport const formatPrefixes = (prefixes) => Object.keys(prefixes)\n    .reduce((acc, k) => (acc.push(`${k}: ${prefixes[k]}`), acc), [])\n    .join(\" \");\n","import { fitClamped } from \"@thi.ng/math/fit\";\nimport { fract } from \"@thi.ng/math/prec\";\nimport { padLeft } from \"@thi.ng/strings/pad-left\";\nimport { padRight } from \"@thi.ng/strings/pad-right\";\nimport { repeat } from \"@thi.ng/strings/repeat\";\nimport { map } from \"@thi.ng/transducers/map\";\nimport { BARS_H, BARS_V } from \"./api.js\";\nexport const barChartHLines = (height, vals, min = 0, max = 1) => {\n    const bars = [...map((x) => barVertical(height, x, min, max, \"\"), vals)];\n    const num = bars.length;\n    const res = [];\n    for (let i = 0; i < height; i++) {\n        let line = \"\";\n        for (let j = 0; j < num; j++) {\n            line += bars[j][i];\n        }\n        res.push(line);\n    }\n    return res;\n};\nexport const barChartHStr = (height, vals, min, max) => barChartHLines(height, vals, min, max).join(\"\\n\");\nexport const barChartVLines = (width, vals, min = 0, max = 1) => [...map((x) => barHorizontal(width, x, min, max), vals)];\nexport const barChartVStr = (width, vals, min, max) => barChartVLines(width, vals, min, max).join(\"\\n\");\nexport const barHorizontal = (width, x, min = 0, max = 1) => bar(BARS_H, width, false, x, min, max, \"\");\nexport const barVertical = (height, x, min = 0, max = 1, delim = \"\\n\") => bar(BARS_V, height, true, x, min, max, delim);\nconst bar = (chars, size, left, x, min, max, delim) => {\n    x = fitClamped(x, min, max, 0, size);\n    const f = (fract(x) * 9) | 0;\n    const full = repeat(chars[8] + delim, x | 0);\n    const partial = f > 0 ? chars[f] + delim : \"\";\n    size += size * delim.length;\n    return left\n        ? padLeft(size, \" \")(partial + full)\n        : padRight(size, \" \")(full + partial);\n};\n","import { memoizeJ } from \"@thi.ng/memoize/memoizej\";\nimport { repeat } from \"./repeat.js\";\n/**\n * @param n - target length\n * @param ch - pad character(s)\n */\nexport const padRight = memoizeJ((n, ch = \" \") => {\n    const buf = repeat(String(ch), n);\n    return (x, len) => {\n        if (x == null)\n            return buf;\n        x = x.toString();\n        len = len !== undefined ? len : x.length;\n        return len < n ? x + buf.substring(len) : x;\n    };\n});\n","export var Align;\n(function (Align) {\n    Align[Align[\"LEFT\"] = 0] = \"LEFT\";\n    Align[Align[\"RIGHT\"] = 1] = \"RIGHT\";\n    Align[Align[\"CENTER\"] = 2] = \"CENTER\";\n})(Align || (Align = {}));\nexport var Border;\n(function (Border) {\n    Border[Border[\"NONE\"] = 0] = \"NONE\";\n    Border[Border[\"H\"] = 1] = \"H\";\n    Border[Border[\"V\"] = 2] = \"V\";\n    Border[Border[\"ALL\"] = 3] = \"ALL\";\n    Border[Border[\"FRAME\"] = 4] = \"FRAME\";\n    Border[Border[\"FRAME_H\"] = 5] = \"FRAME_H\";\n    Border[Border[\"FRAME_V\"] = 6] = \"FRAME_V\";\n})(Border || (Border = {}));\n// https://en.wikipedia.org/wiki/Box-drawing_character\nexport const STYLE_ASCII = {\n    hl: \"-\",\n    vl: \"|\",\n    tl: \"+\",\n    tr: \"+\",\n    bl: \"+\",\n    br: \"+\",\n    tjl: \"+\",\n    tjr: \"+\",\n    tjt: \"+\",\n    tjb: \"+\",\n    jct: \"+\",\n    dot: \".\",\n};\nexport const STYLE_THIN = {\n    hl: \"─\",\n    vl: \"│\",\n    tl: \"┌\",\n    tr: \"┐\",\n    bl: \"└\",\n    br: \"┘\",\n    tjl: \"├\",\n    tjr: \"┤\",\n    tjt: \"┬\",\n    tjb: \"┴\",\n    jct: \"┼\",\n    dot: \"•\",\n};\nexport const STYLE_THIN_ROUNDED = {\n    ...STYLE_THIN,\n    tl: \"╭\",\n    tr: \"╮\",\n    bl: \"╰\",\n    br: \"╯\",\n};\nexport const STYLE_DASHED = {\n    ...STYLE_THIN,\n    hl: \"╌\",\n    vl: \"┆\",\n};\nexport const STYLE_DASHED_ROUNDED = {\n    ...STYLE_DASHED,\n    tl: \"╭\",\n    tr: \"╮\",\n    bl: \"╰\",\n    br: \"╯\",\n};\nexport const STYLE_DOUBLE = {\n    hl: \"═\",\n    vl: \"║\",\n    tl: \"╔\",\n    tr: \"╗\",\n    bl: \"╚\",\n    br: \"╝\",\n    tjl: \"╠\",\n    tjr: \"╣\",\n    tjt: \"╦\",\n    tjb: \"╩\",\n    jct: \"╬\",\n    dot: \"•\",\n};\nexport const ENDINGS = \"()[]{}<>^v◀▶▲▼•●\";\nexport const BARS_H = \" ▏▎▍▌▋▊▉█\";\nexport const BARS_V = \" ▁▂▃▄▅▆▇█\";\nexport const SHADES_ASCII_10 = \" .-:=+*#%@\";\nexport const SHADES_ASCII_16 = \" .,:|+*=il3GOWQ0\";\nexport const SHADES_BLOCK = \" ░▒▓█\";\nexport const SHADES_BLOCK_ALT = \" ▖▞▟█\";\n","import { convertTree } from \"@thi.ng/hiccup-svg/convert\";\nimport { svg } from \"@thi.ng/hiccup-svg/svg\";\nimport { serialize } from \"@thi.ng/hiccup/serialize\";\nimport { fit } from \"@thi.ng/math/fit\";\nimport { inRange } from \"@thi.ng/math/interval\";\n/**\n * Takes an {@link @thi.ng/fuzzy#LVar} and visualization options. Evaluates all\n * of the var's fuzzy sets in the var's value domain and visualizes them as\n * polygons. Returns a {@link @thi.ng/hiccup-canvas#} compatible shape component\n * tree.\n *\n * @param var -\n * @param opts -\n */\nexport const varToHiccup = ({ domain: [min, max], terms }, opts = {}) => {\n    const { samples, width, height, labels, stroke: strokeFn, fill: fillFn, } = {\n        samples: 200,\n        width: 600,\n        height: 100,\n        labels: true,\n        stroke: (x) => `hsl(${(x * 360) | 0},100%,40%)`,\n        fill: (x) => `hsla(${(x * 360) | 0},100%,50%,20%)`,\n        ...opts,\n    };\n    const keys = Object.keys(terms);\n    const dt = (max - min) / samples;\n    const ds = width / samples;\n    const dn = 1 / keys.length;\n    const curves = [];\n    const legend = [];\n    for (let i = 0; i < keys.length; i++) {\n        const id = keys[i];\n        const f = terms[id];\n        const y = (i + 1) * 12;\n        const stroke = strokeFn(i * dn);\n        const curr = [];\n        for (let i = 0; i <= samples; i++) {\n            curr.push([i * ds, (1 - f(min + i * dt)) * height]);\n        }\n        curr.push([width, height], [0, height]);\n        curves.push([\n            \"polygon\",\n            {\n                stroke,\n                fill: fillFn(i * dn),\n            },\n            curr,\n        ]);\n        if (labels) {\n            legend.push([\"line\", { stroke }, [0, y], [20, y]], [\n                \"text\",\n                {\n                    baseline: \"middle\",\n                    fill: \"black\",\n                },\n                [30, y],\n                id,\n            ]);\n        }\n    }\n    const zero = fit(0, min, max, 0, width);\n    return svg({\n        width,\n        height: height + 12,\n        fill: \"none\",\n        \"font-family\": \"sans-serif\",\n        \"font-size\": 10,\n    }, ...curves, ...legend, inRange(zero, width * 0.05, width * 0.95)\n        ? [\n            \"g\",\n            {},\n            [\n                \"line\",\n                {\n                    stroke: \"black\",\n                    dash: [1, 1],\n                },\n                [zero, 0],\n                [zero, height],\n            ],\n            [\n                \"text\",\n                { align: \"center\", fill: \"black\" },\n                [zero, height + 10],\n                \"0.00\",\n            ],\n        ]\n        : null, [\n        \"g\",\n        { fill: \"black\" },\n        [\"text\", {}, [0, height + 10], min.toFixed(2)],\n        [\"text\", { align: \"end\" }, [width, height + 10], max.toFixed(2)],\n    ]);\n};\n/**\n * Similar to {@link varToHiccup}, but then also serializes the result to an\n * actual SVG string.\n *\n * @param $var\n * @param opts -\n */\nexport const varToSvg = ($var, opts) => serialize(convertTree(varToHiccup($var, opts)));\n","import { XML_SVG, XML_XLINK } from \"@thi.ng/prefixes/xml\";\nimport { convertTree } from \"./convert.js\";\nimport { fattribs } from \"./format.js\";\n/**\n * Defines an <svg> root element with default XML namespaces. By default\n * currently still defaults to SVG version to 1.1 to support Safari and other\n * legacy tooling.\n *\n * @remarks\n * If the `convert: true` attrib is given, all body elements will be\n * automatically converted using {@link convertTree}. The `convert` attrib is\n * NOT going to be serialized in the final output.\n *\n * @param attribs - attributes object\n * @param body - shape primitives\n */\nexport const svg = (attribs, ...body) => {\n    attribs = fattribs({\n        version: \"1.1\",\n        xmlns: XML_SVG,\n        \"xmlns:xlink\": XML_XLINK,\n        ...attribs,\n    }, \"width\", \"height\", \"stroke-width\");\n    if (attribs.convert) {\n        delete attribs.convert;\n        body = body.map(convertTree);\n    }\n    return [\"svg\", attribs, ...body];\n};\n","export const XML = \"http://www.w3.org/XML/1998/namespace\";\nexport const XML_FN = \"http://www.w3.org/2005/xpath-functions\";\nexport const XML_FO = \"http://www.w3.org/1999/XSL/Format\";\nexport const XML_SVG = \"http://www.w3.org/2000/svg\";\nexport const XML_XHTML = \"http://www.w3.org/1999/xhtml\";\nexport const XML_XLINK = \"http://www.w3.org/1999/xlink\";\nexport const XML_XMLNS = \"http://www.w3.org/2000/xmlns/\";\nexport const XML_XSD = \"http://www.w3.org/2001/XMLSchema\";\nexport const XML_XSL = \"http://www.w3.org/1999/XSL/Transform\";\n","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n","module.exports = console;\n","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n","# Transcrypt runtime module\r\n\r\n#__pragma__ ('js', 'export var __envir__ = {{}};\\n{}', __include__ ('org/transcrypt/__envir__.js'))\r\n#__pragma__ ('js', '{}', __include__ ('org/transcrypt/__core__.js'))\r\n#__pragma__ ('js', '{}', __include__ ('org/transcrypt/__builtin__.js'))\r\n\r\n#__pragma__ ('skip')\r\ncopy = Math = __typeof__ = __repr__ = document = console = window = 0\r\n#__pragma__ ('noskip')\r\n\r\n#__pragma__ ('notconv')  # !!! tconv gives a problem with __terminal__, needs investigation\r\n#__pragma__ ('nokwargs')\r\n#__pragma__ ('noalias', 'sort')\r\n\r\nclass BaseException:\r\n    pass\r\n\r\nclass Exception (BaseException):\r\n    #__pragma__ ('kwargs')\r\n    def __init__ (self, *args, **kwargs):\r\n        self.__args__ = args\r\n        if kwargs.error != None:\r\n            self.stack = kwargs.error.stack # Integrate with JavaScript Error object\r\n        elif Error:\r\n            self.stack = (__new__(Error())).stack # Create our own stack if we aren't given one\r\n        else:\r\n            self.stack = 'No stack trace available'\r\n    #__pragma__ ('nokwargs')\r\n        \r\n    def __repr__ (self):\r\n        if len (self.__args__) > 1:\r\n            return '{}{}'.format (self.__class__.__name__, repr (tuple (self.__args__)))\r\n        elif len (self.__args__):\r\n            return '{}({})'.format (self.__class__.__name__, repr (self.__args__ [0]))        \r\n        else:\r\n            return '{}()'.format (self.__class__.__name__)\r\n            \r\n    def __str__ (self):\r\n        if len (self.__args__) > 1:\r\n            return str (tuple (self.__args__))\r\n        elif len (self.__args__):\r\n            return str (self.__args__ [0])\r\n        else:\r\n            return ''\r\n        \r\nclass IterableError (Exception):\r\n    def __init__ (self, error):\r\n        Exception.__init__ (self, 'Can\\'t iterate over non-iterable', error = error)\r\n            \r\nclass StopIteration (Exception):\r\n    def __init__ (self, error):\r\n        Exception.__init__ (self, 'Iterator exhausted', error = error)\r\n        \r\nclass ValueError (Exception):\r\n    def __init__ (self, message, error):\r\n        Exception.__init__ (self, message, error = error)\r\n    \r\nclass KeyError (Exception):\r\n    def __init__ (self, message, error):\r\n        Exception.__init__ (self, message, error = error)\r\n    \r\nclass AssertionError (Exception):\r\n    def __init__ (self, message, error):\r\n        if message:\r\n            Exception.__init__ (self, message, error = error)\r\n        else:\r\n            Exception.__init__ (self, error = error)\r\n\r\nclass NotImplementedError (Exception):\r\n    def __init__(self, message, error):\r\n        Exception.__init__(self, message, error = error)\r\n\r\nclass IndexError (Exception):\r\n    def __init__(self, message, error):\r\n        Exception.__init__(self, message, error = error)\r\n\r\nclass AttributeError (Exception):\r\n    def __init__(self, message, error):\r\n        Exception.__init__(self, message, error = error)\r\n\r\nclass TypeError (Exception):\r\n    def __init__(self, message, error):\r\n        Exception.__init__(self, message, error = error)\r\n\r\n# Warnings Exceptions\r\n# N.B. This is a limited subset of the warnings defined in\r\n# the cpython implementation to keep things small for now.\r\n\r\nclass Warning (Exception):\r\n    ''' Warning Base Class\r\n    '''\r\n    pass\r\n\r\nclass UserWarning (Warning):\r\n    pass\r\n\r\nclass DeprecationWarning (Warning):\r\n    pass\r\n\r\nclass RuntimeWarning (Warning):\r\n    pass\r\n    \r\n#__pragma__ ('kwargs')\r\n\r\ndef __sort__ (iterable, key = None, reverse = False):               # Used by py_sort, can deal with kwargs\r\n    if key:\r\n        iterable.sort (lambda a, b: 1 if key (a) > key (b) else -1) # JavaScript sort, case '==' is irrelevant for sorting\r\n    else:\r\n        iterable.sort ()                                            # JavaScript sort\r\n        \r\n    if reverse:\r\n        iterable.reverse ()\r\n        \r\ndef sorted (iterable, key = None, reverse = False):\r\n    if type (iterable) == dict:\r\n        result = copy (iterable.keys ()) \r\n    else:       \r\n        result = copy (iterable)\r\n        \r\n    __sort__ (result, key, reverse)\r\n    return result\r\n\r\n#__pragma__ ('nokwargs')\r\n\r\ndef map (func, iterable):\r\n    return [func (item) for item in iterable]\r\n\r\n\r\ndef filter (func, iterable):\r\n    if func == None:\r\n        func = bool\r\n    return [item for item in iterable if func (item)]\r\n    \r\ndef divmod (n, d):\r\n    return n // d, n % d\r\n    \r\n#__pragma__ ('ifdef', '__complex__')\r\n\r\nclass complex:\r\n    def __init__ (self, real, imag = None):\r\n        if imag == None:\r\n            if type (real) == complex:\r\n                self.real = real.real\r\n                self.imag = real.imag\r\n            else:\r\n                self.real = real\r\n                self.imag = 0\r\n        else:\r\n            self.real = real\r\n            self.imag = imag\r\n            \r\n    def __neg__ (self):\r\n        return complex (-self.real, -self.imag)\r\n        \r\n    def __exp__ (self):\r\n        modulus = Math.exp (self.real)\r\n        return complex (modulus * Math.cos (self.imag), modulus * Math.sin (self.imag))\r\n    \r\n    def __log__ (self):\r\n        return complex (Math.log (Math.sqrt (self.real * self.real + self.imag * self.imag)), Math.atan2 (self.imag, self.real))\r\n        \r\n    def __pow__ (self, other):  # a ** b = exp (b log a)\r\n        return (self.__log__ () .__mul__ (other)) .__exp__ ()\r\n        \r\n    def __rpow__ (self, real):  # real ** comp -> comp.__rpow__ (real)\r\n        return self.__mul__ (Math.log (real)) .__exp__ ()\r\n        \r\n    def __mul__ (self, other):\r\n        if __typeof__ (other) is 'number':\r\n            return complex (self.real * other, self.imag * other)\r\n        else:\r\n            return complex (self.real * other.real - self.imag * other.imag, self.real * other.imag + self.imag * other.real)\r\n        \r\n    def __rmul__ (self, real):  # real + comp -> comp.__rmul__ (real)\r\n        return complex (self.real * real, self.imag * real)\r\n        \r\n    def __div__ (self, other):\r\n        if __typeof__ (other) is 'number':\r\n            return complex (self.real / other, self.imag / other)\r\n        else:\r\n            denom = other.real * other.real + other.imag * other.imag\r\n            return complex (\r\n                (self.real * other.real + self.imag * other.imag) / denom,\r\n                (self.imag * other.real - self.real * other.imag) / denom\r\n            )\r\n        \r\n    def __rdiv__ (self, real):  # real / comp -> comp.__rdiv__ (real)\r\n        denom = self.real * self.real\r\n        return complex (\r\n            (real * self.real) / denom,\r\n            (real * self.imag) / denom\r\n        )\r\n        \r\n    def __add__ (self, other):\r\n        if __typeof__ (other) is 'number':\r\n            return complex (self.real + other, self.imag)\r\n        else:   # Assume other is complex\r\n            return complex (self.real + other.real, self.imag + other.imag)\r\n        \r\n    def __radd__ (self, real):  # real + comp -> comp.__radd__ (real)\r\n        return complex (self.real + real, self.imag)\r\n        \r\n    def __sub__ (self, other):\r\n        if __typeof__ (other) is 'number':\r\n            return complex (self.real - other, self.imag)\r\n        else:\r\n            return complex (self.real - other.real, self.imag - other.imag)\r\n        \r\n    def __rsub__ (self, real):  # real - comp -> comp.__rsub__ (real)\r\n        return complex (real - self.real, -self.imag)\r\n        \r\n    def __repr__ (self):\r\n        return '({}{}{}j)'.format (self.real, '+' if self.imag >= 0 else '', self.imag)\r\n            \r\n    def __str__ (self):\r\n        return __repr__ (self) [1 : -1]\r\n        \r\n    def __eq__ (self, other):\r\n        if __typeof__ (other) is 'number':\r\n            return self.real == other\r\n        else:\r\n            return self.real == other.real and self.imag == other.imag\r\n        \r\n    def __ne__ (self, other):\r\n        if __typeof__ (other) is 'number':\r\n            return self.real != other\r\n        else:\r\n            return self.real != other.real or self.imag != other.imag\r\n        \r\n    def conjugate (self):\r\n        return complex (self.real, -self.imag)\r\n        \r\ndef __conj__ (aNumber):\r\n    if isinstance (aNumber, complex):\r\n        return complex (aNumber.real, -aNumber.imag)\r\n    else:\r\n        return complex (aNumber, 0)\r\n        \r\n#__pragma__ ('endif')\r\n\r\nclass __Terminal__:\r\n    '''\r\n    Printing to either the console or to html happens async, but is blocked by calling window.prompt.\r\n    So while all input and print statements are encountered in normal order, the print's exit immediately without yet having actually printed\r\n    This means the next input takes control, blocking actual printing and so on indefinitely\r\n    The effect is that everything's only printed after all inputs are done\r\n    To prevent that, what's needed is to only execute the next window.prompt after actual printing has been done\r\n    Since we've no way to find out when that is, a timeout is used.\r\n    '''\r\n\r\n    def __init__ (self):\r\n        self.buffer = ''\r\n    \r\n        try:\r\n            self.element = document.getElementById ('__terminal__')\r\n        except:\r\n            self.element = None\r\n            \r\n        if self.element:\r\n            self.element.style.overflowX = 'auto'\r\n            self.element.style.boxSizing = 'border-box'\r\n            self.element.style.padding = '5px'\r\n            self.element.innerHTML = '_'\r\n        \r\n    #__pragma__ ('kwargs')\r\n        \r\n    def print (self, *args, sep = ' ', end = '\\n'):\r\n        self.buffer = '{}{}{}'.format (self.buffer, sep.join ([str (arg) for arg in args]), end) [-4096 : ] \r\n        \r\n        if self.element:\r\n            self.element.innerHTML = self.buffer.replace ('\\n', '<br>') .replace (' ', '&nbsp')\r\n            self.element.scrollTop = self.element.scrollHeight\r\n        else:\r\n            console.log (sep.join ([str (arg) for arg in args]))\r\n        \r\n    def input (self, question):\r\n        self.print ('{}'.format (question), end = '')\r\n        answer = window.prompt ('\\n'.join (self.buffer.split ('\\n') [-8:]))\r\n        self.print (answer)\r\n        return answer\r\n        \r\n    #__pragma__ ('nokwargs')\r\n    \r\n__terminal__ = __Terminal__ ()\r\n\r\nprint = __terminal__.print\r\ninput = __terminal__.input\r\n","from typing import Any\n\n# __pragma__ ('skip')\ndef require(lib):\n    return lib\n\nclass document:\n    getElementById = None\n    addEventListener = None\n\ndef __new__(*args) -> Any:\n    pass\n# __pragma__ ('noskip')\n\n\n# Hyperapp FFI\n\nHyper = require('hyperapp')\nHtml = require('@hyperapp/html')\nSvg = require('@hyperapp/svg')\n\n\n# Thi-ng Fuzzy FFI\n\nFuzzy = require('@thi.ng/fuzzy')\nFuzzy['or_'] = Fuzzy['or']\nFuzzy['and_'] = Fuzzy['and']\n\nFuzzyViz = require('@thi.ng/fuzzy-viz')\n\n\n# Globals FFI\n\nwindow = require('global/window')\nconsole = require('global/console')\ndocument = require('global/document')\n\nis_nan = window.Number.js_isNaN\n\n\n# JSON\n\nJson = window.JSON\n\n\n# Polyfill asdict for dataclasses\n\ndef asdict(data):\n    props = dict()\n    propNames = window.Object['keys'](data)\n\n    for propName in propNames:\n        if \"__\" in propName:\n            continue\n        else:\n            props[propName] = data[propName]\n\n    return props\n\n\n# Polyfill field for dataclasses\n\ndef field(default_factory=None):\n    if default_factory:\n        return default_factory()\n    else:\n        return default_factory\n","pi = Math.PI\r\ne = Math.E\r\n\r\nexp = Math.exp\r\n\r\ndef expm1 (x):      # IE workaround\r\n    return Math.exp (x) - 1\r\n\r\ndef log (x, base):\r\n    return Math.log (x) if base is js_undefined else Math.log (x) / Math.log (base)\r\n\r\ndef log1p (x):      # IE workaround\r\n    return Math.log (x + 1)\r\n\r\ndef log2 (x):       # IE workaround\r\n    return Math.log (x) / Math.LN2\r\n    \r\ndef log10 (x):      # IE workaround\r\n    return Math.log (x) / Math.LN10\r\n\r\npow = Math.pow\r\nsqrt = Math.sqrt\r\n\r\nsin = Math.sin\r\ncos = Math.cos\r\ntan = Math.tan\r\n\r\nasin = Math.asin\r\nacos = Math.acos\r\natan = Math.atan\r\natan2 = Math.atan2\r\n\r\nhypot = Math.hypot\r\n    \r\ndef degrees (x):\r\n    return x * 180 / Math.PI\r\n    \r\ndef radians (x):\r\n    return x * Math.PI / 180\r\n    \r\nsinh = Math.sinh\r\ncosh = Math.cosh\r\ntanh = Math.tanh\r\n\r\nasinh = Math.asinh\r\nacosh = Math.acosh\r\natanh = Math.atanh\r\n\r\nfloor = Math.floor\r\nceil = Math.ceil\r\ntrunc = Math.trunc\r\n\r\nisnan = js_isNaN\r\n\r\ninf = js_Infinity\r\nnan = js_NaN\r\n\r\ndef modf(n):\r\n    sign = 1 if n >= 0 else -1\r\n    f, mod = divmod (abs(n), 1)\r\n    return mod * sign, f * sign\r\n","from math import sqrt\nfrom dataclasses import dataclass\nfrom typing import Any, Dict, List, Callable\nfrom ffi.js import document, field, is_nan, window, Html, Hyper, Svg, Fuzzy, FuzzyViz\n\n\n# Platform\n\n@dataclass\nclass Tick:\n    \"\"\"\n    The game loop tick event\n    \"\"\"\n    pass\n\n\n@dataclass\nclass Vec:\n    x: float = 0\n    y: float = 0\n\n\n@dataclass\nclass Box:\n    pos: Vec = Vec()\n    color: str = \"\"\n    width: float = 0\n    height: float = 0\n\n\n@dataclass\nclass Pawn(Box):\n    dir: Vec = Vec()\n\n\n@dataclass\nclass Entity:\n    id: str = \"\"\n    state: Any = None\n    view: Callable[[Any], Any] = None\n    update_: Callable[[Any, Any], Any] = None\n\n\n@dataclass\nclass Entities:\n    \"\"\"\n    * The data structure that references all game entities\n    * and maintains their update and rendering orders\n    \"\"\"\n    data: Dict[str, Entity] = field(default_factory=list)\n    background: List[str] = field(default_factory=list)\n    observers: List[str] = field(default_factory=list)\n    pawns: List[str] = field(default_factory=list)\n\n    def get(self, entity_id: str):\n        return self.data[entity_id]\n\n\n@dataclass\nclass FuzzyLogic:\n    \"\"\"\n    The data structure that stores the fuzzy logic controller arguments\n    \"\"\"\n    inputs: Dict[str, Any] = field(default_factory=dict)\n    outputs: Dict[str, Any] = field(default_factory=dict)\n    rules: List[Any] = field(default_factory=list)\n\n\nclass RelDir:\n    \"\"\"\n    All of these possible movement directions based on keyboard input\n    \"\"\"\n    Up = Vec(0, -1)\n    Down = Vec(0, 1)\n    Left = Vec(-1, 0)\n    Right = Vec(1, 0)\n    UpLeft = Vec(-1, -1)\n    UpRight = Vec(1, -1)\n    DownLeft = Vec(-1, 1)\n    DownRight = Vec(1, 1)\n    Zero = Vec(0, 0)\n\n\ndef magnitude(v: Vec) -> float:\n    return sqrt(pow(v.x, 2) + pow(v.y, 2))\n\n\ndef normalize(v: Vec) -> Vec:\n    mag = magnitude(v)\n    normalized_x = v.x / mag\n    normalized_y = v.y / mag\n    x = 0 if is_nan(normalized_x) else normalized_x\n    y = 0 if is_nan(normalized_y) else normalized_y\n    return Vec(x, y)\n\n\ndef dot_product(a: Vec, b: Vec) -> float:\n    return a.x * b.x + a.y * b.y\n\n\ndef to_center_pos(box: Box) -> Vec:\n    x = box.pos.x + box.width / 2\n    y = box.pos.y + box.height / 2\n    return Vec(x, y)\n\n\ndef is_centered_within(box: Box, boundary: Box):\n    bot_pos = to_center_pos(box)\n    boundary_pos = to_center_pos(boundary)\n    x = round(abs(bot_pos.x - boundary_pos.x))\n    y = round(abs(bot_pos.y - boundary_pos.y))\n    is_centered = x <= 1 and y <= 1\n    return is_centered\n\n\ndef to_dir(start: Vec, end: Vec) -> Vec:\n    x = end.x - start.x\n    y = end.y - start.y\n    return Vec(x, y)\n\n\ndef relative_dir(origin: Box, target: Box):\n    origin_center = to_center_pos(origin)\n    target_center = to_center_pos(target)\n    return normalize(to_dir(origin_center, target_center))\n\n\ndef input_dir(dir: Vec):\n    return Vec(x=round(dir.x, 0), y=round(dir.y, 0))\n\n\ndef is_vec_eq(a: Vec, b: Vec) -> bool:\n    return a.x == b.x and a.y == b.y\n\n\ndef concat(*args):\n    result = []\n    for arg in args:\n        result.extend(arg)\n    return result\n\n\n# Time\n\ndef run_clock(dispatch, msg):\n    def send():\n        dispatch(msg)\n        run_clock(dispatch, msg)\n    id = window.requestAnimationFrame(send)\n    return lambda: window.cancelAnimationFrame(id)\n\n\ndef timeout(dispatch, args):\n    (msg, ms) = args\n    def send(): dispatch(msg)\n    id = window.setTimeout(send, ms)\n    return lambda: window.clearTimeout(id)\n\n\ndef interval(dispatch, args):\n    (msg, ms) = args\n    def send(): dispatch(msg)\n    id = window.setInterval(send, ms)\n    return lambda: window.clearInterval(id)\n\n\ndef delay(ms, msg):\n    return [timeout, (msg, ms)]\n\n\ndef every(ms, msg):\n    return [interval, (msg, ms)]\n\n\ndef clock(msg):\n    return [run_clock, msg]\n\n\n# Keyboard\n\n@dataclass\nclass Keyboard:\n    \"\"\"\n    The data structure that stores the states of the keyboard arrow keys\n    \"\"\"\n    up: bool = False\n    down: bool = False\n    left: bool = False\n    right: bool = False\n\n\n@dataclass\nclass KeyChange:\n    \"\"\"\n    The event data structure that emits when a keyboard key is pressed or released\n    \"\"\"\n    key: str = \"\"\n    is_down: bool = False\n\n\nclass ArrowKeys:\n    \"\"\"\n    The constants for the arrow key string identifiers\n    \"\"\"\n    Up = \"ArrowUp\"\n    Down = \"ArrowDown\"\n    Left = \"ArrowLeft\"\n    Right = \"ArrowRight\"\n\n\ndef is_arrow_key(key) -> bool:\n    return key in [ArrowKeys.Up, ArrowKeys.Down, ArrowKeys.Left, ArrowKeys.Right]\n\n\ndef keyboard_change(is_down):\n    def to_msg(key):\n        return KeyChange(is_down=is_down, key=key)\n    return to_msg\n\n\ndef to_x_dir(keyboard):\n    return (1 if keyboard.right else 0) - (1 if keyboard.left else 0)\n\n\ndef to_y_dir(keyboard):\n    return (1 if keyboard.down else 0) - (1 if keyboard.up else 0)\n\n\ndef run_keyboard_up(dispatch, to_msg):\n    def listener(event):\n        msg = to_msg(event.key)\n        if msg is not None:\n            dispatch(action(msg))\n    window.addEventListener(\"keyup\", listener)\n    return lambda: window.removeEventListener(\"keyup\", listener)\n\n\ndef keyboard_up(to_msg):\n    return [run_keyboard_up, to_msg]\n\n\ndef run_keyboard_down(dispatch, to_msg):\n    def listener(event):\n        msg = to_msg(event.key)\n        if msg is not None:\n            if is_arrow_key(event.key):\n                event.preventDefault()\n            dispatch(action(msg))\n    window.addEventListener(\"keydown\", listener)\n    return lambda: window.removeEventListener(\"keydown\", listener)\n\n\ndef keyboard_down(to_msg):\n    return [run_keyboard_down, to_msg]\n\n\n# Game\n\n@dataclass\nclass Ids:\n    \"\"\"\n    The string constants for all the game entities\n    \"\"\"\n    bot: str = \"bot\"\n    player: str = \"player\"\n    boundary: str = \"boundary\"\n    proximity: str = \"proximity\"\n    visibility: str = \"visibility\"\n\n\nclass BotModes:\n    \"\"\"\n    The string constants for all the AI bot behaviour states\n    \"\"\"\n    stop = \"stop\"\n    start = \"start\"\n    restart = \"restart\"\n    patrol = \"patrol\"\n    pursue = \"pursue\"\n    attack = \"attack\"\n\n\n@dataclass()\nclass BotConfig:\n    \"\"\"\n    The AI bot configuration for the step counter, patrol directions, and bot speed\n    \"\"\"\n    max_steps = 2\n    patrol_dirs = [\n        (RelDir.Up, RelDir.UpRight),\n        (RelDir.UpRight, RelDir.Right),\n        (RelDir.Right, RelDir.DownRight),\n        (RelDir.DownRight, RelDir.Down),\n        (RelDir.Down, RelDir.DownLeft),\n        (RelDir.DownLeft, RelDir.Left),\n        (RelDir.Left, RelDir.UpLeft),\n        (RelDir.UpLeft, RelDir.Up),\n    ]\n    speeds = {\n        f\"{BotModes.stop}\": 0.0,\n        f\"{BotModes.start}\": 0.0,\n        f\"{BotModes.restart}\": 1,\n        f\"{BotModes.patrol}\": 1,\n        f\"{BotModes.pursue}\": 1.75,\n        f\"{BotModes.attack}\": 2.5,\n    }\n\n\n@dataclass\nclass Bot(Pawn):\n    \"\"\"\n    The AI bot's state data structure that stores:\n        * the AI bot step counter\n        * the aggression level\n        * its mode / behaviour state\n        * the fuzzy logic controller for aggression level\n        * the AI bot configuration\n    \"\"\"\n    steps: int = 0\n    aggression: float = 0.0\n    mode: str = BotModes.start\n    controller: FuzzyLogic = FuzzyLogic()\n    config: BotConfig = BotConfig\n\n\n@dataclass\nclass Player(Pawn):\n    \"\"\"\n    * The wrapping data structure of the Pawn class\n    * Ready to be extended\n    \"\"\"\n    pass\n\n\n@dataclass\nclass Proximity(Box):\n    \"\"\"\n    The data structure for storing the proximity sensor data\n    \"\"\"\n    distance: float = 0.0\n    inner_rect: Box = Box()\n    outer_rect: Box = Box()\n\n\n@dataclass\nclass State:\n    \"\"\"\n    The game state data structure that stores:\n        * entity ids\n        * keyboard state\n        * entity state\n        * entity rendering and updating orders\n    \"\"\"\n    ids: Ids = Ids()\n    keyboard: Keyboard = Keyboard()\n    entities: Entities = Entities()\n    update_order: List[str] = field(default_factory=list)\n    render_order: List[str] = field(default_factory=list)\n    show_stats: bool = False\n    show_charts: bool = False\n\n\n@dataclass\nclass Ref:\n    \"\"\"\n    A reference data structure for wrapping the game state\n    \"\"\"\n    value: State = State()\n\n\ndef within_boundary(item: (Box, Vec), boundary: (Box, Vec)) -> Vec:\n    \"\"\"\n    * Clamp the position of the AI bot or player based on the game's boundary\n    \"\"\"\n    (item_box, item_pos) = item\n    (boundary_box, boundary_offsets) = boundary\n\n    x = min(\n        max(boundary_box.pos.x + boundary_offsets.x, item_pos.x),\n        boundary_box.pos.x + boundary_box.width - item_box.width - boundary_offsets.x)\n\n    y = min(\n        max(boundary_box.pos.y + boundary_offsets.y, item_pos.y),\n        boundary_box.pos.y + boundary_box.height - item_box.height - boundary_offsets.y)\n\n    return Vec(x, y)\n\n\n# Proximity\n\ndef make_outer_rect(player: Player, bot: Bot) -> Box:\n    x = min(player.pos.x, bot.pos.x)\n    y = min(player.pos.y, bot.pos.y)\n\n    width = max(\n        bot.pos.x + bot.width - player.pos.x,\n        player.pos.x + player.width - bot.pos.x)\n\n    height = max(\n        bot.pos.y + bot.height - player.pos.y,\n        player.pos.y + player.height - bot.pos.y)\n\n    return Box(color=\"yellow\", height=height, width=width, pos=Vec(x, y))\n\n\ndef make_inner_rect(outer_rect: Box, player: Player, bot: Bot) -> Box:\n    x = min(min(player.pos.x + player.width, bot.pos.x + bot.width),\n            max(player.pos.x, bot.pos.x))\n\n    y = min(min(player.pos.y + player.height, bot.pos.y + bot.height),\n            max(player.pos.y, bot.pos.y))\n\n    width = abs(outer_rect.width - player.width - bot.width)\n    height = abs(outer_rect.height - player.height - bot.height)\n\n    return Box(color=\"green\", height=height, width=width, pos=Vec(x, y))\n\n\ndef detect_proximity(player: Player, bot: Bot) -> (Box, Box, float):\n    \"\"\"\n    * Calculate the minimum distance between the player and AI bot\n    \"\"\"\n    outer_rect = make_outer_rect(player, bot)\n    inner_rect = make_inner_rect(outer_rect, player, bot)\n\n    width = max(0.0, outer_rect.width - player.width - bot.width)\n    height = max(0.0, outer_rect.height - player.height - bot.height)\n    min_distance = sqrt(pow(height, 2) + pow(width, 2))\n\n    return (outer_rect, inner_rect, min_distance)\n\n\ndef init_proximity(player: Player, bot: Bot) -> Proximity:\n    \"\"\"\n    * Initialize the proximity sensor state\n    \"\"\"\n    (outer_rect, inner_rect, distance) = detect_proximity(player, bot)\n    return Proximity(distance=distance, outer_rect=outer_rect, inner_rect=inner_rect)\n\n\ndef update_proximity(proximity: Proximity, state: State) -> Proximity:\n    \"\"\"\n    * Update the proximity sensor with the minimum distance between the player and the AI bot\n    \"\"\"\n    bot = state.entities.get(state.ids.bot)\n    player = state.entities.get(state.ids.player)\n    (outer_rect, inner_rect, distance) =\\\n        detect_proximity(player.state, bot.state)\n\n    proximity.distance = distance\n    proximity.inner_rect = inner_rect\n    proximity.outer_rect = outer_rect\n    return proximity\n\n\ndef view_proximity(proximity: Proximity):\n    \"\"\"\n    * Visualize the proximity between the player and the AI bot\n    \"\"\"\n    return Svg.g({}, [\n        view_box(proximity.outer_rect),\n        view_box(proximity.inner_rect)\n    ])\n\n\n# Visibility\n\ndef init_visibility(origin: Pawn, target: Pawn) -> float:\n    \"\"\"\n    * Initialize the state for the visibility of the player for the AI bot\n    \"\"\"\n    target_pos = to_center_pos(target)\n    origin_pos = to_center_pos(origin)\n    to_target_dir = normalize(to_dir(origin_pos, target_pos))\n    dot = dot_product(normalize(origin.dir), to_target_dir)\n    return dot\n\n\ndef update_visibility(_visibility: float, state: State) -> float:\n    \"\"\"\n    * Update the sensor data for the visibility of the player for the AI bot\n    \"\"\"\n    bot = state.entities.get(state.ids.bot)\n    player = state.entities.get(state.ids.player)\n    return init_visibility(bot.state, player.state)\n\n\ndef view_visibility(visibility: float, state: State):\n    return None\n\n\n# Player\n\ndef init_player() -> Player:\n    \"\"\"\n    * Initialize the player state\n    \"\"\"\n    return Player(\n        width=50,\n        height=50,\n        color=\"#8ca9ff\",\n        dir=Vec(1, 0),\n        pos=Vec(x=5, y=5))\n\n\ndef update_player_pos(player: Player, boundary: Box, keyboard: Keyboard) -> Vec:\n    \"\"\"\n    * Update the player's position based on keyboard input\n    \"\"\"\n    dt = 1.666\n    speed_multiplier = 3\n    speed = 1.0 * speed_multiplier\n    x = player.pos.x + (to_x_dir(keyboard) * speed * dt)\n    y = player.pos.y + (to_y_dir(keyboard) * speed * dt)\n    return within_boundary((player, Vec(x, y)), (boundary, Vec(3, 3)))\n\n\ndef update_player_dir(player: Player, keyboard: Keyboard) -> Vec:\n    \"\"\"\n    * Update the player's direction\n    * Keep the player's last moving direction if idle\n    \"\"\"\n    x = to_x_dir(keyboard)\n    y = to_y_dir(keyboard)\n\n    if x != 0 or y != 0:\n        player.dir.x = x\n        player.dir.y = y\n\n    return player.dir\n\n\ndef update_player(player: Player, state: State) -> Player:\n    \"\"\"\n    * Update the player's state for its position and direction\n    \"\"\"\n    boundary = state.entities.get(state.ids.boundary)\n    player.dir = update_player_dir(player, state.keyboard)\n    player.pos = update_player_pos(player, boundary.state, state.keyboard)\n    return player\n\n\ndef view_player(player: Player):\n    \"\"\"\n    * Visualize the player as a blue box\n    \"\"\"\n    return view_box(player)\n\n\n# Bot\n\ndef init_bot(boundary: Box):\n    \"\"\"\n    * Initialize the state of the AI bot\n    * Configure the fuzzy logic controller for the aggression level\n    \"\"\"\n    width = 50\n    height = 50\n    config = BotConfig()\n    boundary_center = to_center_pos(boundary)\n    boundary_diagonal = sqrt(\n        pow(boundary.height, 2) + pow(boundary.width, 2))\n\n    pos = Vec(\n        x=boundary_center.x - width / 2,\n        y=boundary_center.y - height / 2)\n\n    controller = FuzzyLogic(\n        inputs={\n            \"distance\": Fuzzy.variable([0, boundary_diagonal], {\n                \"near\": Fuzzy.gaussian(0, 50),\n                \"neutral\": Fuzzy.trapezoid(32, 80, 180, 228),\n                \"far\": Fuzzy.ramp(100, 300)\n            }),\n            \"visibility\": Fuzzy.variable([-1, 1], {\n                \"hidden\": Fuzzy.gaussian(-1, 0.5),\n                \"peripheral\": Fuzzy.gaussian(0, 0.1),\n                \"visible\": Fuzzy.gaussian(1, 0.5)\n            }),\n        },\n        outputs={\n            \"aggression\": Fuzzy.variable([0, 100], {\n                \"low\": Fuzzy.gaussian(30, 20),\n                \"medium\": Fuzzy.gaussian(70, 20),\n                \"high\": Fuzzy.gaussian(100, 10),\n            }),\n        },\n        rules=[\n            Fuzzy.and_(\n                {\"distance\": \"near\", \"visibility\": \"visible\"},\n                {\"aggression\": \"high\"}),\n            Fuzzy.and_(\n                {\"distance\": \"near\", \"visibility\": \"peripheral\"},\n                {\"aggression\": \"medium\"}),\n            Fuzzy.and_(\n                {\"distance\": \"near\", \"visibility\": \"hidden\"},\n                {\"aggression\": \"low\"}),\n            Fuzzy.and_(\n                {\"distance\": \"neutral\", \"visibility\": \"visible\"},\n                {\"aggression\": \"medium\"}),\n            Fuzzy.and_(\n                {\"distance\": \"neutral\", \"visibility\": \"peripheral\"},\n                {\"aggression\": \"low\"}),\n            Fuzzy.and_(\n                {\"distance\": \"neutral\", \"visibility\": \"hidden\"},\n                {\"aggression\": \"low\"}),\n            Fuzzy.and_(\n                {\"distance\": \"far\", \"visibility\": \"visible\"},\n                {\"aggression\": \"low\"}),\n            Fuzzy.and_(\n                {\"distance\": \"far\", \"visibility\": \"peripheral\"},\n                {\"aggression\": \"low\"}),\n            Fuzzy.and_(\n                {\"distance\": \"far\", \"visibility\": \"hidden\"},\n                {\"aggression\": \"low\"}),\n        ])\n\n    return Bot(\n        color=\"#ff9393\",\n        pos=pos,\n        config=config,\n        width=width,\n        height=height,\n        dir=RelDir.Right,\n        mode=BotModes.start,\n        steps=config.max_steps,\n        controller=controller)\n\n\ndef update_bot_aggression(bot: Bot, proximity: Proximity, visibility: float) -> float:\n    \"\"\"\n    * Execute the fuzzy logic controller for the aggression level based on:\n        * player proximity\n        * player visibility\n    \"\"\"\n    result = Fuzzy.defuzz(\n        bot.controller.inputs,\n        bot.controller.outputs,\n        bot.controller.rules,\n        {\"distance\": proximity.distance, \"visibility\": visibility})\n    return result.aggression\n\n\ndef update_bot_mode(bot: Bot, boundary: Box) -> str:\n    \"\"\"\n    * Update the AI bot's behaviour state based on its aggression level\n    * Coordinate the AI bot to:\n        * attack when very near to a visible player\n        * pursue when near a visible player\n        * patrol when not near a visible player\n        * return to its post if it lost or caught the player\n    \"\"\"\n    aggression_level = Fuzzy.classify(\n        bot.controller.outputs.aggression, bot.aggression)\n\n    if bot.mode is BotModes.start:\n        is_centered = is_centered_within(bot, boundary)\n        if is_centered:\n            return BotModes.patrol\n        else:\n            return BotModes.start\n\n    if bot.mode is BotModes.restart:\n        if aggression_level in [\"medium\", \"high\"]:\n            return BotModes.pursue\n        elif is_centered_within(bot, boundary):\n            return BotModes.patrol\n        else:\n            return BotModes.restart\n\n    if bot.mode is BotModes.patrol:\n        if aggression_level in [\"medium\", \"high\"]:\n            return BotModes.pursue\n        else:\n            return BotModes.patrol\n\n    if bot.mode in [BotModes.pursue, BotModes.attack]:\n        if aggression_level is \"high\":\n            return BotModes.attack\n        elif aggression_level is \"medium\":\n            return BotModes.pursue\n        else:\n            return BotModes.restart\n\n    return bot.mode\n\n\ndef update_bot_dir(bot: Bot, player: Player, boundary: Box) -> Vec:\n    \"\"\"\n    * Update the direction the AI bot is facing base on its behaviour state\n    * Coordinate the AI bot to walk in circles when on patrol\n    \"\"\"\n    if bot.mode in [BotModes.start, BotModes.restart]:\n        return relative_dir(bot, boundary)\n\n    if bot.mode in [BotModes.pursue, BotModes.attack]:\n        return relative_dir(bot, player)\n\n    if bot.mode is BotModes.stop:\n        return RelDir.Zero\n\n    if bot.mode is BotModes.patrol and bot.steps is 0:\n        keyboard_dir = input_dir(bot.dir)\n        for (prev_dir, next_dir) in bot.config.patrol_dirs:\n            if is_vec_eq(keyboard_dir, prev_dir):\n                return normalize(\n                    Vec(x=bot.dir.x + (next_dir.x * 0.1),\n                        y=bot.dir.y + next_dir.y * 0.1))\n        return Vec(x=round(bot.dir.x, 0), y=round(bot.dir.y, 0))\n\n    return bot.dir\n\n\ndef update_bot_pos(bot: Bot, boundary: Box) -> Vec:\n    \"\"\"\n    * Update the position of the AI bot\n    * Adapt the speed of the AI bot based on its behaviour state\n    \"\"\"\n    dt = 1.666\n    speed = 1 * (bot.config.speeds[bot.mode] or 1)\n    x = bot.pos.x + (bot.dir.x * speed * dt)\n    y = bot.pos.y + (bot.dir.y * speed * dt)\n    return within_boundary((bot, Vec(x, y)), (boundary, Vec(3, 3)))\n\n\ndef update_bot_steps(bot: Bot) -> int:\n    \"\"\"\n    * Decrement the step counter or reset the counter if at zero\n    \"\"\"\n    if bot.mode is BotModes.patrol:\n        if bot.steps == 0:\n            return bot.config.max_steps\n        return bot.steps - 1\n    else:\n        return bot.config.max_steps\n\n\ndef update_bot(bot: Bot, state: State) -> Bot:\n    \"\"\"\n    * Update the AI bot state\n        * the amount of steps taken by the AI bot on patrol\n        * the aggression level by the AI bot\n        * the behaviour mode of the AI bot\n        * the direction the AI bot is facing\n        * the position of the AI bot\n    \"\"\"\n    player = state.entities.get(state.ids.player)\n    boundary = state.entities.get(state.ids.boundary)\n    proximity = state.entities.get(state.ids.proximity)\n    visibility = state.entities.get(state.ids.visibility)\n    bot.steps = update_bot_steps(bot)\n    bot.aggression = update_bot_aggression(bot, proximity.state, visibility.state)\n    bot.mode = update_bot_mode(bot, boundary.state)\n    bot.dir = update_bot_dir(bot, player.state, boundary.state)\n    bot.pos = update_bot_pos(bot, boundary.state)\n    return bot\n\n\ndef view_bot(bot: Bot):\n    \"\"\"\n    * Visualize the AI bot as a red square\n    * Visualize an indicator for the direction the AI bot is facing\n    \"\"\"\n    center = to_center_pos(bot)\n    arrow_center = Vec(\n        (center.x + bot.dir.x * 15),\n        (center.y + bot.dir.y * 15))\n    other_center = Vec(\n        (arrow_center.x + bot.dir.x * 10),\n        (arrow_center.y + bot.dir.y * 10))\n\n    return Svg.g({}, [\n        view_box(bot),\n        Svg.line({\n            \"x1\": center.x,\n            \"y1\": center.y,\n            \"x2\": arrow_center.x,\n            \"y2\": arrow_center.y,\n            \"stroke\": \"black\",\n        }),\n        Svg.line({\n            \"x1\": arrow_center.x,\n            \"y1\": arrow_center.y,\n            \"x2\": other_center.x,\n            \"y2\": other_center.y,\n            \"stroke\": \"black\",\n            \"stroke-width\": 3,\n        })\n    ])\n\n\n# Init\n\ndef init() -> Ref:\n    \"\"\"\n    * Initialize the entire game state\n    * Create the state for all entities like the AI bot and player\n    \"\"\"\n    boundary = Entity(\n        id=Ids.boundary,\n        update_=lambda _state: _state,\n        view=view_box,\n        state=Box(\n            width=600,\n            height=400,\n            color='#5d6177',\n            pos=Vec(x=0, y=0)))\n\n    player = Entity(\n        id=Ids.player,\n        state=init_player(),\n        update_=update_player,\n        view=view_player)\n\n    bot = Entity(\n        id=Ids.bot,\n        update_=update_bot,\n        view=view_bot,\n        state=init_bot(boundary.state))\n\n    proximity = Entity(\n        id=Ids.proximity,\n        state=init_proximity(player.state, bot.state),\n        update_=update_proximity,\n        view=view_proximity)\n\n    visibility = Entity(\n        id=Ids.visibility,\n        state=init_visibility(bot.state, player.state),\n        update_=update_visibility,\n        view=view_visibility)\n\n    entities = Entities(\n        background=[Ids.boundary],\n        observers=[Ids.visibility, Ids.proximity],\n        pawns=[Ids.player, Ids.bot],\n        data=dict(\n            bot=bot,\n            visibility=visibility,\n            player=player,\n            boundary=boundary,\n            proximity=proximity))\n\n    update_order = concat(\n        entities.background,\n        entities.pawns,\n        entities.observers)\n\n    render_order = concat(\n        entities.background,\n        entities.observers,\n        entities.pawns)\n\n    state = Ref(\n        value=State(\n            ids=Ids(),\n            entities=entities,\n            update_order=update_order,\n            render_order=render_order,\n            keyboard=Keyboard()))\n\n    return state\n\n\ndef subscriptions():\n    \"\"\"\n    * Configure game to listen for clock ticks at 60 FPS\n    * Configure game to listen for keyboard presses for the player inputs\n    \"\"\"\n    tick = action(Tick())\n    return [\n        clock(tick),\n        keyboard_up(keyboard_change(False)),\n        keyboard_down(keyboard_change(True))\n    ]\n\n\n# Update\n\nclass ToggleStats:\n    pass\n\n\nclass ToggleCharts:\n    pass\n\n\ndef update_keyboard(state, msg):\n    \"\"\"\n    * Update the state of the keyboard bindings based on keyboard events\n    \"\"\"\n    keyboard = state.keyboard\n\n    if msg.key is ArrowKeys.Up:\n        keyboard.up = msg.is_down\n    if msg.key is ArrowKeys.Down:\n        keyboard.down = msg.is_down\n    if msg.key is ArrowKeys.Left:\n        keyboard.left = msg.is_down\n    if msg.key is ArrowKeys.Right:\n        keyboard.right = msg.is_down\n\n    return keyboard\n\n\ndef update(ref: Ref, msg) -> Ref:\n    \"\"\"\n    * Listen for keyboard events from the web browser\n    * Listen for clock \"ticks\" to render the game at 60 FPS\n    * Update the state of the game and all entities every frame\n    \"\"\"\n    state = ref.value\n\n    if type(msg) is Tick:\n        for entity_id in state.update_order:\n            entity = state.entities.get(entity_id)\n            entity.state = entity.update_(entity.state, state)\n\n        return Ref(value=state)\n\n    if type(msg) is KeyChange:\n        state.keyboard = update_keyboard(state, msg)\n        return Ref(value=state)\n\n    if type(msg) is ToggleStats:\n        state.show_stats = not state.show_stats\n        return Ref(value=state)\n\n    if type(msg) is ToggleCharts:\n        state.show_charts = not state.show_charts\n        return Ref(value=state)\n\n    return ref\n\n\ndef action(msg):\n    \"\"\"\n    Returns a function that will update the program state when called\n    \"\"\"\n    return lambda state: update(state, msg)\n\n\n# Views\n\ndef view_box(box: Box):\n    stroke_width = 2\n    stroke_color = \"#374048\"\n\n    return Svg.rect({\n        \"fill\": box.color,\n        \"width\": box.width,\n        \"height\": box.height,\n        \"stroke\": stroke_color,\n        \"stroke-width\": stroke_width,\n        \"transform\": f\"translate({box.pos.x}, {box.pos.y})\",\n    })\n\n\ndef view_stat(key, value):\n    return Html.div({\"class\": \"stat-field\"}, [\n        Html.div({\"class\": \"stat-label\"}, [\n            Html.text(f\"{key}: \"),\n        ]),\n        Html.text(value)\n    ])\n\n\ndef view_chart(key, value):\n    elem_id = f\"{key}-viz\"\n    svg = FuzzyViz.varToSvg(value, dict(samples=200, width=600, height=120))\n    return Html.div({\"class\": \"stat-row fuzzy-input-chart\"}, [\n        Html.div({\"class\": \"chart-label\"}, [\n            Html.text(f\"{key.capitalize()} Memberships\")\n        ]),\n        Html.div(dict(id=elem_id, innerHTML=svg), [])\n    ])\n\n\ndef view_stats(state: State):\n    if not state.show_stats:\n        return None\n\n    bot = state.entities.get(state.ids.bot).state\n    proximity = state.entities.get(state.ids.proximity).state\n    visibility = state.entities.get(state.ids.visibility).state\n\n    return Html.div({\"class\": \"stats\"}, [\n        Html.div({\"class\": \"stat-row\"}, [\n            Html.div({\"class\": \"stat-column\"}, [\n                view_stat(\n                    \"Visibility\",\n                    Fuzzy.classify(bot.controller.inputs.visibility, visibility, 0.20).capitalize()\n                ),\n                view_stat(\"Proximity Distance\", round(proximity.distance, 3)),\n            ]),\n\n            Html.div({\"class\": \"stat-column\"}, [\n                view_stat(\n                    \"Proximity Level\",\n                    Fuzzy.classify(bot.controller.inputs.distance, proximity.distance).capitalize()),\n                view_stat(\n                    \"Aggression Level\",\n                    Fuzzy.classify(bot.controller.outputs.aggression, bot.aggression).capitalize()),\n            ])\n        ])\n    ])\n\n\ndef view_charts(state: State):\n    if not state.show_charts:\n        return None\n\n    bot = state.entities.get(state.ids.bot).state\n    return Html.div({\"class\": \"charts\"}, [\n        view_chart('distance', bot.controller.inputs.distance),\n        view_chart('visibility', bot.controller.inputs.visibility),\n        view_chart('aggression', bot.controller.outputs.aggression),\n    ])\n\n\ndef view(ref: Ref):\n    \"\"\"\n    * Visualize the AI bot and player boxes\n    * Visualize the metrics between the AI bot and player\n    * Visualize the membership functions for the fuzzy logic controller\n    \"\"\"\n    state = ref.value\n    boundary = state.entities.get(state.ids.boundary).state\n\n    def render_entity(entity):\n        if entity.id is state.ids.proximity: return None\n        return entity.view(entity.state)\n\n    return Html.main({\"class\": \"container\"}, [\n        Html.div({\"class\": \"canvas\"}, [\n            Svg.svg(dict(\n                width=boundary.width,\n                height=boundary.height,\n                viewBox=f\"0 0 {boundary.width} {boundary.height}\",\n            ), [\n                Svg.g({}, [\n                    render_entity(state.entities.get(entity_id))\n                    for entity_id in state.render_order\n                ])\n            ]),\n        ]),\n        Html.div({\"class\": \"buttons\"}, [\n            Html.button({\"onclick\": action(ToggleStats())}, [\n                Html.text(\"Hide Stats\" if state.show_stats else \"Show Stats\")\n            ]),\n            Html.button({\"onclick\": action(ToggleCharts())}, [\n                Html.text(\"Hide Charts\" if state.show_charts else \"Show Charts\")\n            ])\n        ]),\n        view_stats(state),\n        view_charts(state)\n    ])\n\n\n# Main\n\ndef main():\n    \"\"\"\n    * Initialize the rendering of the game loop\n    * Render each frame to the web page\n    \"\"\"\n    element = document.getElementById(\"root\")\n    Hyper.app(node=element, view=view, init=init, subscriptions=subscriptions)\n\n"],"names":["$63352299239db862$var$EMPTY_OBJ","$63352299239db862$var$EMPTY_ARR","$63352299239db862$var$id","a","$63352299239db862$var$map","map","$63352299239db862$var$isArray","Array","isArray","$63352299239db862$var$enqueue","requestAnimationFrame","setTimeout","$63352299239db862$var$createClass","obj","out","tmp","k","length","$63352299239db862$var$shouldRestart","b","$63352299239db862$var$getKey","vdom","key","$63352299239db862$var$patchProperty","node","oldValue","newValue","listener","isSvg","setProperty","events","slice","addEventListener","removeEventListener","removeAttribute","setAttribute","$63352299239db862$var$createNode","props","type","document","createTextNode","tag","createElementNS","is","createElement","i","children","appendChild","$63352299239db862$var$maybeVNode","$63352299239db862$var$patch","parent","oldVNode","newVNode","nodeValue","insertBefore","removeChild","tmpVKid","oldVKid","oldKey","newKey","oldProps","newProps","oldVKids","newVKids","oldHead","newHead","oldTail","newTail","keyed","newKeyed","memo","$63352299239db862$var$propsChanged","$63352299239db862$export$6f093cfa640b7166","$63352299239db862$var$recycleNode","nodeType","$63352299239db862$var$createVNode","nodeName","toLowerCase","call","childNodes","$63352299239db862$export$7c73462e0d25e514","value","$63352299239db862$export$dda1d9f60106f0e9","class","c","$63352299239db862$export$729c8b7179294ba","view","subscriptions","dispatch","init","state","busy","subs","update","newState","render","oldSubs","newSubs","oldSub","newSub","push","$63352299239db862$var$patchSubs","parentNode","event","this","action","fx","$8w4VD","parcelRequire","$95d4137582711e2d$var$EMPTY_ARR","$95d4137582711e2d$var$EMPTY_OBJ","$95d4137582711e2d$var$tag","h","$95d4137582711e2d$export$407448d2b89b1813","$95d4137582711e2d$export$8b22cf2602fb60ce","$95d4137582711e2d$export$23f2a1d2818174ef","$95d4137582711e2d$export$ffb5f4729a158638","$95d4137582711e2d$export$9e5f44173e64f162","$95d4137582711e2d$export$2408f22a0fab9ae5","$95d4137582711e2d$export$479ac0420f53ed26","$95d4137582711e2d$export$eaaeafa904fe3ddf","$95d4137582711e2d$export$53d26b7a9a23d594","$95d4137582711e2d$export$9198f9466fc833e","$95d4137582711e2d$export$c63c6f932822f543","$95d4137582711e2d$export$448e4850cad7c7b0","$95d4137582711e2d$export$a943aa9a0fca3f0b","$95d4137582711e2d$export$7edd4a21fac8ce55","$95d4137582711e2d$export$51a85cc1b68f452c","$95d4137582711e2d$export$f44841a11990acb2","$95d4137582711e2d$export$c9ccd321d64f47e3","$95d4137582711e2d$export$b4adb3f464574dcf","$95d4137582711e2d$export$19caeaf7d9d84644","$95d4137582711e2d$export$b2235297ee22a6fe","$95d4137582711e2d$export$6d4c73e3ddf8818b","$95d4137582711e2d$export$f08282231bb71285","$95d4137582711e2d$export$2beef8af2014e5c6","$95d4137582711e2d$export$d657bc098992a431","$95d4137582711e2d$export$72451b88a72ad9c2","$95d4137582711e2d$export$b5023c870cb34848","$95d4137582711e2d$export$2d20a4e9df674436","$95d4137582711e2d$export$fae0db89ef70aab2","$95d4137582711e2d$export$aba86695643891f5","$95d4137582711e2d$export$1d2f21e549771e67","$95d4137582711e2d$export$771f54d1a902afc9","$95d4137582711e2d$export$159d9494db57879b","$95d4137582711e2d$export$463b44d9bf3628be","$95d4137582711e2d$export$27a48efc044c200a","$95d4137582711e2d$export$1ed45b69d23c052b","$95d4137582711e2d$export$871de8747c9eaa88","$95d4137582711e2d$export$80e4b313e5e6b30d","$95d4137582711e2d$export$2af2ac64526e2aa9","$95d4137582711e2d$export$8762b78bc1dc9e79","$95d4137582711e2d$export$f93b5905241a7cca","$95d4137582711e2d$export$abe1cd54efe9b9cd","$95d4137582711e2d$export$ee8f8f9447a35bdc","$95d4137582711e2d$export$2bcb785951133fe5","$95d4137582711e2d$export$bb3edc44842b5f2e","$95d4137582711e2d$export$3035df57df42c31a","$95d4137582711e2d$export$6565f9f03506010b","$95d4137582711e2d$export$4051a07651545597","$95d4137582711e2d$export$6210fa4921d2a466","$95d4137582711e2d$export$f22da7240b7add18","$95d4137582711e2d$export$bf7f2fce5c1cf636","$95d4137582711e2d$export$f2b283820b448b35","$95d4137582711e2d$export$8c1cb8fb6818c292","$95d4137582711e2d$export$afc1bfabebaf28a2","$95d4137582711e2d$export$2da9be4cfdb689b1","$95d4137582711e2d$export$64a02cd6422b91be","$95d4137582711e2d$export$592b77e6034db746","$95d4137582711e2d$export$b7e3ae3d7c15e42e","$95d4137582711e2d$export$1237798dc640739a","$95d4137582711e2d$export$82334bbdfcebb57","$95d4137582711e2d$export$6f7d1d9d04558207","$95d4137582711e2d$export$3c17b0e969a90510","$95d4137582711e2d$export$9852986a3ec5f6a0","$95d4137582711e2d$export$7cdd536eaa8f163c","$95d4137582711e2d$export$9396b2f97a03ad14","$95d4137582711e2d$export$e3f32a5920890b82","$95d4137582711e2d$export$6b2a7d5132615086","$95d4137582711e2d$export$5f8d3589eb8441ca","$95d4137582711e2d$export$2ba01fb71ed41cb6","$95d4137582711e2d$export$67ea982130081db","$95d4137582711e2d$export$518824cf31321346","$95d4137582711e2d$export$991dc94f816a1d48","$95d4137582711e2d$export$adb608be33961c98","$95d4137582711e2d$export$38e42c68cf43b5d4","$95d4137582711e2d$export$8cde213409fd6377","$95d4137582711e2d$export$9a9b59e08de24cef","$95d4137582711e2d$export$be5493f9613cbbe","$95d4137582711e2d$export$a75d1723e6bda2ec","$95d4137582711e2d$export$c789db2c85949867","$95d4137582711e2d$export$2e6c959c16ff56b8","$95d4137582711e2d$export$b4d5da5f34fb77ad","$95d4137582711e2d$export$59ae2c325a998f89","$95d4137582711e2d$export$f7d3c097ceca6c15","$95d4137582711e2d$export$bba2aacf8566461b","$95d4137582711e2d$export$8e3c2dfdc4f0453d","$95d4137582711e2d$export$41ee12f6f6f05843","$95d4137582711e2d$export$fe2e36411d703b3d","$95d4137582711e2d$export$9a2dbef7a17e2e58","$95d4137582711e2d$export$1188214e9d38144e","$95d4137582711e2d$export$3db318dd257cd653","$95d4137582711e2d$export$d6956b5f6d5ee87d","$95d4137582711e2d$export$a38812d1aa1302d9","$95d4137582711e2d$export$f68e44d881264486","$95d4137582711e2d$export$b9d336f245a516e8","$95d4137582711e2d$export$504d7abb21fa8c9","$95d4137582711e2d$export$a3574df893ffa88d","$95d4137582711e2d$export$67dc04e652a298ca","$95d4137582711e2d$export$b75acb72a9c69c26","$83b67d2cb3aaa0b2$var$EMPTY_ARR","$83b67d2cb3aaa0b2$var$EMPTY_OBJ","$83b67d2cb3aaa0b2$var$tag","$83b67d2cb3aaa0b2$export$407448d2b89b1813","$83b67d2cb3aaa0b2$export$39b482c5e57630a8","$83b67d2cb3aaa0b2$export$7ed1367e7fa1ad68","$83b67d2cb3aaa0b2$export$1f96ae73734a86cc","$83b67d2cb3aaa0b2$export$adaa4cf7ef1b65be","$83b67d2cb3aaa0b2$export$53f1d5ea8de3d7c","$83b67d2cb3aaa0b2$export$bb654e07daaf8c3a","$83b67d2cb3aaa0b2$export$4b409e53cf4df6e6","$83b67d2cb3aaa0b2$export$51987bb50e1f6752","$83b67d2cb3aaa0b2$export$868461b1c6870d10","$83b67d2cb3aaa0b2$export$d99f0801a68bbcf1","$83b67d2cb3aaa0b2$export$6065ed1e1bd94cc","$83b67d2cb3aaa0b2$export$a74e2025f5286b02","$83b67d2cb3aaa0b2$export$fa6813432f753b0d","$83b67d2cb3aaa0b2$export$c4ddc81c7b2c8d7a","$83b67d2cb3aaa0b2$export$bec969eb196fd49f","$83b67d2cb3aaa0b2$export$5c452ff88e35e47d","$83b67d2cb3aaa0b2$export$d455c2d7dc3122e5","$83b67d2cb3aaa0b2$export$fb184b623420d9be","$83b67d2cb3aaa0b2$export$f1f5ddeb20d14f","$83b67d2cb3aaa0b2$export$79063f2f83f17896","$83b67d2cb3aaa0b2$export$1d567c320f4763bc","$83b67d2cb3aaa0b2$export$e1d786d2f707b414","$83b67d2cb3aaa0b2$export$ffc4d0086f1a4c9","$83b67d2cb3aaa0b2$export$8f701197936bc2a6","$83b67d2cb3aaa0b2$export$ec9928c0fd729eba","$83b67d2cb3aaa0b2$export$58734539bbfa41a2","$83b67d2cb3aaa0b2$export$3dea766d36a8935f","$83b67d2cb3aaa0b2$export$1f2ce61e410a867d","$83b67d2cb3aaa0b2$export$35eec893e28a8a34","$83b67d2cb3aaa0b2$export$b7b19aa0ee06c73","$83b67d2cb3aaa0b2$export$e3607ec2d7a891c4","$83b67d2cb3aaa0b2$export$24f82734ea047e6f","$83b67d2cb3aaa0b2$export$ba172c53ad3949dd","$83b67d2cb3aaa0b2$export$d4a3c574e219ec41","$83b67d2cb3aaa0b2$export$ff335e1896a0d6ac","$83b67d2cb3aaa0b2$export$b413ed7ce780ab62","$83b67d2cb3aaa0b2$export$acd966dff92826df","$83b67d2cb3aaa0b2$export$1c8b9a56b85655d7","$83b67d2cb3aaa0b2$export$5c615a36cad27f2a","$83b67d2cb3aaa0b2$export$f72866be216dad64","$83b67d2cb3aaa0b2$export$8d69707c7074d5c0","$83b67d2cb3aaa0b2$export$dbb5e893e736e4ee","$83b67d2cb3aaa0b2$export$bd75a62df0b2ed5","$83b67d2cb3aaa0b2$export$c08088d4c1f7508f","$83b67d2cb3aaa0b2$export$5fc665c586745ec9","$83b67d2cb3aaa0b2$export$c5df7b6020d120a4","$83b67d2cb3aaa0b2$export$a93a2fac2519a03d","$83b67d2cb3aaa0b2$export$23f63cd4a801318e","$83b67d2cb3aaa0b2$export$a9c456e7f59a922e","$83b67d2cb3aaa0b2$export$80304804ee4b74ee","$83b67d2cb3aaa0b2$export$40aa73cef2a57617","$83b67d2cb3aaa0b2$export$c46f3a3f51a3a21c","$83b67d2cb3aaa0b2$export$638942868295ae52","$83b67d2cb3aaa0b2$export$97b2331bbf087a92","$83b67d2cb3aaa0b2$export$ac27df26d1bb1c75","$83b67d2cb3aaa0b2$export$d886bd6a8560a99b","$83b67d2cb3aaa0b2$export$112ec8dd35b2c3ac","$83b67d2cb3aaa0b2$export$25ef286fa535664a","$83b67d2cb3aaa0b2$export$5e588c605a4a78b2","$83b67d2cb3aaa0b2$export$5eb95cb0e6566912","$83b67d2cb3aaa0b2$export$46def8197cf4dd4c","$83b67d2cb3aaa0b2$export$3922d1ccb8631cd8","$83b67d2cb3aaa0b2$export$fab9ed97c28f4d5","$83b67d2cb3aaa0b2$export$189ae3b23835546d","$83b67d2cb3aaa0b2$export$729fc4eb9847864b","$83b67d2cb3aaa0b2$export$80857957c253f74c","$83b67d2cb3aaa0b2$export$15897bb48f363dc5","$83b67d2cb3aaa0b2$export$29d24d9a033d4415","$83b67d2cb3aaa0b2$export$99967a5441a64397","$83b67d2cb3aaa0b2$export$32d87166552d46e4","$gq4Kb","$dzwzu","$b1d00e6f79128246$export$4a5274cfdfeaa1c4","ins","outs","rules","vals","strategy","$7Un4C","centroidStrategy","imply","$kXSpM","tnormMin","combine","snormMax","ruleTerms","r","alpha","id","if","v","terms","op","aterm","constant","then","oterm","intersect","weight","weighted","res","id1","union","filter","f","domain","$cg6aP","$9e17cf411dd40358$export$c983f826f44ff86","x","$9e17cf411dd40358$export$105684a3041cb6f3","p","eps","EPS","$37pej","eqDelta","$9e17cf411dd40358$export$e666dc18855ac845","$9YR6n","fitClamped","$9e17cf411dd40358$export$9eed783d03e0135c","fit","$9e17cf411dd40358$export$a28f51e1984bf8f1","d","$9e17cf411dd40358$export$3b295495ca3cad7c","bias","steep","$idocm","sigmoid","$9e17cf411dd40358$export$b2743cdc8f493e4c","sigma","gaussian","$9e17cf411dd40358$export$aef51622e549b8b0","fn","$9e17cf411dd40358$export$f84e9db3e21d70da","$9e17cf411dd40358$export$84a796669b343655","$9e17cf411dd40358$export$4f04228877afea7c","$9e17cf411dd40358$export$cc90c508dce2375","y","$9e17cf411dd40358$export$97f359b03383e469","$9e17cf411dd40358$export$f672e0b6f7222cd7","initial","fns","Error","reduce","acc","$9e17cf411dd40358$export$1f4807a235930d45","$9e17cf411dd40358$export$971dd5b0dfd021b6","$8ecbc4a267002655$export$6b5c1ceb16d01dc3","Math","PI","$8ecbc4a267002655$export$ad5b0b9ab7d48f58","$8ecbc4a267002655$export$f504979d7e0a75c7","$8ecbc4a267002655$export$3a7bf289cac70393","$8ecbc4a267002655$export$24b096bfbaf849b7","$8ecbc4a267002655$export$460c4029b1a54a2e","$8ecbc4a267002655$export$914076c8150813e5","sqrt","SQRT2","$8ecbc4a267002655$export$56469a43a57ad8b6","$245598aa80e94fad$var$abs","abs","$245598aa80e94fad$export$3e1b8005eb6f3d68","max","$b3Rep","$7442e894d1ccdc6d$export$1991ecd29cc92c6b","$7442e894d1ccdc6d$export$1e044b7877db048c","$7442e894d1ccdc6d$export$a896d6add2646fd2","clamp01","$80d9442ffd6939d7$export$ed542a978b878ee8","$80d9442ffd6939d7$export$5c5ee632c52bc4a2","$80d9442ffd6939d7$export$2cacbc8823b89e46","$80d9442ffd6939d7$export$ddf89a9c5af38f94","min","$d42c3633369bd5dc$export$3b295495ca3cad7c","t","exp","$d42c3633369bd5dc$export$b2743cdc8f493e4c","$1IKwE","$5c1fa94e80714524$export$51eefdfe29bb7743","opts","samples","defaultOpts","delta","num","denom","$140dfd83ee7fa2ea$export$a6b6426cd03e2e0c","$f43386f5732c4009$export$e57a6fd1618ecc04","$f43386f5732c4009$export$98ce2b3ed2945148","$f43386f5732c4009$export$3185af65af73ead9","clamp0","$f43386f5732c4009$export$7a64407ee697185e","$f43386f5732c4009$export$feace113f5185195","$f43386f5732c4009$export$86c545aacd67038","$f43386f5732c4009$export$add4b3b2a3fdfd08","$f43386f5732c4009$export$d2e9a7541ee41f78","$f43386f5732c4009$export$b421851878e00d5","log","$f43386f5732c4009$export$e39672903da43639","$f43386f5732c4009$export$bdfb768eb9553391","$f43386f5732c4009$export$ae2ccf8d8d09af4d","$f43386f5732c4009$export$ec50fc5ace8e578e","$f43386f5732c4009$export$9eb52ba59a92799f","$f43386f5732c4009$export$d865221f8a2f38b8","$f43386f5732c4009$export$170002ee7fe2619b","specs","s","tnorm","norm","$50682a9431debc59$export$fbeb3a3956e8a3c7","$if","$50682a9431debc59$export$21c0ac7fe1cef1b8","$50682a9431debc59$export$3b0faaa20dcdd219","tnormProduct","$50682a9431debc59$export$252bb8b3bbdf6749","$a49f40cb39f26147$export$3a9d57cefcd2c285","$a49f40cb39f26147$export$b04d9b8d414ba5e8","threshold","maxID","$a49f40cb39f26147$export$fef61f332f2c0afc","$409d54880acc7a37$export$d2aea1953a827ab","sum","mean","i1","$1c7603f6f8cfcad8$export$17c4e692a4fe8245","peak","Infinity","peakPos","n","$1c7603f6f8cfcad8$export$e539eb4db7a5e56b","$1c7603f6f8cfcad8$export$77e921b333524de9","impl","$jlBNM","$e8hkk","$e15d4d29f81125b1$export$dc7ca828eacc3225","instrument","clear","deref","$e15d4d29f81125b1$export$681338ab542789a4","tree","$2B1be","varToHiccup","variable","main","labels","stroke","fill","width","height","translate","align","toFixed","$e15d4d29f81125b1$export$1bd018c07abd0193","$6jztK","serialize","$igtuW","convertTree","$e15d4d29f81125b1$export$3f02d673d6d5f586","empty","index","round","$4xlFy","barChartHLines","line","substring","join","replace","$hKuAA","repeat","$FlACA","$d4c09a4f3251021c$var$ATTRIB_ALIASES","dash","dashOffset","lineCap","lineJoin","miterLimit","$d4c09a4f3251021c$var$TEXT_ALIGN","left","right","center","start","end","$d4c09a4f3251021c$var$BASE_LINE","top","bottom","$d4c09a4f3251021c$export$f99e29d799980c69","implementsFunction","toHiccup","$7wTlr","attribs","$d4c09a4f3251021c$var$convertAttribs","$2Mt1u","fattribs","$adqSx","linearGradient","from","to","gradientUnits","gradientTransform","radialGradient","r1","r2","$iteXN","circle","$bwC2o","ellipse","$30xZk","roundedRect","$8tt3S","hline","vline","$g4OHS","polyline","$gpnJl","polygon","$HBijx","path","$4yyU5","text","$emZu5","image","src","$PRHW2","points","shape","size","packedPoints","aid","$d4c09a4f3251021c$var$convertAttrib","indexOf","$07c493b531c4061f$export$c915e14294a7d06f","$57b673e6083a4f68$export$43bee75e5e14138e","$d7268ae114c61a9b$export$e1d786d2f707b414","body","cx","ff","cy","$gEd1I","$206693d4819e136b$var$PRECISION","$206693d4819e136b$export$f59495b1b7502b33","$206693d4819e136b$export$42d36f2824c0b0e6","$206693d4819e136b$export$7d477c05f5a92f28","pts","sep","$206693d4819e136b$var$DEFAULT_NUMERIC_IDS","$206693d4819e136b$export$e231b4ce9b5bc361","numericIDs","$206693d4819e136b$var$ftransforms","$206693d4819e136b$export$62df6b0d320bc360","ids","concat","$206693d4819e136b$var$numericAttribs","transform","scale","rotate","$3iDVp","isString","$206693d4819e136b$var$buildTransform","tx","isArrayLike","col","$hKTjc","css","$206693d4819e136b$export$2c5684c03145c298","keys","dest","hasOwnProperty","has","$c1ea7c9e033a90e4$export$1e2f57719e155213","undefined","$267205d238571519$export$844ec244b1367d54","$dDILv","$ced1a2b58e3f8ad0$var$CSS_CONVERSIONS","abgr32","$jgc7s","intArgb32Css","$8xk4s","intAbgr32Argb32","argb32","hsl","$kAJGY","hslCss","hsv","$5v3Qr","hsvCss","lab50","$gq3jP","srgbCss","$98Wuw","rgbSrgb","$2ZIof","labRgb","lab65","labRgbD65","lch","$c7olw","lchLab","rgb","$orSuv","rgbCss","srgb","$ced1a2b58e3f8ad0$export$dbf350e5966cf602","asCss","isNumber","mode","$8QKZL","convert","$9ee1a44d217ef12a$export$7e4aa119212bc614","$6717a256bd999658$export$5ffd082a0121a803","$6717a256bd999658$export$9c68d69a4c5bbcf9","destMode","srcMode","spec","$j3TvI","assert","$convert","$cBDSi","unsupported","$etiyu","$de095b58d05f9605$export$7750cdfb4db2c3d","defError","$de095b58d05f9605$export$a7a9523472993e97","$kjyEk","env","__SNOWPACK_ENV__","MODE","UMBRELLA_ASSERTS","SNOWPACK_PUBLIC_UMBRELLA_ASSERTS","test","msg","$a8922ad6ac771822$export$651a6eb01ea522f3","prefix","suffix","constructor","super","$92d7df06a9bfefbd$export$ab59e00737fb22e6","$92d7df06a9bfefbd$export$98e633703a635f","$efda9cf51236526c$export$9f8f8a3ea2b4cd19","$d5auC","FF","$fZRgC","fract","PC","l","$Wyxq9","__ensureAlpha","$ba55df38f0721293$export$a57bfe0eb79af278","floor","$iMzX3","Object","freeze","$9863e1a6c7f030ee$export$5bd959522fbb33fb","$9863e1a6c7f030ee$export$68ca3d30fbda6075","$9863e1a6c7f030ee$export$eea70998d27a3f6e","$9863e1a6c7f030ee$export$5c2abc406650e66e","$9863e1a6c7f030ee$export$7c02aa34d7a477ed","float","$9863e1a6c7f030ee$export$ad91c6f2dc8f3b45","$aMfud","percent","$9863e1a6c7f030ee$export$e3eaf67d84630857","$2u5nr","$dac898ec9159fd12$export$6b5cd3983e3ee5ab","memoizeJ","prec","special","$dac898ec9159fd12$var$nanOrInf","$dac898ec9159fd12$var$exp","pl","pow","pln","pr","pad","$ehmJY","padLeft","ax","w","toExponential","LN10","isNaN","$1cf28ddfef9402fc$export$c7d5ea85f8b34f37","cache","args","JSON","stringify","apply","$a6544b089aa97db5$export$bc3bea8325045070","ch","buf","String","len","toString","$cebe75e930b558b3$export$76d90c956114f2c2","$7d8a6654c61515ad$export$626336c2cd4b14de","$0b00356e5231fae4$export$4598496351993abf","def","$4012d47e94adf1fb$export$edd4de491f545268","$gFgZm","hsvHsl","$7jnxH","$c21da7459c416dbf$export$61d1db33a18350ee","clampH","$552c91d2222deaa6$export$dd799b5658f51338","$e7C45","setC4","$a47f3f06b79dc536$export$abee0037e1db715","z","$8uJ74","$e058e9920b335110$export$24204ee321516b1e","INV8BIT","U24","$hA1s4","$62f41e8fd5c9b539$export$1db3e511bfb04803","$62f41e8fd5c9b539$export$cd6994b9dff50e87","U8","U16","U32","U64HL","$ccc6ecc06e2ee449$export$ab3b77028c846f42","$ccc6ecc06e2ee449$export$b85f1fec329875bb","$ccc6ecc06e2ee449$export$a3d4e5b5a9aac813","$ccc6ecc06e2ee449$export$cd6994b9dff50e87","$ccc6ecc06e2ee449$export$70e00273ab09d5a4","$ccc6ecc06e2ee449$export$99716b77ded3ae32","hi","lo","$bI0dh","swapLane13","$6370f973e36fedc9$export$e3eb1622afc10abb","$02332929be6465ef$export$e435b7543c492d7a","$8d2906190c11cfec$export$1d9aa1122f81fc3e","TAU","cos","sin","$3a4f1f4cb19449eb$export$8e3badfd6976e5c","theta","$3a4f1f4cb19449eb$export$64813598e5fb2450","atan2","$iZV1A","$22e3b63828665193$export$62c4a88ec5f406a7","$2Svvr","xyzRgb","labXyz","$22e3b63828665193$export$9977adf6ced6e7be","xyzRgbD65","labXyzD65","$dd4a286763d5e1b3$var$transform","$dd4a286763d5e1b3$export$e2f27988cc5b3a12","white","D50","$dd4a286763d5e1b3$export$5bbeea95f392b8fe","D65","$2189105b9c0a52f8$export$3772e887938e648f","mat","XYZ_RGB_D50","$1o9hz","__mulV33","$2189105b9c0a52f8$export$b144c3ea0bb0eb35","XYZ_RGB_D65","$102f3b9b44b11d55$export$eaa9061711f71897","clampOut","$1YZWK","dotS3","$9Ph15","$171b7252edd65904$var$$","dim","compile","$arJeP","DOT","SARGS_V","$171b7252edd65904$export$78ae608fdbee4899","$171b7252edd65904$export$7cff64c0e2ba076b","$76uT9","$7276139e9b166409$var$indicesStrided","sym","$9vOmG","$7276139e9b166409$var$lookup","$jghd5","range","$7276139e9b166409$var$indices","$7276139e9b166409$var$assemble","tpl","syms","ret","opJoin","pre","post","strided","$srAm0","transduce","comp","$bbWqD","take","$3v2Je","mapIndexed","$gN7pB","str","$02xyr","zip","split","$7276139e9b166409$export$ef7acd7185315e22","Function","$bk1Zj","$52c10dc5beb319a2$export$1af3c925c49f37a2","$9hge2","ensureTransducer","$6e4MG","$83e31ab9c227ac59$export$1af3c925c49f37a2","e","g","j","illegalArity","xs","$4887c2e83ee0e1fa$export$772aa0961a81b065","$4887c2e83ee0e1fa$export$9f1b9fbfe882200d","$6c1249a1d6aa37d0$export$eca2c7e8e95bbf0a","xform","$gM30a","$6ece13b81c73fbd8$export$871de8747c9eaa88","isIterable","$59d8y","iterator1","rfn","$1ithj","compR","$c363751be7a364ca$export$9652023d9040757","Symbol","iterator","$0f1e2eee541846e9$export$5adef4befe47917","$d7URR","$3bf7fbc11c749498$export$6f58e2338da23f4d","$5vuAW","complete","$5fqzU","isReduced","unreduced","$3bf7fbc11c749498$export$a6bff14a9cefe0e8","NO_OP","_","x1","SEMAPHORE","$3bf7fbc11c749498$export$9b6eac2a13c3d07","$98e80a90e40fa20a$export$a7d1fa727cb10b0e","$98e80a90e40fa20a$export$ca96bc7645ad7951","$izmAZ","$4027947d8f0923ec$export$4cbf152802aa238","reducer","$d84d05e386aa3a07$var$parseArgs","$d84d05e386aa3a07$export$533b26079ad0b4b","$reduce","$d84d05e386aa3a07$var$reduceArray","$d84d05e386aa3a07$var$reduceIterable","$d84d05e386aa3a07$export$7fef8bcdbb34f435","$d84d05e386aa3a07$export$1650419e431d3ba3","$3d22f85a6b795877$export$ce266a425291df6c","val","$3d22f85a6b795877$export$447808b60b7559bd","$3d22f85a6b795877$export$ebab785f9ea33473","$3d22f85a6b795877$export$f2412ace46b7b087","$3d22f85a6b795877$export$7ca7c14b24aa137b","$28c6623038fbafa9$export$e5bd5b3b105c2a71","__iter","$e05cdc7dcd381384$export$d02631cccf789723","step","$e05cdc7dcd381384$export$9a58ef0d7ad3278c","n1","$c396f8cd2ab94348$export$42d51816ce590c93","first","$825e0b7e7cc96b79$export$b7df5d561049483a","m","ensureReduced","reduced","$055803843bff21ba$export$9608d0eacffd6284","$055803843bff21ba$var$$transduce","tfn","$007a37433dacb342$export$8901015135f2fb22","iters","tuple","next","done","$cf631966efc72252$export$c37d18c23b2ea60c","impls","fallback","fn1","add","default","$79af845dca577ee5$export$19dc841295b49698","$79af845dca577ee5$export$ccd27f3e7091205c","$79af845dca577ee5$export$9e772ae751f37666","$79af845dca577ee5$export$8443f1c33458c80b","$79af845dca577ee5$export$ff73a40106eb353","$79af845dca577ee5$export$381b62756f034f68","$79af845dca577ee5$export$da5c1e34018ecc43","o","$79af845dca577ee5$export$6ab71ad6f57b0093","$79af845dca577ee5$export$f160d69d51fe9b08","$79af845dca577ee5$export$6a70b64fb8d54a06","$79af845dca577ee5$export$b4ea1049a5419b4f","$79af845dca577ee5$export$9de9c213a2a487cd","$79af845dca577ee5$export$9092249dcc75f1af","$79af845dca577ee5$export$4061f92b6da4a345","$0497ddf92283ee2d$export$dcb9395974b8f0ee","$6a823b9663e5eeea$export$b06545aaa0d83879","$e2DTY","linearSrgb","$a39034447d30480a$export$5b10bb54545ea67e","$bf41a6160824fadc$export$c36810b35ab8bee","$86hsW","__scale8bit","$5e5c6e9cb3688e61$export$554b877bc529ff07","shift","$86403057ad53599a$export$35eec893e28a8a34","rx","ry","$76fff7d0540da2ad$var$RE_ALPHA_COLOR","$76fff7d0540da2ad$var$gradient","stops","$76fff7d0540da2ad$var$gradientStop","offset","opacity","fcolor","parts","exec","$76fff7d0540da2ad$export$46def8197cf4dd4c","y1","x2","y2","$76fff7d0540da2ad$export$3922d1ccb8631cd8","fr","fy","$a762d03f1ffe7146$export$5c452ff88e35e47d","pos","url","$62b7932f6e5d5b8e$export$53f1d5ea8de3d7c","$62b7932f6e5d5b8e$export$2df5bdd8b966ac4","$62b7932f6e5d5b8e$export$3a5e1a579cc94345","$0830f227f93771a7$var$DEG","$0830f227f93771a7$export$bb654e07daaf8c3a","segments","seg","fpoint","fpoints","$09be6cc075896af8$export$9f048bf86ee2e9d2","group","withoutKeys","Set","href","$09be6cc075896af8$var$buildSymbol","$09be6cc075896af8$export$b85fb4d244eabd8b","cstride","estride","random","$09be6cc075896af8$var$buildShape","rf","rf2","$bf2163853c2f4aff$export$b7b19aa0ee06c73","$bb445a616bbc5f8f$export$8d69707c7074d5c0","$230bbc86966138c2$export$f7872201cf44b006","$35156988527e8544$export$6f093cfa640b7166","$4OtrF","$499009c35e5c4a4a$export$dfdc1655ccc5b9cb","ctx","escape","span","$499009c35e5c4a4a$var$_serialize","esc","$499009c35e5c4a4a$var$serializeElement","$3NzRj","isFunction","isDeref","$aISop","isNotStringAndIterable","$499009c35e5c4a4a$var$serializeIter","$4gXEQ","escapeEntities","$7n8kN","COMMENT","$499009c35e5c4a4a$var$serializeComment","CDATA","$499009c35e5c4a4a$var$serializeCData","$499009c35e5c4a4a$var$serializeTag","$1ig82","illegalArgs","$dMK1i","normalize","__skip","__serialize","$499009c35e5c4a4a$var$serializeBody","VOID_TAGS","NO_CLOSE_EMPTY","PROC_TAGS","$499009c35e5c4a4a$var$serializeAttribs","startsWith","$499009c35e5c4a4a$var$serializeAttrib","$499009c35e5c4a4a$var$serializeDataAttribs","$499009c35e5c4a4a$var$attribPair","$9jQsu","isPlainObject","$7egGx","$fnV9G","formatPrefixes","ATTRIB_JOIN_DELIMS","data","proc","NO_SPANS","iter","$3812ac2a128ca1da$export$30d24422b9d31ae7","$3812ac2a128ca1da$export$bf2c6441f7dc7794","$2c41c38cd7c3e49b$export$f6e2535fb5126e54","$7ce834b3a7034363$export$6205c4f3fbda8adf","$6c8e94968b4ca3cb$var$OBJP","getPrototypeOf","$6c8e94968b4ca3cb$export$53b83ca8eaab0383","$0f13fbb5497704ba$export$10a4c2bfc9c71dbd","$0f13fbb5497704ba$export$85f6a9f917d452ba","$31c6eed836bced0b$export$b02a5bc929abafb3","$31c6eed836bced0b$export$d517bfdb8f405ff6","RegExp","$31c6eed836bced0b$export$980c9f4d9d259b71","entries","$31c6eed836bced0b$export$401c787247b59b1b","$31c6eed836bced0b$var$$esc","re","$31c6eed836bced0b$export$b9ea4f69b3e62b42","$01629960a52704f8$export$f440b863822070d2","$01629960a52704f8$export$ad55ff7dc9b675e3","$01629960a52704f8$export$a29989082612d0d9","$01629960a52704f8$export$1f8b8f7e5c763232","$01629960a52704f8$export$375e1b65ae223aa7","button","option","script","style","textarea","title","$01629960a52704f8$var$tagMap","tags","$01629960a52704f8$export$ed6f5002e66e589","$01629960a52704f8$export$d784bcb2be7ffc44","$01629960a52704f8$export$cc3c1082879e4b3d","accept","sizes","srcset","$5436c880931c664b$export$dbf350e5966cf602","$a09374a62636386b$export$a3295358bff77e","match","name","hasAttribs","RE_TAG","$hB81i","mergeEmmetAttribs","$ccfc1cf8ccc4f699$export$3d46f4579dba46e5","existing","classes","delete","$ccfc1cf8ccc4f699$export$80a4f036b3ec99f5","aclass","$b33556d9293fe0f3$export$590d38bd82419295","prefixes","$34db0d878d99f2c7$export$96584b1bb081eac6","bars","$34db0d878d99f2c7$export$c010f7ddbc55ebb4","delim","$34db0d878d99f2c7$var$bar","$jyhsh","BARS_V","chars","full","partial","$4GsZB","padRight","$36919300aae0171a$export$7e24a29324041c48","$e3bebb84bfb4456c$export$f60fd70865eea589","$e3bebb84bfb4456c$export$d8e9c9d63e86d41e","$e3bebb84bfb4456c$export$419d1f889fbb86f5","hl","vl","tl","tr","bl","br","tjl","tjr","tjt","tjb","jct","dot","$e3bebb84bfb4456c$export$40f4651f7387c059","$e3bebb84bfb4456c$export$845402ca286530ec","$1e3ff3d26a8bac71$export$34b26ef2fbe840fb","strokeFn","fillFn","dt","ds","dn","curves","legend","curr","baseline","zero","$3hm9n","svg","inRange","$1e3ff3d26a8bac71$export$6db8e22de51d4d30","$var","$875dM","$263424385917c718$export$7ed1367e7fa1ad68","version","xmlns","XML_SVG","XML_XLINK","$5e83070282f66a49$export$c9fe906cf492e9ce","$5e83070282f66a49$export$9a4378cdb5814618","$aa72d2e69fd2fe14$var$win","window","$parcel$global","self","module","exports","console","$56615c93f45a88ca$var$doccy","$56615c93f45a88ca$var$topLevel","$5887f0166246f05a$export$53a7a624fc0b20e7","$5887f0166246f05a$export$b176b5be1c88c7ef","aThis","func","quotedFuncName","defineProperty","arguments","writable","enumerable","configurable","__proxy__","interpreter_name","transpiler_name","executor_name","transpiler_version","$5887f0166246f05a$export$cf1541f4f7970401","__name__","__bases__","__new__","meta","bases","cls","base","attrib","descrip","getOwnPropertyDescriptor","symbol","getOwnPropertySymbols","__metaclass__","$5887f0166246f05a$export$be5493f9613cbbe","__init__","instance","create","__class__","Proxy","get","target","result","__getattr__","set","__setattr__","exception","$5887f0166246f05a$export$3c2ba1e81bcc0e7a","$5887f0166246f05a$export$16e898aa56ce2149","anObject","__kwargtrans__","$5887f0166246f05a$export$7213099583d9aaf6","descriptor","$5887f0166246f05a$export$8ff94425fcde1fdd","targetClass","sourceClass","fieldNames","fieldName","fieldName1","$5887f0166246f05a$export$8474a990a4d0acec","element","container","__contains__","$5887f0166246f05a$export$70feb953d139d53b","startswith","endswith","$5887f0166246f05a$export$fc1400facf92c78","__len__","attr","$5887f0166246f05a$export$6b5cd3983e3ee5ab","$5887f0166246f05a$export$4154a199d7d90455","NaN","parseFloat","$5887f0166246f05a$export$54d4c18dc78a26d4","$5887f0166246f05a$export$42d51816ce590c93","$5887f0166246f05a$export$7d260a2a5f8bc19e","$5887f0166246f05a$export$87b259aa03e3d267","__bool__","$5887f0166246f05a$export$15884b7e0cc13f68","aType","$5887f0166246f05a$export$5b7d633f75bdb5f2","aClass","classinfo","aClass2","$5887f0166246f05a$export$bf853a0e060b4ca6","$5887f0166246f05a$export$b99274b67bb002a3","__repr__","__str__","comma","isnumeric","attribRepr","capitalize","$5887f0166246f05a$export$8960430cfd85939f","nrOrSeq","$5887f0166246f05a$export$96ec731ed4dcb222","$5887f0166246f05a$export$2335f513bbd82c6d","$5887f0166246f05a$export$2077e0241d6afd3c","number","ndigits","rounded","$5887f0166246f05a$export$70a757bad99001cf","iterable","$5887f0166246f05a$export$1d5533d51fac234","$5887f0166246f05a$export$8837f4fc672e936d","$5887f0166246f05a$export$65e3907585753458","$5887f0166246f05a$export$adaa4cf7ef1b65be","prototype","__next__","$5887f0166246f05a$export$aedc89762f45ad86","py_keys","__iter__","__getslice__","stop","__setslice__","source","splice","sourceIndex","targetIndex","append","py_clear","extend","aList","insert","remove","py_pop","pop","py_sort","$5887f0166246f05a$export$ad7d2b4a768aad41","__add__","__mul__","scalar","__rmul__","__bindexOf__","mindex","maxdex","middle","discard","isdisjoint","other","sort","issuperset","issubset","intersection","difference","sother","symmetric_difference","py_update","updated","__eq__","__ne__","__le__","__ge__","__lt__","__gt__","stringable","$5887f0166246f05a$var$__contains__","$5887f0166246f05a$var$__keys__","$5887f0166246f05a$var$__items__","items","$5887f0166246f05a$var$__del__","$5887f0166246f05a$var$__clear__","$5887f0166246f05a$var$__getdefault__","aKey","aDefault","$5887f0166246f05a$var$__setdefault__","$5887f0166246f05a$var$__pop__","$5887f0166246f05a$export$8c95827fbbe6002d","$5887f0166246f05a$var$__popitem__","$5887f0166246f05a$var$__update__","aDict","$5887f0166246f05a$var$__values__","values","$5887f0166246f05a$var$__dgetitem__","$5887f0166246f05a$var$__dsetitem__","aValue","$5887f0166246f05a$export$b7eef48498bbd53e","objectOrPairs","pair","aKeys","Uint8Array","aBytes","py_replace","charAt","toUpperCase","find","sub","autoIndex","isalnum","isalpha","isdecimal","isdigit","islower","isupper","isspace","isFinite","strings","lower","old","aNew","maxreplace","lstrip","rfind","lastIndexOf","rsplit","maxsplit","stripped","strip","maxrsplit","rstrip","py_split","trim","upper","docString","__doc__","$5887f0166246f05a$export$9c297f60e22e3389","__pow__","__rpow__","$5887f0166246f05a$export$160edda5e7d54769","__module__","$5887f0166246f05a$export$e2f174de097e0bcd","kwargs","__ilastarg0__","__allkwargs0__","__attrib0__","__args__","error","stack","format","message","$5887f0166246f05a$export$c688898c4e3580ee","reverse","$5887f0166246f05a$export$435a7312558a064","buffer","getElementById","__except0__","overflowX","boxSizing","padding","innerHTML","print","__accu0__","arg","scrollTop","scrollHeight","input","question","answer","prompt","$5887f0166246f05a$export$930597ed3460b56d","$a60cd1f346d68036$export$92ce8cce26bb97e1","$a60cd1f346d68036$export$13f9d3c4397c4713","$a60cd1f346d68036$export$e17b9c1182212c96","$a60cd1f346d68036$export$fccf159508bf68e1","$a60cd1f346d68036$export$219f444f5c9a3497","$a60cd1f346d68036$export$8291e5b88f90ce4","$a60cd1f346d68036$export$5a7bfc01df82fcd1","$a60cd1f346d68036$export$ab4b2cf752612b14","Number","$a60cd1f346d68036$export$e0f35d825088c098","default_factory","$a017a9f092833bec$export$eba8049fb5020b81","E","$2502f1d52cdc7431$export$b1778e7c62739fdb","tan","asin","acos","atan","hypot","sinh","cosh","tanh","asinh","acosh","atanh","ceil","trunc","names","__initfields__","__reprfields__","fields","__comparefields__","selfFields","otherFields","$2502f1d52cdc7431$export$e947a0f742cf021e","aClass1","$2502f1d52cdc7431$export$e71c4d32a2263218","color","$2502f1d52cdc7431$export$afbf1b5adefd01cb","dir","aClass3","$2502f1d52cdc7431$export$bc644a473284d944","update_","aClass4","$2502f1d52cdc7431$export$50f02d20b9547443","background","observers","pawns","py_get","entity_id","aClass5","$2502f1d52cdc7431$export$be96d6995b1d18de","inputs","outputs","aClass6","$2502f1d52cdc7431$export$1a47f4748062a0cc","Up","Down","Left","Right","UpLeft","UpRight","DownLeft","DownRight","Zero","$2502f1d52cdc7431$export$a3295358bff77e","mag","$2502f1d52cdc7431$export$539b1fa16df3ef07","normalized_x","normalized_y","$2502f1d52cdc7431$export$9c46984f0a00d0e4","box","$2502f1d52cdc7431$export$58562ed76859f660","boundary","bot_pos","boundary_pos","$2502f1d52cdc7431$export$6e973f0109418dc9","$2502f1d52cdc7431$export$9478d87ca1c9d448","origin","origin_center","target_center","$2502f1d52cdc7431$export$ee1b3e54f0441b22","$2502f1d52cdc7431$export$701d2b339d1c8e82","cancelAnimationFrame","$2502f1d52cdc7431$export$16e4d70cc375e707","up","down","aClass7","$2502f1d52cdc7431$export$8ee08b81040356b6","is_down","aClass8","$2502f1d52cdc7431$export$1940fdf4ffd9b9a6","$2502f1d52cdc7431$export$b6a515c4b753a03e","$2502f1d52cdc7431$export$bd93284573705464","keyboard","$2502f1d52cdc7431$export$306462d0264344d","$2502f1d52cdc7431$export$2057108dae6d426b","to_msg","$2502f1d52cdc7431$export$31eb53bd5b582a97","$2502f1d52cdc7431$export$17c93190d55bd32e","preventDefault","$2502f1d52cdc7431$export$13c39262db9ce7c1","$2502f1d52cdc7431$export$74a5f1f991c6ff51","bot","player","proximity","visibility","aClass9","$2502f1d52cdc7431$export$bab83035b0be2ead","restart","patrol","pursue","attack","$2502f1d52cdc7431$export$e213b75beda95cef","max_steps","patrol_dirs","speeds","aClass10","$2502f1d52cdc7431$export$e8483be4cc205ba5","steps","aggression","controller","config","aClass11","$2502f1d52cdc7431$export$2616165974278734","aClass12","$2502f1d52cdc7431$export$640e7c9f21fb7a6d","distance","inner_rect","outer_rect","aClass13","$2502f1d52cdc7431$export$7254cc27399e90bd","entities","update_order","render_order","show_stats","show_charts","aClass14","$2502f1d52cdc7431$export$9bcc32033bdd12aa","aClass15","$2502f1d52cdc7431$export$ac6dd67b4ba91a63","item","__left0__","item_box","item_pos","boundary_box","boundary_offsets","$2502f1d52cdc7431$export$bfa5034d3915ca55","$2502f1d52cdc7431$export$ded89cb86cad81d6","$2502f1d52cdc7431$export$873ff31f77499a65","$2502f1d52cdc7431$export$70342ff6ae08f004","$2502f1d52cdc7431$export$c74a4f3e8fbea593","$2502f1d52cdc7431$export$4d0de893ee664323","$2502f1d52cdc7431$export$97275b04b3df2ffb","$2502f1d52cdc7431$export$cc0556d3462191a4","target_pos","origin_pos","to_target_dir","$2502f1d52cdc7431$export$6110c8a43d891788","_visibility","$2502f1d52cdc7431$export$1121f6f8cf783189","$2502f1d52cdc7431$export$e11e7d7dd13166a8","$2502f1d52cdc7431$export$96bfd64488ae40be","$2502f1d52cdc7431$export$8b4dfb1da6548eec","$2502f1d52cdc7431$export$71436f39d7b1a861","$2502f1d52cdc7431$export$2bad4a3269f360f5","boundary_center","boundary_diagonal","near","neutral","trapezoid","far","ramp","hidden","peripheral","visible","low","medium","high","and_","$2502f1d52cdc7431$export$a53c6d985a256fa1","keyboard_dir","prev_dir","next_dir","$2502f1d52cdc7431$export$4203e27b3f0403cf","$2502f1d52cdc7431$export$cf468aed7cd7f58d","defuzz","$2502f1d52cdc7431$export$e3124832042a5fe2","aggression_level","classify","$2502f1d52cdc7431$export$b280318de0a2f763","speed","$2502f1d52cdc7431$export$c3432067bf4204aa","$2502f1d52cdc7431$export$61f7925cec4e44b3","arrow_center","other_center","$2502f1d52cdc7431$export$2cd8252107eb640b","_state","$2502f1d52cdc7431$export$e8e604396527a1f1","tick","$2502f1d52cdc7431$export$6a338cf6c9ba1f22","$2502f1d52cdc7431$export$76a958ce4253a24a","$2502f1d52cdc7431$export$ecb61323a9a3a29e","ref","entity","$2502f1d52cdc7431$export$1aad575817daf5a7","rect","$2502f1d52cdc7431$export$1542030adfb0fc73","div","$2502f1d52cdc7431$export$8b03d5809b18605e","elem_id","varToSvg","$2502f1d52cdc7431$export$fb66677413548747","$2502f1d52cdc7431$export$1849ff6b2cc45597","$2502f1d52cdc7431$export$c4ddc81c7b2c8d7a","viewBox","onclick","app"],"version":3,"file":"index.cdfbbead.js.map"}